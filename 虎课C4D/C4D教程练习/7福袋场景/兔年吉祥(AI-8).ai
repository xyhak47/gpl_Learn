%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 21.1.0
%%For: (hp) ()
%%Title: (\715\703\704\752\674\652\717\751\(AI-8\).ai)
%%CreationDate: 1/4/2023 1:05 AM
%%Canvassize: 16383
%%BoundingBox: 291 -398 530 -188
%%HiResBoundingBox: 291.3047 -397.1924 529.1269 -188.4303
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%RGBProcessColor: 0 0 0 ([\714\727\660\746\711\653])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 421.5 -298.5 421.5 -298.5
%AI3_TileBox: 0.045006 -595.24 841.845 -0.039994
%AI3_DocumentPreview: None
%AI5_ArtSize: 841.89 595.28
%AI5_RulerUnits: 1
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -478 209 0.5 1834 1130 18 1 0 153 233 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:21 -598
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%AI7_Thumbnail: 128 112 8
%%BeginData: 18919 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD75FFA852F8F827A8FD79FFA827FD05F8A8FD78FF52FD06F87DFD
%3AFFA8FD07FFA8FD07FFA8FD15FFA8FD0DFF7D527DFD07FFFD07F87DFD37
%FF7D27F82727A8FFFFFF7D2727277DFD04FF5227F82752FFFFFF7D52F827
%52FD09FF2727F87DFD09FFA8FD04F827FD05FF7DFD07F8A8FD10FFA8A8FD
%24FF52FD06F8A8FF7DFD05F87DFFA8FD06F827FF7DFD06F8FD07FFFD05F8
%52FD08FFFD06F827FD04FF52FD07F8FD10FF52F8F8A8FD22FFA8F8F827A8
%A8F8F827FFF8F827A827F8F8FF52F8F87DA852F8F8A852F8277D7DF8F852
%FD05FFA8FD06F8FD07FFA8FD07F8A8FFFFFF27FD06F87DFD0FFF52F8F8F8
%27A8527D52522752275252A8A8FD17FF2727A8FFFF52F8277DF8F8A8FFA8
%F8F87DA8F87DFFFF7DF8F87DA87DA8FFFFF8F852FD06FFFD06F827FD07FF
%FD07F852FFFFA8FD06F827A8FD0EFF7DFD10F82752FD1BFFF8F8527DF827
%A8FFA827F87DFD05FF7DF8F87DFD04FF7DF8F87DFD06FF7DFD06F82752A8
%FD04FFA8FD07F8A8FFA8FD06F852FD0EFF7DFD14F852FD18FF52F8F8A852
%F8F8FFFFFFF8F852FD04FFA8F8F8F8FD04FF27F8F852FD04FFA827FD0BF8
%52FD04FFA8FD07F852FD07F827277DFD0BFFA827FD15F852FD16FF52F8F8
%27FF52F827FFFFFF27F852FD04FFF8F8F8A8FD04FF52F8F827A8FFFFA8FD
%0EF87DFFA8522727FD11F8A8FD0AFF27FD17F8A8FD14FF52F8F827A8FF52
%F8F8FFFFFFF8F852FFFFA8F8F8F87DFD06FFA827F827A8FF27FD0EF827A8
%27FD14F87DFD09FF7DFD18F852FD13FF52F8F852FFFFFF7DF8F8A8FFA8F8
%F87DFFA8F8F8F8A8FD08FF7DF8F8A8FF52FD0FF852FD15F87DFD08FFA8FD
%09F852527DFD04A87D52FD07F852FD0BFFA8A8FD05FF52F8F852FD04FF7D
%F8F87DFFA8F8F87DFFF8F8F8A8FD04FF27F87DFFFF52F8F8A8FF7DFD0FF8
%2727FD14F87DFD08FFFD08F87DFD0AFF7DFD06F827FD0AFF52F8F827FD04
%FFF8F8F8275227277DFFF8F8277DF8F8F8FF52F8F8FD042752A827F8F852
%52F8F827FFFFFFA852F8F8F827275227FD06F852FD14F827FD08FF27FD07
%F8A8FD05FFA8FFA8FFFFFF27FD06F852FD09FFA8FD04F852FFFFFFFD07F8
%27FF7DFD05F87DFF7DFD07F8A8A8FD06F8A8FD06FFA8A8A8FFFFA8FD06F8
%527DFD0DF852527D527D7DFD08FFA827FD06F852A85252FD0427F8272727
%FD08F8A8FD09FF52FD04F827FD04A852FD057DA8FFFFFF525252A8FFFFFF
%A8FD047D2752FFFFA87D27527DFD0DFF7DFD06F87DFFA87D7D7DFF52FD06
%F852FD0EFFA8FD1BF8277DFD07FFA8FD0AF8FD0527FD04527DA8FD0AFF52
%F8F852FD12FFA8FD07F8A8FD06FFA8FD07F8A8A87D7DFD0BFF52FD1DF87D
%FD05FF52FD15F827A8FD08FFFD04F87DFD10FFA827FD06F827FD05FF7DA8
%27FD0BF827FD0AFF52FD1EF852FD04FFFD17F852FD07FF7DFD05F8272727
%F827F82727FD07FF7DFD08F8A8FFFFFFA8FD10F827FD08FFA8FD20F852FF
%FF7DFD17F852FF7D7D52522727FD0EF852FD04FFA827FD08F87DFD04FFFD
%11F827FD08FF52FD14F827FD0CF87DFF27FD05F8FD0527FD0DF8A87DFD14
%F87DFFFF7D27FD09F8A8FD04FFA8FD12F8FD08FFFD0AF82727FD07F827A8
%FFFFA87D52FD08F827FFFD05F852FD05FF52FD05F8527D7D525252A8FF7D
%FD11F827F852FFFF52FD0AF8A8FD06FFFD11F87DFD07FF52FD08F8527DFF
%7DFD07F87DFD06FF7DFD08F8A852FD04F87DFD05FF52FD05F87DFD07FFA8
%27F8272752527D27FD04F87DA8FFA8FD05FF27FD0BF8277DA8FD04FF52FD
%0DF82727A8FD08FF52FD07F8A8FFFFFF7DFD06F827FD08FF52FD07F8FFFF
%52F8F8F852A8A87D7D7D27FD05F8272727F852A8FD07FFA8FFA852FD04F8
%27522727F852A8FF7DFD0EF827A8FD04FF7D27525227FD06F827FD0CFF27
%FD06F852FD04FFFD07F87DFD08FF7DFD07F8A8FFFFFF27FD12F827FD04FF
%7D27FD0FF852FF52FD0FF852FD08FF7DFD06F852FD0CFF27FD06F852FFFF
%FF7DFD07F8A8FD08FF7DFD07F8FD04FF52FD13F8FFFFFFA8FD11F852FF52
%FD0FF827FD08FFA8FD07F87D7D7D527D7DFD06FFFD08F8A8FFFF52FD06F8
%27FD08FFA8FD08F8A8FFFFFFFD13F827FFFFFFA8FD0DF8FD0427FFFFFF27
%FD0EF852FD04FFA8A87D52FD0FF8FD05FF52FD07F8277DA8FD07F87DFD06
%FFA87DFD08F827FFFFFFA8FD0FF827522752A8FD04FFA8275252FD047DA8
%A8FFA8FD09FF5227F827FD09F827A8FFFFA827FD13F827FD04FF52FD11F8
%277D7D7D525227FD0AF87DFFFFFF7DFD05F8527DA852FD05F827FD0BFF7D
%7D52522727F827F8F8F827277DA8FD08FF52FD05F8277D7DA8FFFFA8FD15
%F827A8FD04FFFD21F852FD04FF7DFD04F852FD04FFFD05F852FD09FFA8FD
%10F87DFD07FF7DFD05F827FD05FF52FD15F827FD05FFA8FD1FF852A8FD04
%FF7DFD04F852FD04FF27FD04F827FD09FF27FD11F87DFD06FFA8FD05F827
%FD05FF52FD15F87DFD07FF27FD1CF87DFD06FF52FD04F852FFFFFFA8FD06
%F8527D527D7D7DA8FFA8FD06F827527D7D7D527D27FD04F852FD06FFA8FD
%06F8FD05FF7DFD10F827F82727A8FD09FF7D27FD18F87DFD06FF7D5227FD
%16F8A8A8FD04F852FD09FF52F8F8F827FD07FFFD06F8A8FD05FF52FD04F8
%27FD08F827FFA8FD0FFFA87D52FD10F82727F8F8F8A8FD05FF7DFD19F852
%52FD04F8FD0AFF52F8F8F852FD07FF27FD05F8A8FD06FFA87D7DA8A8FF52
%FD06F852FD13FF7DFD07F87D27FD06F87DFFFD05F8A8FD04FFFD1AF8527D
%FD05F8FD07522727FD04F827FD07FF27FD05F8A8FD0CFF7DFD06F827FD13
%FF7DFD06F827FFFD06F852FFA8FD05F852FD04FF27FD19F8FFA8FD12F87D
%FD07FFA8FD04F852FD0DFF7DFD06F852FD13FFFD07F87DA8FD06F87DFFFF
%27FD04F852FD04FF52FD08F8272727FD08F82752527D52FFFFFF27FD10F8
%52FD09FF7D27277DFD0EFFA8FD06F827FD12FFA8FD07F8FFA8FD06F8A8FF
%FFFF27F8F8F87DFD05FFA87D7DA8A8FFA8FD05FF52FD05F87DFD09FF7D52
%2727F827F827F827F827F827527DFD1CFF7DFD06F852FD12FF7DFD06F827
%FF7DFD06F852FFFFFF7DFD05F87DFD0FFF7DFD05F8A8FD04FFA8FFA8FFA8
%FFFFFFFD0BA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FD04FFA8FD06F827FD12FF27FD06F87DFF7DFD07F8272727FD07F87D
%FD0EFF7DFD05F8A8FF7D27F827F827F827F827F827F8272727F8272727F8
%27F827F827F827F827F827F827F827F827F827F827F827F827F827F852A8
%FFA8FD06F827FD11FFA8FD07F8A8FFA8FD11F827FD0EFFA8FD05F8FFA8FD
%32F827FFA8FD07F8FD12FFFD06F827FFFFFF27FD10F852FD0EFF7DFD05F8
%FF7DFD33F8A8FFFD06F852FD12FF27FD05F87DFFFFFFA8FD10F87DFD0FFF
%FD04F827FF27FD33F87DFF52FD05F87DFD12FFA827F8F8F852FD05FFA827
%FD0CF852A8FD10FFA8F8F8F8A8FFA8FD33F8FFFFFF5227F8277DFD14FFA8
%7D527DFD08FF7D522727F827F827277D7DFD15FFA8FD04FF7DFD31F8A8FD
%04FFA8FD4AFFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FF
%A8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FDFCFFFDFCFFFD
%5CFF52FD7FFF527DFFFF7DA8FF7DA8FFA87DFFA8FFA8FFFFA87DFFFFA8A8
%FFA8FFA8FD04FFA8A8A8FFFF7DFFA87DFD57FF277D52A82752527D527D27
%7D52527D52FFFF277D52522752527D277DA8FF52A85252277D7D2752527D
%FD56FFA852FF7D525252FD047D52A87DA8277DFFA852FF52527DA87D2752
%27FFFF7D27A8277D7DFD0452FD58FF7DFF7D7D52A8525252FF2752A8FF27
%FFFFFF7DFF7DA852A8A87D7D7DFFFFA827FFA852A87D7D7DA8A8FD5DFF7D
%A8FFA87DFFFF527DFD0FFF52A8FD7EFFA8FDFCFFFD1DFFCFFD7CFFC9C8C1
%C1C1C9FD79FFC1C098C1C0C098C1CAFD76FFFD04C1C0C1C1C1BAC8FD5FFF
%CAFD0DFFC9C9A7FD05FFC8C098C19EC198C19EC198CAFD35FFC9C8C1C8C2
%CFFFFFCFC9C2C8C1C9CFFFFFCFC8C8C1C8C8FFFFFFC9C8C1C8C8CFFD07FF
%C9C1C8C1C8CAFD08FFC9C1C1C0C1C1C9FFFFFFC1C0C1C1C1C0C1C1C1C0C1
%C9FD0EFFCACFFD23FFCFC0C098C1BAC098C2C8C198C1C0C098C1C9C898C0
%BAC098C0C0C89FC0BAC098C0BAC2CFFFFFFFCAC2BAC098C1BAC0C8FD05FF
%CFC198C1C0C198C1BAC8FFCFC0C198C1C0C198C1C0C198C9FD0CFFCFC1C1
%C0C8CAFD20FFCFC0C1C1C1C0C1C1C1C0C1C0C1C0C1C1C1C0C1C0C1C0C1C1
%C1C0C1C0C1C0C1C1C1C0C1C0C8FFFFFFC8BAC1C1C1C0C1C0C0C9FD04FFC9
%C0C1C0C1C1C1C0C1C0CFC9C1C1C1C0C1C1C1C0C1C1C0C9FD0BFFC998C09E
%C198C1C9C9A0C9C2C8A0C9C9CFCAFD15FFC1C098C19EC198C19EC198C19E
%C198C19EC198C19EC198C19EC198C19EC198C19EC198C198C9FFCF98C198
%C19EC198C198C1FD04FF98C19EC198C19EC198C1C1C298C19EC198C19EC1
%98C198CAFD0AFFCFC0C1C1C1C0C1C0C1C0C1C0C1C0C1C0C1C0C8C8CFFD12
%FFCFC1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1
%C1C0C1C1C1C0C1C1C1C2FFCAC1C0C1C1C1C0C1C1C1C0C8C9FFCFC1C0C1C0
%C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C0C8FD0AFFCFC0C198C1C0C198
%C1C0C198C1C0C198C1C0C198C0BAC1C9FD11FFC1C198C1C0C198C1C0C198
%C1C0C198C1C0C198C1C0C198C1C0C198C1C0C198C1C0C198C1BAC8FFC9C0
%C198C1C0C198C1C0C198C0C1C99EC1C0C198C1C0C198C1C0C198C1C0C198
%C1C0C198C0C9FD0AFFFD04C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1
%C0C1C8FD10FFC9C0C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0
%C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1BAC1C1C1C0C1C1C1C0C1C1C1C0C1C1
%C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1CAFD08FFC1C098
%C19EC198C19EC198C19EC198C19EC198C19EC198C198C0A7FD0FFFCAC8C1
%C198C19EC198C19EC198C19EC198C19EC198C19EC198C19EC198C19EC198
%C19EC198C198C198C19EC198C19EC198C19EC198C19EC198C19EC198C19E
%C198C19EC198C19EC198C19EC198C1FD07FFC8C0C0C1C1C1C0C1C1C1C0C1
%C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1CFFD10FFC8C0C1C1C1C0C1C1C1C0
%C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C8C1C1C0C1C1C1C0C1C1C1C0C1C1
%C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0
%C1C1C1C0C1C0CFFD05FFC9C1C0C198C1C0C198C1C0C198C1C0C198C1C0C1
%98C1C0C198C1C0C198C9FD08FFCFCFCAFD04FFC9BAC198C1C0C198C1C0C1
%98C1C0C198C1C0C198C1C0C198C1C0C19EC1C0C198C1C0C198C1C0C198C1
%C0C198C1C0C198C1C0C198C1C0C198C1C0C198C1C0C198C1C0C198C1C0C1
%98C1C0C198C0C8FD05FFC1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1
%C1C0C1C1C1C0FD04C1FD07FFC9FD04C1C9FFC9BAC1C1C1C0C1C1C1C0C1C1
%C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0
%C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1
%C1C0C1C1C1BAC9FD04FFC898C198C19EC198C19EC198C19EC198C19EC198
%C19EC198C19EC198C198C1CAFD05FFC9C098C198C098C29EC198C19EC198
%C19EC198C19EC198C19EC198C19EC198C19EC198C19EC198C19EC198C19E
%C198C19EC198C19EC198C19EC198C19EC198C19EC198C19EC198C19EC198
%C19EC198C19EC198C19EC0A0FFFFFFCFC0C1C0C1C1C1C0C1C1C1C0C1C1C1
%C0C1C1C1C0C1C1C1C0C1C1C1C0FD04C1FD06FFC1C0C1C1C1C0C1C0C1C0C1
%C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1
%C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1
%C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0CEFFFFFF9FC1C0C198C1C0C198C1C0
%C198C1C0C198C1C0C198C1C0C198C1C0C198C1BAC2FD05FFC9BAC198C1C0
%C198C1C0C198C1C0C198C1C0C198C1C0C198C1C0C198C1C0C198C1C0C198
%C1C0C198C1C0C198C1C0C198C1C0C198C1C0C198C1C0C198C1C0C198C1C0
%C198C1C0C198C1C0C198C1C0C198C1C0C198C1BAC1CAFFFFCAC1C0C1C1C1
%C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C9CFFF
%FFFFFD04C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C0C1C0
%C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1CFCFC1C1C0C1C0C1C1C1C0C1C1
%C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1CAFFFF
%FFCF98C198C19EC198C19EC198C19EC198C19EC198C19EC198C19EC198C1
%9EC198C198C1A7FFC9C098C19EC198C19EC198C19EC198C19EC198C19EC1
%98C19EC198C1C1C198C19EC198C19EC198C19EC198C19EC09FCAFFFFCACA
%C9C99EC19EC198C19EC198C19EC198C19EC198C19EC198C19EC198C19EC1
%98C198C1CAFD04FFCFC1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1
%C0C1C1C1C0C1C1C1C0C1C1C1C0C1C9C8C0C1C1C1C0C1C1C1C0C1C1C1C0C1
%C1C1C0C1C1C1C0C1C1C1C0C1C2C9FD04C1C0C1C1C1C0C1C1C1C0C1C1C1C0
%C1C0C9FFFFFFCFFD04C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1
%C0C1C1C1C0C1C1C1C0C9FD05FFC1C198C1C0C198C1C0C198C1C0C198C1C0
%C198C1C0C198C1C0C198C1C0C198C1C0C198C1C0C198C1C0C198C1C0C198
%C1C0C198C1C0C198C1C0C198C1C0C198C1BAC198C1C0C198C1C0C198C1C0
%C198C1C0C198C1BAC9C9C1BAC098C1C0C198C1C0C198C1C0C198C1C0C198
%C1C0C198C1C0C198C1C0C198C1C0C09FFD04FFC8C1C1C1C0C1C1C1C0C1C1
%C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0
%C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1
%C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C0C1C0C1C1C1C0C1C1C1C0C1C1C1C0
%C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C0C1CAFFFFCFC198C1
%9EC198C19EC198C19EC198C19EC198C19EC198C19EC198C19EC198C19EC1
%98C19EC198C19EC198C19EC198C19EC198C19EC198C19EC198C19EC198C1
%9EC198C19EC198C19EC198C19EC198C19EC198C19EC198C19EC198C19EC1
%98C19EC198C19EC19FC19EC198C19EC198C19EC198C19EC198C19EC198C1
%9ECFFFFFCFC0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0
%C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1
%C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0
%C1C1C1C0C1C1C1C0C1C1C1C0FD04C1CFC1C1C0C1C1C1C0C1C1C1C0C1C1C1
%C0C1C1C1C0C1C0C8FFFFFFC2C098C1C0C198C1C0C198C1C0C198C1C0C198
%C1C0C198C1C0C098C1C0C198C1C0C198C1C0C198C1C0C198C1C0C198C1C0
%C198C1C0C198C1C0C198C1C0C198C1C0C198C1C0C198C1C0C198C1C0C198
%C1C0C198C1C0C198C1C0C198C1C0C198C1C0C198C1C0C19FC1C0C198C1C0
%C198C1C0C198C1C0C198C1C0C198C1C9FFFFFFC8C0C1C0C1C1C1C0C1C1C1
%C0C1C1C1C0C1C1C1C0C1C1C1C0C9C9C9FD04C1C0C1C1C1C0C1C1C1C0C1C1
%C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0
%C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1
%C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0FD04C1FD04FF98C19EC198C1
%9EC198C19EC198C19EC198C19EC198C198C1FD04FFA0C09EC198C19EC198
%C19EC198C19EC198C19EC198C19EC198C19EC198C19EC198C19EC198C19E
%C198C19EC198C19EC198C19EC198C19EC198C19EC198C19EC198C19EC198
%C19EC198C198C19FC19EC198C19EC198C19EC198C19EC198C19EC198C9FF
%FFC1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C9FFFFFFCFC8
%C0C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1
%C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1
%C1C1C0C1C1C1C0C1C1C1C0FD04C1C9C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0
%C1C1C1C0C1C0C8FF98C1C0C198C1C0C198C1C0C198C1C0C198C1C0C198C1
%C0C9C9C9C1C198C1C0C198C1C0C198C1C0C198C1C0C198C1C0C198C1C0C1
%98C1C0C198C1C0C198C1C0C198C1C0C198C1C0C198C1C0C198C1C0C198C1
%C0C198C1C0C198C1C0C198C1C0C198C1C0C198C1C0C198C1C0C198C1C0C1
%98C1C0C198C1C0C198C1C0C198C1BAC9C1C0C1C1C1C0C1C1C1C0C1C1C1C0
%C1C1C1C0C1C1C1C0C1C0C1BAC1C0C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1
%C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0
%C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1
%C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C098C19EC1
%98C19EC198C19EC198C19EC198C19EC198C19EC198C19EC198C19EC198C1
%9EC198C19EC198C19EC198C19EC198C19EC198C19EC198C19EC09FFFC9C0
%98C19EC198C19EC198C19EC198C19EC198C19EC198C19EC198C19EC198C1
%9EC198C19EC198C19EC198C19EC198C19EC198C19EC198C19EC198C19EC1
%98C1C9C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1
%C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0
%C1C1C1C0C9FFC9C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0FD04C1C8C1C1
%C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1
%C1C1C0C1C1C1C0C1C0FFC198C1C0C198C1C0C198C1C0C198C1C0C198C1C0
%C198C1C0C198C1C0C198C1C0C198C1C0C19FC8C0C198C1C0C198C1C0C198
%C1C0C198C1C0C198C1C0C198C1C0C198C1C0C198C1C0C198C1C0C198C1C0
%C198C1C0C0C9FFCAC898C1C0C198C1C0C198C1C9C898C1C0C198C1C0C198
%C1C0C198C1C0C198C1C0C198C1C0C198C1FFC9C1C0C1C1C1C0C1C1C1C0C1
%C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C0C1C0C1C1C1
%C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1
%C1C1C0C1C1C1C0C1C1C1C0C1C0C8FFFFCAC1C0C1C1C1C0C1C1C1C0FFC9C0
%C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C0C0C9FFFFC9C098
%C19EC198C19EC198C19EC198C19EC198C19EC198C19EC198C19EC198C19E
%C198C19EC198C19EC198C19EC198C19EC198C19EC198C19EC198C19EC198
%C19EC198C19EC198C19EC198C19EC198C19EC198C1C1FFFFCF9EC198C19E
%C198C19EC0A7CF98C198C19EC198C19EC198C19EC198C19EC198C19EC198
%C0C2FD04FFCAC7C0C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0
%C1C1C1C0C1C1C1C8C8C0C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1
%C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C0C8FF
%FFCFC1C0C1C1C1C0C1C1C1C0CFFFC9BAC1C1C1C0C1C1C1C0C1C1C1C0C1C1
%C1C0C1C0C1C0C8C9FD06FFCFC9C1C098C1C0C198C1C0C198C1C0C198C1C0
%C198C1C0C198C1C0C198C1C0C89FC1C0C198C1C0C198C1C0C198C1C0C198
%C1C0C198C1C0C198C1C0C198C1C0C198C1C0C198C1C0C198C1C0C198C1C0
%C198C1C1FFFFFFC1C198C1C0C198C1C0C0C9FFFFC898C0BAC098C1C0C198
%C1C0C198C1C0C19FCFCACFCFFD0AFFCAC1C0C1C1C1C0C1C1C1C0C1C1C1C0
%C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1
%C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0
%C1C1C1BAC9FFFFFFC8C0C1C0C1C1C1C0C1C1FD04FFCFC8C9C8CAC2C1C1C1
%C0C1C1C1C0C1C0C8FD0FFF9EC198C19EC198C19EC198C19EC198C19EC198
%C19EC198C19EC198C19EC198C19EC198C19EC198C19EC198C19EC198C19E
%C198C19EC198C19EC198C19EC198C19EC198C19EC198C19EC198C19EC0A7
%FFFFFFA7C19EC198C19EC198C9FFFFCAFD06FFC998C19EC198C19EC198C1
%C1FD0EFFC9C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1
%C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1
%C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C8C1C1C1C8C1C1
%C0C1C1C1C0C1C1C2C1C8C1C1C1C8C1C8C2C1C1C1C0C1C1C1C0C1C0C8FD0E
%FFC8BAC198C1C0C198C1C0C198C1C0C198C1C0C198C1C0C198C1C0C198C1
%C0C198C0BAC098C1BAC098C1C0C198C1C0C198C1C0C198C1C0C198C1C0C1
%98C1C0C198C1C0C198C1C0C198C1C0C198C1C0C198C1C0C098C1C0C198C1
%C0C198C1C0C098C1C0C098C1BAC098C1C0C198C1C0C198C1C1FD0EFFFD04
%C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C0FD04
%C8C9C8CAC9CFCAFFC8C0C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1
%C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1
%C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1FD0DFFCAC198C19EC198
%C19EC198C19EC198C19EC198C19EC198C19EC198C19EC198C1C1FD0AFFC9
%98C198C19EC198C19EC198C19EC198C19EC198C19EC198C19EC198C19EC1
%98C19EC198C19EC198C19EC198C19EC198C19EC198C19EC198C19EC198C1
%9EC198C19EC198C19EC19EFD0DFFCFC0C1C1C1C0C1C1C1C0C1C1C1C0C1C1
%C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C0C1FD0AFFC9C1C0C1C1C1C0C1C1C1
%C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1
%C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1
%C0C1FD0DFFCFC198C1C0C198C1C0C198C1C0C198C1C0C198C1C0C198C1C0
%C198C1C0C198C1C1FD0AFFCABAC198C1C0C198C1C0C198C1C0C198C1C0C1
%98C1C0C198C1C0C198C1C0C198C1C0C198C1C0C198C1C0C198C1C0C198C1
%C0C198C1C0C198C1C0C198C1C0C198C1C0C198C1C0C09FFD0EFFC2C0C0C1
%C1C1C0FD05C1C0C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1BACFFD0AFFCF
%C1C0C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1
%C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0
%C1C0C1C0C1C1C1C0C1C0CFFD0EFFCF98C098C19EC198C0C1FFA7C098C198
%C19EC198C19EC198C19EC198C098C8FD0CFFA7C098C198C198C098C19EC1
%98C19EC198C19EC198C19EC198C19EC198C19EC198C19EC198C19EC198C1
%9EC198C19EC198C19EC198C19EC198C19EC198C198C198C19EC098C9FD10
%FFCFC0C1C0C1C0C1C1FFFFFFCAC1C0C1C0C1C0C1C1C1C0C1C0C1C0C1C1CF
%FD0EFFC9C1C0C1C0C1C1C1C0C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0
%C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1C1C0C1C1
%C1C0C1C9C9C0C1C0C1C1C9FD12FFCFC2C2C1C1C2FD06FFC99FC1C0C198C1
%C0C19EC2C2C9CAFD11FFCFC9C8C9CFFFC2C1BAC098C1BAC098C1BAC098C1
%BAC098C1BAC098C1BAC098C1BAC098C1BAC098C1BAC098C1BAC098C1BAC0
%98C1BAC098C1BAC1C9FFFFCFC9C9C9FD24FFCACFC9CFCFFD1DFFCFCFC9CA
%C9CFC9CAC9CFC9CAC9CFC9CAC9CFC9CAC9CFC9CAC9CFC9CAC9CFC9CAC9CF
%C9CAC9CFC9CAC9CFC9CAC9CFC9CAC9CFFD92FFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Line Plugin Group) (Line \315\274\270\345) (IdeaFileFormat.aip)
%AI8_PluginGroupInfo
(Adobe Sketch Plugin Group) (Sketch \315\274\270\345) (IdeaFileFormat.aip)
%AI8_PluginGroupInfo
(Adobe Vectorized Object) (\315\274\317\361\303\350\304\241) (Vectorize.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (Flare.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe \267\342\314\327\324\366\320\247\271\244\276\337) (Deform.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe \312\265\312\261\311\317\311\253\324\366\320\247\271\244\276\337) (PlanetX.aip)
%AI8_PluginGroupInfo
(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe \273\354\272\317\324\366\320\247\271\244\276\337) (LiveBlends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe \267\373\272\305) (ParticleSystem.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe \312\351\267\250\273\255\261\312\324\366\320\247\271\244\276\337) (CalligraphicBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe \315\274\260\270\273\255\261\312\324\366\320\247\271\244\276\337) (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe \315\274\260\270\273\255\261\312\324\366\320\247\271\244\276\337) (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe \322\325\312\365\273\255\261\312\324\366\320\247\271\244\276\337) (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe \322\325\312\365\273\255\261\312\324\366\320\247\271\244\276\337) (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe \311\242\265\343\273\255\261\312\324\366\320\247\271\244\276\337) (ScatterBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe \311\242\265\343\273\255\261\312\324\366\320\247\271\244\276\337) (ScatterBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe Pattern Editor Plugin Group) (Adobe Pattern Editor Plugin Group) (SwatchLibs.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe \270\264\272\317\320\316\327\264) (PathfinderS.aip)
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
3 Bn
%AI5_BeginGradient: (\660\727\711\653, \672\732\711\653)
(\660\727\711\653, \672\732\711\653) 0 2 Bd
[
<
00000203040607090A0B0D0E0F1011121314161718191B1B1C1E1F2021222325262728292A2B2D2E
2F3031333435363738393B3C3D3E3F4041424445464647494A4B4D4E4F50515354545657585A5B5C
5D5E5F6061626364666768696A6B6D6E6F7071737475767778797A7B7C7D7F808182838485868788
8A8B8C8E8F9091939495969798999A9C9D9E9FA0A1A2A3A3A4A5A6A7A8A9AAABABACADAEAFAFB0B1
B2B3B3B4B5B5B6B6B7B8B8B9B9BABABABBBBBCBDBDBEBEBFBFC0C1C1C2C2C3C3C3C4C5C5C6C7C7C7
C8C8C9C9CACACBCBCCCCCCCDCDCECFCFD0D0D1D1D2D3D3D4D5D5D6D6D7D7D8D9DADADBDBDCDDDEDF
DFE0E0E1E2E3E4E5E6E7E8E9EAEBECED
>
<
000001020304050708090A0A0B0C0D0E0F1011121213141516171718191A1B1C1C1D1F1F20212223
242525262728292A2A2B2C2D2E2F303132333435363738393A3B3C3D3D3E3F404142444546464849
4A4B4C4D4E4E4F5051525354555658585A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071
7374757778797A7C7D7E7F8081828385868788898A8B8D8E8F9090919293949595969899999B9C9D
9D9E9E9FA0A1A2A2A3A4A4A6A6A7A8A9AAAAABACACADAEAFAFB0B1B1B2B3B4B4B4B5B5B6B6B7B8B9
B9BABBBBBCBDBDBEBEBFC0C1C2C2C3C3C4C5C6C6C7C7C8C8C9C9CACBCCCCCDCECFD0D0D1D2D2D3D4
D4D5D5D6D6D7D8D9DADBDCDDDEDFDFE0
>
<
000001020304050708090A0A0B0C0D0E0F1011121213141516171718191A1B1B1C1C1D1E1F202121
2223242526272829292A2B2C2D2E2F2F30313233343536373838393A3B3C3D3D3E40404142434445
464748494A4A4B4C4D4E4F50515253545455565758595A5B5C5D5E5F6061626365666667696A6A6B
6C6D6F6F7072737475767878797B7C7D7E808182838485868788898A8B8B8C8D8E8F909192939495
9596979898999A9A9C9C9D9E9FA0A1A1A2A3A3A4A4A5A6A7A7A8A9AAABABACACADAEAFB0B0B1B2B3
B3B4B5B5B6B7B8B9B9BABABBBCBDBEBEBFC0C1C2C2C3C4C5C6C7C7C8C9C9CBCCCDCECFD0D1D1D2D3
D4D5D5D6D6D8D9DADBDCDEDFDFE1E2E3
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000010101010102020304040505060708090A0B0C0E0F101213151618
191B1C1E2021232426282A2C2E30323436383A3C3E40424447494B4D50525456595B5D5F62646668
6A6C6F717375777A7C7E80828487898B8D8F919396989A9C9EA0A2A4A6A7A9ABADAEB0B2B3B5B7B8
B9BBBCBDBEC0C1C2C3C5C6C7C8CACBCC
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
4 %_Br
[
0.929412 0.87924 0.890196 0.799985 0 0 0 2 50 100 %_BS
%_0.929412 0.87924 0.890196 0.799985 0 0 0 2 50 100 Bs
0 0 0 0 1 1 1 2 50 0 %_BS
%_0 0 0 0 1 1 1 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (\700\666\711\653\714\754\677\725)
(\700\666\711\653\714\754\677\725) 0 2 Bd
[
0.597894
0
0.18085
0
0.239216
0.870588
0.929412
4 %_Br
[
0.597894 0 0.18085 0 0.239216 0.870588 0.929412 2 50 100 %_BS
%_0.597894 0 0.18085 0 0.239216 0.870588 0.929412 2 50 100 Bs
0.597894 0 0.18085 0 0.239216 0.870588 0.929412 2 50 0 %_BS
%_0.597894 0 0.18085 0 0.239216 0.870588 0.929412 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (\675\760\667\733)
(\675\760\667\733) 0 4 Bd
[
<
2C2C2D2D2E2E2F2E2F2F2F303031313232333333343435353636373738383839393A3A3B3B3C3C3C
3D3D3E3E3F3E40403F41404141424244444445454646474748484949494A4A4C4B4D4D4E4E4E4F4E
4F4F51515253
>
<
3D3E3F414244454647494A4B4D4E4F50525354555657585A5B5C5D5E60616263656667686A6A6C6D
6E6F707374757778797A7C7D7E7F81818284858687898A8B8C8E8F9091939495969798999A9C9D9E
9FA1A2A3A4A5
>
<
ECECECECEDEDEEEEEFEFEFF0F0F0F0F1F1F1F2F2F3F3F4F4F4F4F4F4F4F4F4F5F5F6F7F7F8F8F8F8
F9F9FAFAFBFCFDFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFF
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000
>
<
E5E5E4E4E3E3E2E2E1E1E1E0E0DFDFDEDEDDDDDDDCDCDBDBDADAD9D9D8D8D8D7D7D6D6D5D5D4D4D4
D3D3D2D2D1D1D0D0D0CFCFCECECDCDCCCCCCCBCBCACAC9C9C8C8C7C7C7C6C6C5C5C4C4C3C3C3C2C2
C1C1C0C0BFBF
>
<
C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E
9D9C9B999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A7978777675
74737271706F
>
0
4 %_Br
<
2425252525252525262627272828282828282829292929292A2A2A2A2A2A2A2A2B2B2B2C2C2C2C
>
<
7473716F6E6D6C6A696866656362615F5E5C5B585756545352504F4E4C4B494846454341403E3D
>
<
F1F0F0F0F0F0F0F1F1F1F1F0F0F0F0EFEFEFEFEEEEEEEEEEEEEEEEEEEDEDEDEDEDECECECECECEC
>
0
0.898039
<
9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5
>
<
030303030303030202020202020202020202020101010101010101010101010100000000000000
>
4 %_Br
<
00000000000000000000000000000000000002020304040606070709090A0A0C0C0E0E0F10121214
1415151717191B1B1C1C1E1E202121232324
>
<
ADADADACACABABABABAAAAA9A9A7A6A6A5A4A3A3A2A1A09F9E9D9D9B9A9A99979695949492908F8E
8C8B8A8A8886858382817F7E7C7A79777674
>
<
EAEAEAEBEBEBEBEBEBEAEBEBEBECEBEBECECEDEDEDEDEDEEEEEEEEEFEEEFEFEFEFF0EFF0F0F0F0F0
F0F0EFF0F0F0F0F0F0F0F0F0F0F1F0F1F0F1
>
0
<
FFFFFFFEFEFEFEFDFDFDFCFCFCFBFBFBFAFAF9F9F9F8F8F7F7F6F6F5F5F4F4F3F3F2F2F1F1F0F0EF
EFEEEEEDEDECEBEBEAEAE9E9E8E7E7E6E6E5
>
<
73737374747575767677777878797A7A7B7C7C7D7E7E7F808181828384848586878889898A8B8C8D
8E8F90909192939495969798999A9B9C9D9E
>
<
00000000000000000000000000000001010101010101010101010101010101010101020202020202
020202020202020202020303030303030303
>
4 %_Br
[
0.323583 0.647608 1 0.000336 0.74902 0.435294 0 2 50 99.4382 %_BS
%_0.323583 0.647608 1 0.000336 0.74902 0.435294 0 2 50 99.4382 Bs
0.173007 0.237705 0.924803 0 0.898039 0.772549 0 2 50 86.5168 %_BS
%_0.173007 0.237705 0.924803 0 0.898039 0.772549 0 2 50 86.5168 Bs
0.14313 0.455421 0.943145 0 0.898039 0.619608 0.011765 2 50 55.211 %_BS
%_0.14313 0.455421 0.943145 0 0.898039 0.619608 0.011765 2 50 55.211 Bs
0 0.679347 0.917662 0 1 0.45098 0 2 59.5506 0 %_BS
%_0 0.679347 0.917662 0 1 0.45098 0 2 59.5506 0 Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (\722\641\660\732)
(\722\641\660\732) 47.5615 109.6396 155.9004 219.2813 [
%AI3_Tile
(0 O 0 R 0.992126 0.828977 0.322972 0.007965 0 0.258824 0.494118 Xa
 0.992126 0.828977 0.322972 0.007965 0 0.258824 0.494118 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
135.0352 74.9453 m
135.0566 75.0645 135.1602 75.1504 135.2813 75.1523 c
148.1875 75.2871 160.0352 78.4199 169.2529 86.667 C
161.2227 81.1094 146.3105 79.1563 137.7256 83.0488 c
137.6152 83.0986 137.5566 83.2188 137.584 83.3369 c
137.6104 83.4551 137.7168 83.5371 137.8379 83.5332 c
148.5176 83.2441 157.1172 86.54 163.8223 92.498 C
156.9531 92.9199 151.248 97.2383 151.2656 102.3428 c
151.2656 102.4619 151.3496 102.5645 151.4668 102.5898 c
151.583 102.6152 151.7012 102.5547 151.75 102.4463 c
152.8711 99.957 156.498 98.666 160.333 99.5664 c
164.5127 100.5469 167.333 103.7559 166.6338 106.7314 c
166.1621 108.7461 164.1973 110.1348 161.6816 110.5186 c
161.5547 110.5371 161.4619 110.6484 161.4648 110.7764 c
161.4688 110.9043 161.5674 111.0098 161.6953 111.0215 c
162.7637 111.124 163.875 111.1279 165.0127 111.0195 c
171.5029 110.4023 176.5264 106.4238 176.9619 101.8418 C
181.6748 102.3887 185.8467 104.998 187.3408 108.6152 c
187.3857 108.7236 187.501 108.7871 187.6162 108.7695 c
187.7314 108.75 187.8193 108.6553 187.8291 108.5391 c
188.2061 103.7871 186.5713 100.7002 182.8584 97.6846 C
188.2432 99.7441 194.3027 99.8496 200.1133 97.1465 c
200.2188 97.0977 200.2773 96.9824 200.2559 96.8672 c
200.2324 96.752 200.1328 96.668 200.0156 96.6641 c
195.1367 96.4736 191.5996 94.9082 188.2861 91.5918 C
206.5391 96.7256 221.3711 85.3906 216.2383 68.5391 c
216.2031 68.4238 216.0918 68.3486 215.9707 68.3613 c
215.8496 68.373 215.7539 68.4688 215.7441 68.5898 c
214.8262 78.3037 208.041 84.7051 197.8828 85.666 C
203.2695 83.6055 208.8828 78.6895 209.4395 70.1318 c
209.4473 70.0098 209.3672 69.8984 209.248 69.8691 c
209.1289 69.8398 209.0059 69.8984 208.9551 70.0098 c
206.1563 76.1641 200.6582 79.2754 194.7949 79.8223 C
201.1289 77.2422 205.1914 71.2207 206.3652 63.4023 c
206.3848 63.2793 206.3105 63.1602 206.1914 63.123 c
206.0742 63.084 205.9453 63.1387 205.8887 63.248 c
202.0234 70.8311 193.7324 76.042 183.4424 72.0605 c
172.8252 67.9512 168.168 55.6738 167.1387 47.0195 c
167.124 46.8984 167.0234 46.8047 166.9004 46.7969 c
166.7783 46.7891 166.668 46.8711 166.6396 46.9922 c
162.9199 62.6797 170.2227 78.9414 183.2764 85.832 C
176.1807 83.8291 169.8369 79.5723 166.249 72.4775 C
157.9551 71.459 152.2451 68.6152 149.3916 63.2383 c
149.335 63.1309 149.2109 63.0781 149.0957 63.1133 c
148.9805 63.1465 148.9043 63.2578 148.9141 63.3789 c
149.0967 65.4883 149.8555 69.709 152.9883 71.6494 C
146.0234 71.6387 140.4824 72.543 135.1895 74.6621 c
135.0781 74.708 135.0127 74.8262 135.0352 74.9453 c
f
164.5215 21.4746 m
164.4229 21.541 164.293 21.5293 164.2061 21.4492 c
164.1201 21.3672 164.1016 21.2383 164.1602 21.1367 c
165.7803 18.3398 164.3008 14.3223 161.1094 14.3223 c
155.3887 14.3223 152.6387 25.0918 153.5137 34.916 C
155.6768 29.1602 157.5469 26.8613 160.8613 24.1211 c
160.9551 24.043 161.0898 24.043 161.1836 24.1191 c
161.2773 24.1973 161.3047 24.3281 161.2471 24.4355 c
156.3906 33.5156 155.3496 40.502 155.3496 48.5215 C
156.8125 42.5625 158.5449 39.1992 163.4766 34.1406 c
163.5625 34.0527 163.6992 34.0391 163.8018 34.1074 c
163.9033 34.1777 163.9404 34.3105 163.8887 34.4238 c
158.5908 46.0137 158.9951 58.8711 162.9414 68.6875 c
162.9805 68.7852 162.9561 68.8965 162.8789 68.9688 c
162.8018 69.0391 162.6895 69.0566 162.5938 69.0098 c
157.3887 66.459 154.3301 64.7832 149.8418 58.6211 C
151.1992 51.2227 150.0703 47.5723 146.6699 41.4258 C
150.6074 51.3438 148.5117 65.3203 138.4824 71.0176 c
138.373 71.0791 138.2344 71.0518 138.1582 70.9531 c
138.0801 70.8535 138.0869 70.7119 138.1738 70.6211 c
141.9551 66.666 144.7051 59.9863 142.3301 52.6934 C
143.8594 63.082 134.7344 71.8086 124.5508 71.8086 c
114.9512 71.8086 108.4004 64.2988 108.9414 56.8672 c
109.4785 49.502 114.3848 45.8984 118.6133 44.3691 c
118.7246 44.3301 118.8496 44.3711 118.9131 44.4707 c
118.9766 44.5723 118.9629 44.7012 118.8799 44.7871 c
113.2695 50.4785 112.502 61.2793 122.4629 64.5469 C
116.6035 59.4902 118.7734 47.7168 128.1523 46.8223 c
128.2695 46.8105 128.3789 46.8809 128.417 46.9922 c
128.4551 47.1035 128.4121 47.2266 128.3135 47.2891 c
126.3047 48.5664 124.6348 51.0605 124.6348 53.8633 c
124.6348 58.5371 128.0566 60.373 130.3105 60.373 c
133.7324 60.373 136.5703 57.1172 136.5703 52.1934 c
136.5703 46.3496 131.3105 41.5098 124.5508 40.7578 c
117.9248 40.0234 111.7686 42.9121 108.8008 47.2168 c
108.7314 47.3184 108.5996 47.3555 108.4873 47.3047 c
108.375 47.2539 108.3164 47.1289 108.3467 47.0098 c
111.3652 35.3066 125.1426 30.1328 135.2344 37.5039 C
128.6211 30.002 118.2285 29.8984 109.5127 37.5898 c
109.4219 37.6699 109.2871 37.6738 109.1904 37.5996 c
109.0938 37.5273 109.0635 37.3945 109.1172 37.2871 c
111.7842 31.8789 118.3701 25.4668 127.7227 26.4023 c
136.2793 27.2578 141.2441 35.416 142.2461 42.0938 C
142.8027 33.5723 140.8525 27.5566 133.4922 21.9473 c
133.3955 21.873 133.3652 21.7402 133.4199 21.6309 c
133.4746 21.5234 133.5996 21.4688 133.7168 21.502 c
140.502 23.4629 145.9473 26.9277 148.7656 34.0469 C
148.7656 27.8848 146.627 21.6738 141.2402 17.5352 c
141.1426 17.4609 141.1133 17.3301 141.168 17.2207 c
141.2227 17.1113 141.3467 17.0566 141.4639 17.0898 c
144.917 18.0742 147.6348 19.5781 149.6016 22.2754 C
150.9121 11.1758 156.123 4.58398 162.127 4.58398 c
166.252 4.58398 169.332 7.61719 169.332 12.4551 c
169.332 15.2852 167.8438 19.2578 164.5215 21.4746 c
f
263.748 113.0938 m
260.5859 116.998 254.209 118.4863 247.3164 117.082 C
247.8262 121.3828 246.9824 125.873 245.7051 128.5664 c
245.6523 128.6758 245.5313 128.7334 245.4141 128.7051 c
245.2969 128.6758 245.2168 128.5684 245.2207 128.4473 c
245.5957 119.6807 240.5977 112.6035 231.7715 109.5371 C
238.6777 114.293 240.6973 123.7305 237.4102 128.6035 c
237.3418 128.7021 237.2148 128.7412 237.1035 128.6953 c
236.9922 128.6504 236.9277 128.5332 236.9492 128.416 c
237.3223 126.3555 236.3438 123.7314 234.2363 121.6895 c
231.3301 118.875 227.3867 118.2363 225.4258 120.2598 c
223.4648 122.2852 224.2285 126.207 227.1328 129.0215 c
228.1934 130.0488 229.3926 130.7832 230.582 131.2061 c
230.6953 131.2461 230.7637 131.3594 230.748 131.4775 c
230.7344 131.5967 230.6387 131.6885 230.5195 131.6982 c
224.1309 132.2529 219.75 128.4463 217.0039 123.8203 c
214.209 119.1152 209.4336 115.4102 203.793 116.1504 c
203.6738 116.166 203.5605 116.0957 203.5195 115.9824 c
203.4805 115.8691 203.5254 115.7422 203.6289 115.6807 c
206.4258 113.9961 209.5 113.2969 213.4922 114.6289 C
207.6973 109.7197 199.4453 106.8867 191.6523 109.4014 c
191.543 109.4375 191.4238 109.3945 191.3613 109.2979 c
191.2988 109.2012 191.3105 109.0752 191.3867 108.9902 c
197.2949 102.4258 209.0762 102.2949 216.4961 107.6172 C
213.459 103.3008 209.4277 100.1328 202.2031 99.1387 c
202.0879 99.123 201.998 99.0313 201.9844 98.916 c
201.9727 98.7998 202.0391 98.6904 202.1484 98.6504 c
210.4395 95.5723 218.748 98.6953 225.5938 106.8652 C
222.6016 100.4883 217.6875 95.3809 210.8262 92.8535 c
210.7109 92.8115 210.6426 92.6934 210.6641 92.5742 c
210.6836 92.4531 210.7871 92.3643 210.9082 92.3613 c
214.8516 92.2803 218.3945 93.2188 223.1738 95.9316 C
219.666 90.2422 220.4336 80.293 225.543 73.6738 c
225.6133 73.582 225.7383 73.5498 225.8457 73.5957 c
225.9512 73.6426 226.0137 73.7549 225.9941 73.8691 c
224.8145 81.0703 227.293 89.1992 231.6035 93.5117 C
229.4512 85.8799 231.5977 78.9355 237.5 73.8672 c
237.5703 73.8066 237.6699 73.79 237.7559 73.8232 c
237.8438 73.8564 237.9043 73.9355 237.918 74.0273 c
239.1523 83.4453 249.6875 93.002 258.5195 93.8027 c
258.6445 93.8135 258.7422 93.9141 258.75 94.0381 c
258.7578 94.1621 258.6758 94.2754 258.5527 94.3027 c
254.2734 95.2715 249.8613 94.793 246.1641 93.2715 C
248.8242 96.2051 252.1035 98.3828 255.7188 99.5176 c
255.8359 99.5537 255.9082 99.668 255.8945 99.7891 c
255.8809 99.9102 255.7813 100.0039 255.6602 100.0127 c
251.1504 100.3242 246.7363 99.0068 242.9297 96.4746 C
247.291 103.0957 253.9102 108.0195 262.3574 109.9805 c
262.4785 110.0088 262.5605 110.1191 262.5547 110.2432 c
262.5469 110.3672 262.4512 110.4668 262.3281 110.4805 c
250.4102 111.7822 240.582 107.1621 234.1074 98.5625 C
235.7559 103.4629 240.4727 108.3184 247.0527 111.1816 c
252.8984 113.7266 258.9023 114.1279 263.4746 112.6914 c
263.5801 112.6582 263.6973 112.6982 263.7598 112.791 c
263.8223 112.8828 263.8184 113.0059 263.748 113.0938 c
f
210.8438 37.5215 m
215.6504 48.0078 215.3086 56.207 211.4375 66.5762 c
211.3926 66.6934 211.2715 66.7607 211.1484 66.7363 c
211.0254 66.7109 210.9395 66.5996 210.9453 66.4746 c
211.5664 53.8535 208.1191 44.8203 200.6465 38.668 C
208.8965 48.5195 205 68.2275 191.8242 68.2275 c
182.2393 68.2275 174.3086 60.252 172.3691 50.7031 c
172.3447 50.582 172.4111 50.459 172.5273 50.416 c
172.6426 50.3711 172.7734 50.416 172.8359 50.5215 c
175.6787 55.2832 180.2451 58.373 185.2939 58.373 c
193.4277 58.373 195.834 51.9063 195.834 47.375 c
195.834 41.1875 190.9082 36.0313 187.1279 36.0313 c
183.6904 36.0313 182.0869 38.8555 182.0869 40.959 c
182.0869 44.8574 185.085 48.125 188.4639 49.123 c
188.583 49.1582 188.6611 49.2773 188.6436 49.4023 c
188.624 49.5273 188.5186 49.6191 188.3936 49.6211 c
184.2861 49.6465 180.8154 47.7656 178.7627 44.0527 C
178.4932 46.9277 178.4902 48.7383 179.4033 51.7754 c
179.4385 51.8926 179.3848 52.0176 179.2773 52.0742 c
179.168 52.1309 179.0352 52.1016 178.9609 52.0059 c
171.6045 42.6133 175.125 26.3809 180.9404 19.6484 C
175.4082 23.6309 170.5234 32.2813 170.6006 44.041 c
170.6016 44.1641 170.5156 44.2676 170.3955 44.291 c
170.2754 44.3164 170.1563 44.25 170.1113 44.1367 c
166.0029 33.8848 168.1826 14.8887 179.3926 4.28516 C
176.5088 3.88867 173.5254 3.93945 170.2676 4.97852 c
170.1523 5.01367 170.0273 4.96484 169.9688 4.85938 c
169.9102 4.75195 169.9336 4.61914 170.0273 4.54102 c
174.1191 1.08594 179.8418 0 185.2939 0 C
180.5967 5.5 182.1572 16.5547 189.6494 16.5547 c
194.9961 16.5547 197.4238 8.25586 193.2949 3.77344 c
193.2168 3.6875 193.207 3.55859 193.2695 3.46289 c
193.334 3.36523 193.4551 3.32227 193.5664 3.36133 c
198.3457 5.01563 203.5117 9.15039 203.5117 14.377 c
203.5117 19.4199 198.6992 23.7715 191.7109 23.4277 C
200.5293 25.9336 209.7617 23.1602 214.5918 17.1758 c
214.666 17.082 214.7969 17.0547 214.9023 17.1074 c
215.0098 17.1621 215.0645 17.2832 215.0352 17.3984 c
212.2441 28.1152 203.0684 32.5977 191.5957 31.1055 C
200.877 34.8613 214.8457 31.5859 221.0195 23.7949 c
221.0918 23.7031 221.2188 23.6738 221.3262 23.7227 c
221.4316 23.7734 221.4902 23.8906 221.4668 24.0039 c
220.0957 30.6191 216.6035 35.5664 210.8438 37.5215 C
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.415961 0.013672 0.033997 0 0.615686 0.862745 0.976471 Xa
 0.415961 0.013672 0.033997 0 0.615686 0.862745 0.976471 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
237.2266 56.8086 m
237.2051 56.6895 237.1016 56.6016 236.9805 56.6016 c
224.0742 56.4648 212.2266 53.334 203.0098 45.0859 C
211.0391 50.6445 225.9512 52.5957 234.5371 48.7051 c
234.6465 48.6543 234.7051 48.5332 234.6777 48.416 c
234.6523 48.2988 234.5449 48.2168 234.4238 48.2188 c
223.7441 48.5098 215.1445 45.2129 208.4395 39.2559 C
215.3086 38.832 221.0137 34.5156 220.9961 29.4102 c
220.9961 29.291 220.9121 29.1875 220.7949 29.1621 c
220.6797 29.1387 220.5605 29.1973 220.5117 29.3066 c
219.3906 31.7949 215.7637 33.0879 211.9297 32.1875 c
207.75 31.2051 204.9297 27.998 205.6289 25.0215 c
206.0996 23.0078 208.0645 21.6191 210.5801 21.2344 c
210.707 21.2148 210.8008 21.1055 210.7969 20.9766 c
210.793 20.8496 210.6953 20.7441 210.5664 20.7305 c
209.498 20.6289 208.3867 20.625 207.25 20.7344 c
200.7598 21.3516 195.7363 25.3281 195.3008 29.9121 C
190.5889 29.3652 186.417 26.7539 184.9229 23.1387 c
184.8779 23.0293 184.7646 22.9668 184.6475 22.9844 c
184.5322 23.002 184.4443 23.0977 184.4346 23.2148 c
184.0576 27.9648 185.6924 31.0527 189.4053 34.0684 C
184.0205 32.0098 177.959 31.9043 172.1484 34.6055 c
172.043 34.6563 171.9844 34.7715 172.0059 34.8867 c
172.0293 35.002 172.1289 35.0859 172.2461 35.0898 c
177.125 35.2793 180.6631 36.8457 183.9795 40.1621 C
165.7227 35.0273 150.8906 46.3633 156.0234 63.2129 c
156.0586 63.3301 156.1699 63.4043 156.291 63.3926 c
156.4121 63.3809 156.5078 63.2852 156.5176 63.1641 c
157.4355 53.4492 164.2207 47.0469 174.3789 46.0879 C
168.9922 48.1465 163.3789 53.0625 162.8223 61.6211 c
162.8145 61.7441 162.8945 61.8535 163.0137 61.8848 c
163.1328 61.9141 163.2559 61.8535 163.3066 61.7422 c
166.1055 55.5879 171.6035 52.4785 177.4668 51.9297 C
171.1328 54.5117 167.0703 60.5332 165.8965 68.3516 c
165.877 68.4746 165.9512 68.5918 166.0703 68.6309 c
166.1875 68.668 166.3164 68.6152 166.373 68.5039 c
170.2383 60.9219 178.5293 55.7109 188.8213 59.6934 c
199.4375 63.8027 204.0938 76.0781 205.123 84.7324 c
205.1387 84.8555 205.2383 84.9492 205.3613 84.957 c
205.4844 84.9629 205.5938 84.8809 205.623 84.7617 c
209.3418 69.0723 202.0391 52.8125 188.9873 45.9219 C
196.082 47.9238 202.4258 52.1816 206.0137 59.2754 C
214.3066 60.293 220.0176 63.1387 222.8711 68.5156 c
222.9277 68.6211 223.0508 68.6738 223.166 68.6406 c
223.2813 68.6055 223.3574 68.4941 223.3477 68.375 c
223.166 66.2656 222.4063 62.0449 219.2734 60.1035 C
226.2383 60.1152 231.7793 59.2109 237.0723 57.0898 c
237.1836 57.0449 237.25 56.9277 237.2266 56.8086 c
f
207.7402 110.2773 m
207.8398 110.2129 207.9688 110.2227 208.0566 110.3047 c
208.1426 110.3848 208.1602 110.5137 208.1016 110.6172 c
206.4824 113.4141 207.9609 117.4297 211.1523 117.4297 c
216.873 117.4297 219.623 106.6602 218.748 96.8379 C
216.5859 102.5918 214.7148 104.8926 211.4004 107.6328 c
211.3066 107.709 211.1719 107.7109 211.0781 107.6328 c
210.9844 107.5566 210.957 107.4238 211.0156 107.3164 c
215.8711 98.2383 216.9121 91.252 216.9121 83.2324 C
215.4492 89.1895 213.7168 92.5527 208.7852 97.6133 c
208.6992 97.7012 208.5625 97.7148 208.4609 97.6445 c
208.3594 97.5742 208.3223 97.4414 208.373 97.3301 c
213.6719 85.7383 213.2676 72.8828 209.3203 63.0664 c
209.2813 62.9688 209.3066 62.8574 209.3828 62.7852 c
209.4609 62.7129 209.5723 62.6973 209.668 62.7422 c
214.873 65.293 217.9316 66.9688 222.4199 73.1328 C
221.0625 80.5313 222.1914 84.1797 225.5918 90.3262 C
221.6543 80.4102 223.75 66.4336 233.7793 60.7363 c
233.8887 60.6738 234.0273 60.7012 234.1035 60.8008 c
234.1816 60.9004 234.1758 61.041 234.0879 61.1328 c
230.3066 65.0879 227.5566 71.7676 229.9316 79.0586 C
228.4023 68.6699 237.5273 59.9453 247.7109 59.9453 c
257.3105 59.9453 263.8613 67.4531 263.3203 74.8848 c
262.7832 82.25 257.877 85.8555 253.6484 87.3828 c
253.5371 87.4238 253.4121 87.3809 253.3496 87.2813 c
253.2852 87.1816 253.2988 87.0508 253.3828 86.9668 c
258.9922 81.2734 259.7598 70.4746 249.7988 67.207 C
255.6582 72.2637 253.4883 84.0352 244.1094 84.9316 c
243.9922 84.9414 243.8828 84.8711 243.8457 84.7598 c
243.8066 84.6504 243.8496 84.5273 243.9492 84.4648 c
245.957 83.1855 247.627 80.6934 247.627 77.8906 c
247.627 73.2168 244.2051 71.3789 241.9512 71.3789 c
238.5293 71.3789 235.6914 74.6348 235.6914 79.5605 c
235.6914 85.4023 240.9512 90.2441 247.7109 90.9941 c
254.3379 91.7305 260.4941 88.8398 263.4609 84.5352 c
263.5313 84.4336 263.6621 84.3984 263.7754 84.4492 c
263.8867 84.5 263.9453 84.623 263.916 84.7422 c
260.8965 96.4453 247.1191 101.6191 237.0273 94.25 C
243.6406 101.75 254.0332 101.8555 262.75 94.1641 c
262.8398 94.084 262.9746 94.0781 263.0723 94.1523 c
263.168 94.2266 263.1992 94.3574 263.1445 94.4668 c
260.4785 99.873 253.8926 106.2852 244.5391 105.3516 c
235.9824 104.4961 231.0176 96.3359 230.0156 89.6602 C
229.459 98.1816 231.4102 104.1953 238.7695 109.8047 c
238.8672 109.8789 238.8965 110.0117 238.8418 110.1211 c
238.7871 110.2305 238.6621 110.2852 238.5449 110.25 c
231.7598 108.291 226.3145 104.8262 223.4961 97.707 C
223.4961 103.8672 225.6348 110.0781 231.0215 114.2168 c
231.1191 114.291 231.1484 114.4238 231.0938 114.5332 c
231.0391 114.6406 230.916 114.6953 230.7988 114.6621 c
227.3457 113.6797 224.627 112.1738 222.6602 109.4785 C
221.3496 120.5781 216.1387 127.168 210.1348 127.168 c
206.0098 127.168 202.9297 124.1348 202.9297 119.2988 c
202.9297 116.4688 204.418 112.4961 207.7402 110.2773 c
f
108.5137 18.6602 m
111.6758 14.7559 118.0527 13.2676 124.9453 14.6719 C
124.4355 10.3691 125.2793 5.88086 126.5566 3.18555 c
126.6094 3.07813 126.7305 3.01953 126.8477 3.04883 c
126.9648 3.07813 127.0449 3.18555 127.041 3.30664 c
126.666 12.0723 131.6641 19.1484 140.4902 22.2148 C
133.584 17.459 131.5645 8.02148 134.8516 3.15039 c
134.9199 3.05078 135.0469 3.01172 135.1582 3.05664 c
135.2695 3.10156 135.334 3.21875 135.3125 3.33789 c
134.9395 5.39844 135.918 8.02148 138.0254 10.0625 c
140.9316 12.877 144.875 13.5156 146.8359 11.4922 c
148.7969 9.4668 148.0332 5.54492 145.1289 2.73242 c
144.0684 1.70508 142.8691 0.96875 141.6797 0.546875 c
141.5664 0.505859 141.498 0.392578 141.5137 0.275391 c
141.5273 0.15625 141.623 0.064453 141.7422 0.054688 c
148.1309 -0.5 152.5117 3.30664 155.2578 7.93164 c
158.0527 12.6367 162.8281 16.3438 168.4688 15.6035 c
168.5879 15.5879 168.7012 15.6582 168.7422 15.7715 c
168.7813 15.8848 168.7363 16.0098 168.6328 16.0723 c
165.8359 17.7559 162.7617 18.4551 158.7695 17.125 C
164.5645 22.0332 172.8164 24.8652 180.6104 22.3516 c
180.7197 22.3164 180.8389 22.3594 180.9014 22.4551 c
180.9639 22.5508 180.9541 22.6777 180.876 22.7637 c
174.9668 29.3281 163.1855 29.459 155.7656 24.1348 C
158.8027 28.4512 162.834 31.6211 170.0586 32.6133 c
170.1738 32.6289 170.2637 32.7227 170.2773 32.8379 c
170.2891 32.9531 170.2227 33.0625 170.1133 33.1035 c
161.8223 36.1797 153.5137 33.0586 146.668 24.8867 C
149.6602 31.2656 154.5742 36.373 161.4355 38.9004 c
161.5508 38.9414 161.6191 39.0586 161.5977 39.1797 c
161.5781 39.3008 161.4746 39.3887 161.3535 39.3906 c
157.4102 39.4727 153.8672 38.5332 149.0879 35.8203 C
152.5957 41.5117 151.8281 51.459 146.7188 58.0801 c
146.6484 58.1719 146.5234 58.2031 146.416 58.1582 c
146.3105 58.1113 146.248 57.998 146.2676 57.8828 c
147.4473 50.6836 144.9688 42.5547 140.6582 38.2422 C
142.8105 45.873 140.6641 52.8184 134.7617 57.8848 c
134.6914 57.9453 134.5918 57.9629 134.5059 57.9297 c
134.418 57.8965 134.3574 57.8184 134.3438 57.7266 c
133.1094 48.3086 122.5742 38.752 113.7422 37.9512 c
113.6172 37.9395 113.5195 37.8398 113.5117 37.7148 c
113.5039 37.5898 113.5859 37.4785 113.709 37.4512 c
117.9883 36.4824 122.4004 36.9609 126.0977 38.4805 C
123.4375 35.5488 120.1582 33.3711 116.543 32.2363 c
116.4258 32.1992 116.3535 32.0859 116.3672 31.9648 c
116.3809 31.8438 116.4805 31.748 116.6016 31.7402 c
121.1113 31.4297 125.5254 32.7461 129.332 35.2793 C
124.9707 28.6582 118.3516 23.7344 109.9043 21.7715 c
109.7832 21.7441 109.7012 21.6328 109.707 21.5098 c
109.7148 21.3867 109.8105 21.2871 109.9336 21.2734 c
121.8516 19.9707 131.6797 24.5918 138.1543 33.1914 C
136.5059 28.2891 131.7891 23.4355 125.209 20.5723 c
119.3633 18.0273 113.3594 17.625 108.7871 19.0625 c
108.6816 19.0957 108.5645 19.0547 108.502 18.9629 c
108.4395 18.8691 108.4434 18.7461 108.5137 18.6602 c
f
161.418 94.2324 m
156.6113 83.7461 156.9531 75.5469 160.8242 65.1777 c
160.8691 65.0605 160.9902 64.9922 161.1133 65.0176 c
161.2363 65.043 161.3223 65.1543 161.3164 65.2773 c
160.6953 77.9004 164.1426 86.9316 171.6152 93.0859 C
163.3652 83.2324 167.2617 63.5254 180.4385 63.5254 c
190.0244 63.5254 197.9531 71.502 199.8926 81.0508 c
199.918 81.1719 199.8516 81.293 199.7344 81.3379 c
199.6191 81.3828 199.4883 81.3379 199.4258 81.2305 c
196.584 76.4688 192.0176 73.3789 186.9697 73.3789 c
178.834 73.3789 176.4277 79.8457 176.4277 84.3789 c
176.4277 90.5645 181.3545 95.7207 185.1357 95.7207 c
188.5732 95.7207 190.1768 92.8984 190.1768 90.7949 c
190.1768 86.8965 187.1787 83.6289 183.8018 82.6309 c
183.6807 82.5938 183.6045 82.4766 183.6221 82.3516 c
183.6396 82.2266 183.7451 82.1328 183.8721 82.1328 c
187.9775 82.1074 191.4473 83.9863 193.5 87.7012 C
193.7695 84.8262 193.7715 83.0156 192.8594 79.9766 c
192.8242 79.8594 192.877 79.7344 192.9844 79.6777 c
193.0938 79.623 193.2266 79.6504 193.3008 79.748 c
200.6582 89.1406 197.1367 105.3711 191.3223 112.1055 C
196.8535 108.123 201.7383 99.4707 201.6621 87.7109 c
201.6602 87.5898 201.7461 87.4844 201.8672 87.4609 c
201.9863 87.4375 202.1055 87.502 202.1504 87.6152 c
206.2598 97.8691 204.0801 116.8633 192.8691 127.4668 C
195.7539 127.8652 198.7363 127.8145 201.9941 126.7754 c
202.1094 126.7383 202.2344 126.7891 202.293 126.8945 c
202.3516 127 202.3281 127.1328 202.2344 127.2109 c
198.1426 130.666 192.4199 131.752 186.9697 131.752 C
191.666 126.252 190.1064 115.1992 182.6162 115.1992 c
177.2656 115.1992 174.8379 123.498 178.9668 127.9805 c
179.0449 128.0664 179.0547 128.1934 178.9922 128.291 c
178.9277 128.3887 178.8066 128.4297 178.6953 128.3926 c
173.916 126.7363 168.75 122.6035 168.75 117.375 c
168.75 112.334 173.5625 107.9805 180.5537 108.3242 C
171.7324 105.8203 162.5 108.5918 157.6699 114.5781 c
157.5957 114.6699 157.4648 114.6992 157.3594 114.6445 c
157.252 114.5918 157.1973 114.4707 157.2266 114.3535 c
160.0176 103.6387 169.1934 99.1543 180.667 100.6484 C
171.3848 96.8906 157.416 100.166 151.2422 107.957 c
151.1699 108.0488 151.043 108.0801 150.9355 108.0293 c
150.8301 107.9805 150.7715 107.8633 150.7949 107.748 c
152.166 101.1328 155.6582 96.1875 161.418 94.2324 C
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.992126 0.828977 0.322972 0.007965 0 0.258824 0.494118 Xa
 0.992126 0.828977 0.322972 0.007965 0 0.258824 0.494118 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
26.6963 74.9453 m
26.7178 75.0645 26.8213 75.1504 26.9424 75.1523 c
39.8486 75.2871 51.6963 78.4199 60.9141 86.667 C
52.8838 81.1094 37.9717 79.1563 29.3867 83.0488 c
29.2764 83.0986 29.2178 83.2188 29.2451 83.3369 c
29.2715 83.4551 29.3779 83.5371 29.499 83.5332 c
40.1787 83.2441 48.7783 86.54 55.4834 92.498 C
48.6143 92.9199 42.9092 97.2383 42.9268 102.3428 c
42.9268 102.4619 43.0107 102.5645 43.1279 102.5898 c
43.2441 102.6152 43.3623 102.5547 43.4111 102.4463 c
44.5322 99.957 48.1592 98.666 51.9941 99.5664 c
56.1738 100.5469 58.9941 103.7559 58.2949 106.7314 c
57.8232 108.7461 55.8584 110.1348 53.3428 110.5186 c
53.2158 110.5371 53.123 110.6484 53.126 110.7764 c
53.1299 110.9043 53.2285 111.0098 53.3564 111.0215 c
54.4248 111.124 55.5361 111.1279 56.6738 111.0195 c
63.1641 110.4023 68.1875 106.4238 68.623 101.8418 C
73.3359 102.3887 77.5078 104.998 79.002 108.6152 c
79.0469 108.7236 79.1621 108.7871 79.2773 108.7695 c
79.3926 108.75 79.4805 108.6553 79.4902 108.5391 c
79.8672 103.7871 78.2324 100.7002 74.5195 97.6846 C
79.9043 99.7441 85.9648 99.8496 91.7754 97.1465 c
91.8809 97.0977 91.9395 96.9824 91.918 96.8672 c
91.8945 96.752 91.7949 96.668 91.6777 96.6641 c
86.7988 96.4736 83.2617 94.9082 79.9473 91.5918 C
98.2012 96.7256 113.0332 85.3906 107.9004 68.5391 c
107.8652 68.4238 107.7539 68.3486 107.6328 68.3613 c
107.5117 68.373 107.416 68.4688 107.4063 68.5898 c
106.4883 78.3037 99.7031 84.7051 89.5449 85.666 C
94.9316 83.6055 100.5449 78.6895 101.1016 70.1318 c
101.1094 70.0098 101.0293 69.8984 100.9102 69.8691 c
100.791 69.8398 100.668 69.8984 100.6172 70.0098 c
97.8184 76.1641 92.3203 79.2754 86.457 79.8223 C
92.791 77.2422 96.8535 71.2207 98.0273 63.4023 c
98.0469 63.2793 97.9727 63.1602 97.8535 63.123 c
97.7363 63.084 97.6074 63.1387 97.5508 63.248 c
93.6855 70.8311 85.3945 76.042 75.1035 72.0605 c
64.4863 67.9512 59.8291 55.6738 58.7998 47.0195 c
58.7852 46.8984 58.6846 46.8047 58.5615 46.7969 c
58.4395 46.7891 58.3291 46.8711 58.3008 46.9922 c
54.5811 62.6797 61.8838 78.9414 74.9375 85.832 C
67.8418 83.8291 61.498 79.5723 57.9102 72.4775 C
49.6162 71.459 43.9063 68.6152 41.0527 63.2383 c
40.9961 63.1309 40.8721 63.0781 40.7568 63.1133 c
40.6416 63.1465 40.5654 63.2578 40.5752 63.3789 c
40.7578 65.4883 41.5166 69.709 44.6494 71.6494 C
37.6846 71.6387 32.1436 72.543 26.8506 74.6621 c
26.7393 74.708 26.6738 74.8262 26.6963 74.9453 c
f
56.1826 21.4746 m
56.084 21.541 55.9541 21.5293 55.8672 21.4492 c
55.7813 21.3672 55.7627 21.2383 55.8213 21.1367 c
57.4414 18.3398 55.9619 14.3223 52.7705 14.3223 c
47.0498 14.3223 44.2998 25.0918 45.1748 34.916 C
47.3379 29.1602 49.208 26.8613 52.5225 24.1211 c
52.6162 24.043 52.751 24.043 52.8447 24.1191 c
52.9385 24.1973 52.9658 24.3281 52.9082 24.4355 c
48.0518 33.5156 47.0107 40.502 47.0107 48.5215 C
48.4736 42.5625 50.2061 39.1992 55.1377 34.1406 c
55.2236 34.0527 55.3604 34.0391 55.4629 34.1074 c
55.5645 34.1777 55.6016 34.3105 55.5498 34.4238 c
50.252 46.0137 50.6563 58.8711 54.6025 68.6875 c
54.6416 68.7852 54.6172 68.8965 54.54 68.9688 c
54.4629 69.0391 54.3506 69.0566 54.2549 69.0098 c
49.0498 66.459 45.9912 64.7832 41.5029 58.6211 C
42.8604 51.2227 41.7314 47.5723 38.3311 41.4258 C
42.2686 51.3438 40.1729 65.3203 30.1436 71.0176 c
30.0342 71.0791 29.8955 71.0518 29.8193 70.9531 c
29.7412 70.8535 29.748 70.7119 29.835 70.6211 c
33.6162 66.666 36.3662 59.9863 33.9912 52.6934 C
35.5205 63.082 26.3955 71.8086 16.2119 71.8086 c
6.6123 71.8086 0.061523 64.2988 0.602539 56.8672 c
1.13965 49.502 6.0459 45.8984 10.2744 44.3691 c
10.3857 44.3301 10.5107 44.3711 10.5742 44.4707 c
10.6377 44.5723 10.624 44.7012 10.541 44.7871 c
4.93066 50.4785 4.16309 61.2793 14.124 64.5469 C
8.26465 59.4902 10.4346 47.7168 19.8135 46.8223 c
19.9307 46.8105 20.04 46.8809 20.0781 46.9922 c
20.1162 47.1035 20.0732 47.2266 19.9746 47.2891 c
17.9658 48.5664 16.2959 51.0605 16.2959 53.8633 c
16.2959 58.5371 19.7178 60.373 21.9717 60.373 c
25.3936 60.373 28.2314 57.1172 28.2314 52.1934 c
28.2314 46.3496 22.9717 41.5098 16.2119 40.7578 c
9.58594 40.0234 3.42969 42.9121 0.461914 47.2168 c
0.392578 47.3184 0.260742 47.3555 0.148438 47.3047 c
0.036133 47.2539 -0.022461 47.1289 0.007813 47.0098 c
3.02637 35.3066 16.8037 30.1328 26.8955 37.5039 C
20.2822 30.002 9.88965 29.8984 1.17383 37.5898 c
1.08301 37.6699 0.948242 37.6738 0.851563 37.5996 c
0.754883 37.5273 0.724609 37.3945 0.77832 37.2871 c
3.44531 31.8789 10.0313 25.4668 19.3838 26.4023 c
27.9404 27.2578 32.9053 35.416 33.9072 42.0938 C
34.4639 33.5723 32.5137 27.5566 25.1533 21.9473 c
25.0566 21.873 25.0264 21.7402 25.0811 21.6309 c
25.1357 21.5234 25.2607 21.4688 25.3779 21.502 c
32.1631 23.4629 37.6084 26.9277 40.4268 34.0469 C
40.4268 27.8848 38.2881 21.6738 32.9014 17.5352 c
32.8037 17.4609 32.7744 17.3301 32.8291 17.2207 c
32.8838 17.1113 33.0078 17.0566 33.125 17.0898 c
36.5781 18.0742 39.2959 19.5781 41.2627 22.2754 C
42.5732 11.1758 47.7842 4.58398 53.7881 4.58398 c
57.9131 4.58398 60.9932 7.61719 60.9932 12.4551 c
60.9932 15.2852 59.5049 19.2578 56.1826 21.4746 c
f
155.4102 113.0938 m
152.248 116.998 145.8711 118.4863 138.9785 117.082 C
139.4883 121.3828 138.6445 125.873 137.3672 128.5664 c
137.3145 128.6758 137.1934 128.7334 137.0762 128.7051 c
136.959 128.6758 136.8789 128.5684 136.8828 128.4473 c
137.2578 119.6807 132.2598 112.6035 123.4336 109.5371 C
130.3398 114.293 132.3594 123.7305 129.0723 128.6035 c
129.0039 128.7021 128.877 128.7412 128.7656 128.6953 c
128.6543 128.6504 128.5898 128.5332 128.6113 128.416 c
128.9844 126.3555 128.0059 123.7314 125.8984 121.6895 c
122.9922 118.875 119.0488 118.2363 117.0879 120.2598 c
115.127 122.2852 115.8906 126.207 118.7949 129.0215 c
119.8555 130.0488 121.0547 130.7832 122.2441 131.2061 c
122.3574 131.2461 122.4258 131.3594 122.4102 131.4775 c
122.3965 131.5967 122.3008 131.6885 122.1816 131.6982 c
115.793 132.2529 111.4121 128.4463 108.666 123.8203 c
105.8711 119.1152 101.0957 115.4102 95.4551 116.1504 c
95.3359 116.166 95.2227 116.0957 95.1816 115.9824 c
95.1426 115.8691 95.1875 115.7422 95.291 115.6807 c
98.0879 113.9961 101.1621 113.2969 105.1543 114.6289 C
99.3594 109.7197 91.1074 106.8867 83.3145 109.4014 c
83.2051 109.4375 83.0859 109.3945 83.0234 109.2979 c
82.9609 109.2012 82.9727 109.0752 83.0488 108.9902 c
88.957 102.4258 100.7383 102.2949 108.1582 107.6172 C
105.1211 103.3008 101.0898 100.1328 93.8652 99.1387 c
93.75 99.123 93.6602 99.0313 93.6465 98.916 c
93.6348 98.7998 93.7012 98.6904 93.8105 98.6504 c
102.1016 95.5723 110.4102 98.6953 117.2559 106.8652 C
114.2637 100.4883 109.3496 95.3809 102.4883 92.8535 c
102.373 92.8115 102.3047 92.6934 102.3262 92.5742 c
102.3457 92.4531 102.4492 92.3643 102.5703 92.3613 c
106.5137 92.2803 110.0566 93.2188 114.8359 95.9316 C
111.3281 90.2422 112.0957 80.293 117.2051 73.6738 c
117.2754 73.582 117.4004 73.5498 117.5078 73.5957 c
117.6133 73.6426 117.6758 73.7549 117.6563 73.8691 c
116.4766 81.0703 118.9551 89.1992 123.2656 93.5117 C
121.1133 85.8799 123.2598 78.9355 129.1621 73.8672 c
129.2324 73.8066 129.332 73.79 129.418 73.8232 c
129.5059 73.8564 129.5664 73.9355 129.5801 74.0273 c
130.8145 83.4453 141.3496 93.002 150.1816 93.8027 c
150.3066 93.8135 150.4043 93.9141 150.4121 94.0381 c
150.4199 94.1621 150.3379 94.2754 150.2148 94.3027 c
145.9355 95.2715 141.5234 94.793 137.8262 93.2715 C
140.4863 96.2051 143.7656 98.3828 147.3809 99.5176 c
147.498 99.5537 147.5703 99.668 147.5566 99.7891 c
147.543 99.9102 147.4434 100.0039 147.3223 100.0127 c
142.8125 100.3242 138.3984 99.0068 134.5918 96.4746 C
138.9531 103.0957 145.5723 108.0195 154.0195 109.9805 c
154.1406 110.0088 154.2227 110.1191 154.2168 110.2432 c
154.209 110.3672 154.1133 110.4668 153.9902 110.4805 c
142.0723 111.7822 132.2441 107.1621 125.7695 98.5625 C
127.418 103.4629 132.1348 108.3184 138.7148 111.1816 c
144.5605 113.7266 150.5645 114.1279 155.1367 112.6914 c
155.2422 112.6582 155.3594 112.6982 155.4219 112.791 c
155.4844 112.8828 155.4805 113.0059 155.4102 113.0938 c
f
102.5059 37.5215 m
107.3125 48.0078 106.9707 56.207 103.0996 66.5762 c
103.0547 66.6934 102.9336 66.7607 102.8105 66.7363 c
102.6875 66.7109 102.6016 66.5996 102.6074 66.4746 c
103.2285 53.8535 99.7813 44.8203 92.3086 38.668 C
100.5586 48.5195 96.6621 68.2275 83.4863 68.2275 c
73.9004 68.2275 65.9697 60.252 64.0303 50.7031 c
64.0059 50.582 64.0723 50.459 64.1885 50.416 c
64.3037 50.3711 64.4346 50.416 64.4971 50.5215 c
67.3398 55.2832 71.9063 58.373 76.9551 58.373 c
85.0898 58.373 87.4961 51.9063 87.4961 47.375 c
87.4961 41.1875 82.5703 36.0313 78.7891 36.0313 c
75.3516 36.0313 73.748 38.8555 73.748 40.959 c
73.748 44.8574 76.7461 48.125 80.125 49.123 c
80.2441 49.1582 80.3223 49.2773 80.3047 49.4023 c
80.2852 49.5273 80.1797 49.6191 80.0547 49.6211 c
75.9473 49.6465 72.4766 47.7656 70.4238 44.0527 C
70.1543 46.9277 70.1514 48.7383 71.0645 51.7754 c
71.0996 51.8926 71.0459 52.0176 70.9385 52.0742 c
70.8291 52.1309 70.6963 52.1016 70.6221 52.0059 c
63.2656 42.6133 66.7861 26.3809 72.6016 19.6484 C
67.0693 23.6309 62.1846 32.2813 62.2617 44.041 c
62.2627 44.1641 62.1768 44.2676 62.0566 44.291 c
61.9365 44.3164 61.8174 44.25 61.7725 44.1367 c
57.6641 33.8848 59.8438 14.8887 71.0537 4.28516 C
68.1699 3.88867 65.1865 3.93945 61.9287 4.97852 c
61.8135 5.01367 61.6885 4.96484 61.6299 4.85938 c
61.5713 4.75195 61.5947 4.61914 61.6885 4.54102 c
65.7803 1.08594 71.5029 0 76.9551 0 C
72.2578 5.5 73.8184 16.5547 81.3105 16.5547 c
86.6582 16.5547 89.0859 8.25586 84.957 3.77344 c
84.8789 3.6875 84.8691 3.55859 84.9316 3.46289 c
84.9961 3.36523 85.1172 3.32227 85.2285 3.36133 c
90.0078 5.01563 95.1738 9.15039 95.1738 14.377 c
95.1738 19.4199 90.3613 23.7715 83.373 23.4277 C
92.1914 25.9336 101.4238 23.1602 106.2539 17.1758 c
106.3281 17.082 106.459 17.0547 106.5645 17.1074 c
106.6719 17.1621 106.7266 17.2832 106.6973 17.3984 c
103.9063 28.1152 94.7305 32.5977 83.2578 31.1055 C
92.5391 34.8613 106.5078 31.5859 112.6816 23.7949 c
112.7539 23.7031 112.8809 23.6738 112.9883 23.7227 c
113.0938 23.7734 113.1523 23.8906 113.1289 24.0039 c
111.7578 30.6191 108.2656 35.5664 102.5059 37.5215 C
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.415961 0.013672 0.033997 0 0.615686 0.862745 0.976471 Xa
 0.415961 0.013672 0.033997 0 0.615686 0.862745 0.976471 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
128.8887 56.8086 m
128.8672 56.6895 128.7637 56.6016 128.6426 56.6016 c
115.7363 56.4648 103.8887 53.334 94.6719 45.0859 C
102.7012 50.6445 117.6133 52.5957 126.1992 48.7051 c
126.3086 48.6543 126.3672 48.5332 126.3398 48.416 c
126.3145 48.2988 126.207 48.2168 126.0859 48.2188 c
115.4063 48.5098 106.8066 45.2129 100.1016 39.2559 C
106.9707 38.832 112.6758 34.5156 112.6582 29.4102 c
112.6582 29.291 112.5742 29.1875 112.457 29.1621 c
112.3418 29.1387 112.2227 29.1973 112.1738 29.3066 c
111.0527 31.7949 107.4258 33.0879 103.5918 32.1875 c
99.4121 31.2051 96.5918 27.998 97.291 25.0215 c
97.7617 23.0078 99.7266 21.6191 102.2422 21.2344 c
102.3691 21.2148 102.4629 21.1055 102.459 20.9766 c
102.4551 20.8496 102.3574 20.7441 102.2285 20.7305 c
101.1602 20.6289 100.0488 20.625 98.9121 20.7344 c
92.4219 21.3516 87.3984 25.3281 86.9629 29.9121 C
82.25 29.3652 78.0781 26.7539 76.584 23.1387 c
76.5391 23.0293 76.4258 22.9668 76.3086 22.9844 c
76.1934 23.002 76.1055 23.0977 76.0957 23.2148 c
75.7188 27.9648 77.3535 31.0527 81.0664 34.0684 C
75.6816 32.0098 69.6201 31.9043 63.8096 34.6055 c
63.7041 34.6563 63.6455 34.7715 63.667 34.8867 c
63.6904 35.002 63.79 35.0859 63.9072 35.0898 c
68.7861 35.2793 72.3242 36.8457 75.6406 40.1621 C
57.3838 35.0273 42.5518 46.3633 47.6846 63.2129 c
47.7197 63.3301 47.8311 63.4043 47.9521 63.3926 c
48.0732 63.3809 48.1689 63.2852 48.1787 63.1641 c
49.0967 53.4492 55.8818 47.0469 66.04 46.0879 C
60.6533 48.1465 55.04 53.0625 54.4834 61.6211 c
54.4756 61.7441 54.5557 61.8535 54.6748 61.8848 c
54.7939 61.9141 54.917 61.8535 54.9678 61.7422 c
57.7666 55.5879 63.2646 52.4785 69.1279 51.9297 C
62.7939 54.5117 58.7314 60.5332 57.5576 68.3516 c
57.5381 68.4746 57.6123 68.5918 57.7314 68.6309 c
57.8486 68.668 57.9775 68.6152 58.0342 68.5039 c
61.8994 60.9219 70.1904 55.7109 80.4824 59.6934 c
91.0996 63.8027 95.7559 76.0781 96.7852 84.7324 c
96.8008 84.8555 96.9004 84.9492 97.0234 84.957 c
97.1465 84.9629 97.2559 84.8809 97.2852 84.7617 c
101.0039 69.0723 93.7012 52.8125 80.6484 45.9219 C
87.7441 47.9238 94.0879 52.1816 97.6758 59.2754 C
105.9688 60.293 111.6797 63.1387 114.5332 68.5156 c
114.5898 68.6211 114.7129 68.6738 114.8281 68.6406 c
114.9434 68.6055 115.0195 68.4941 115.0098 68.375 c
114.8281 66.2656 114.0684 62.0449 110.9355 60.1035 C
117.9004 60.1152 123.4414 59.2109 128.7344 57.0898 c
128.8457 57.0449 128.9121 56.9277 128.8887 56.8086 c
f
99.4023 110.2773 m
99.502 110.2129 99.6309 110.2227 99.7188 110.3047 c
99.8047 110.3848 99.8223 110.5137 99.7637 110.6172 c
98.1445 113.4141 99.623 117.4297 102.8145 117.4297 c
108.5352 117.4297 111.2852 106.6602 110.4102 96.8379 C
108.248 102.5918 106.377 104.8926 103.0625 107.6328 c
102.9688 107.709 102.834 107.7109 102.7402 107.6328 c
102.6465 107.5566 102.6191 107.4238 102.6777 107.3164 c
107.5332 98.2383 108.5742 91.252 108.5742 83.2324 C
107.1113 89.1895 105.3789 92.5527 100.4473 97.6133 c
100.3613 97.7012 100.2246 97.7148 100.123 97.6445 c
100.0215 97.5742 99.9844 97.4414 100.0352 97.3301 c
105.334 85.7383 104.9297 72.8828 100.9824 63.0664 c
100.9434 62.9688 100.9688 62.8574 101.0449 62.7852 c
101.123 62.7129 101.2344 62.6973 101.3301 62.7422 c
106.5352 65.293 109.5938 66.9688 114.082 73.1328 C
112.7246 80.5313 113.8535 84.1797 117.2539 90.3262 C
113.3164 80.4102 115.4121 66.4336 125.4414 60.7363 c
125.5508 60.6738 125.6895 60.7012 125.7656 60.8008 c
125.8438 60.9004 125.8379 61.041 125.75 61.1328 c
121.9688 65.0879 119.2188 71.7676 121.5938 79.0586 C
120.0645 68.6699 129.1895 59.9453 139.373 59.9453 c
148.9727 59.9453 155.5234 67.4531 154.9824 74.8848 c
154.4453 82.25 149.5391 85.8555 145.3105 87.3828 c
145.1992 87.4238 145.0742 87.3809 145.0117 87.2813 c
144.9473 87.1816 144.9609 87.0508 145.0449 86.9668 c
150.6543 81.2734 151.4219 70.4746 141.4609 67.207 C
147.3203 72.2637 145.1504 84.0352 135.7715 84.9316 c
135.6543 84.9414 135.5449 84.8711 135.5078 84.7598 c
135.4688 84.6504 135.5117 84.5273 135.6113 84.4648 c
137.6191 83.1855 139.2891 80.6934 139.2891 77.8906 c
139.2891 73.2168 135.8672 71.3789 133.6133 71.3789 c
130.1914 71.3789 127.3535 74.6348 127.3535 79.5605 c
127.3535 85.4023 132.6133 90.2441 139.373 90.9941 c
146 91.7305 152.1563 88.8398 155.123 84.5352 c
155.1934 84.4336 155.3242 84.3984 155.4375 84.4492 c
155.5488 84.5 155.6074 84.623 155.5781 84.7422 c
152.5586 96.4453 138.7813 101.6191 128.6895 94.25 C
135.3027 101.75 145.6953 101.8555 154.4121 94.1641 c
154.502 94.084 154.6367 94.0781 154.7344 94.1523 c
154.8301 94.2266 154.8613 94.3574 154.8066 94.4668 c
152.1406 99.873 145.5547 106.2852 136.2012 105.3516 c
127.6445 104.4961 122.6797 96.3359 121.6777 89.6602 C
121.1211 98.1816 123.0723 104.1953 130.4316 109.8047 c
130.5293 109.8789 130.5586 110.0117 130.5039 110.1211 c
130.4492 110.2305 130.3242 110.2852 130.207 110.25 c
123.4219 108.291 117.9766 104.8262 115.1582 97.707 C
115.1582 103.8672 117.2969 110.0781 122.6836 114.2168 c
122.7813 114.291 122.8105 114.4238 122.7559 114.5332 c
122.7012 114.6406 122.5781 114.6953 122.4609 114.6621 c
119.0078 113.6797 116.2891 112.1738 114.3223 109.4785 C
113.0117 120.5781 107.8008 127.168 101.7969 127.168 c
97.6719 127.168 94.5918 124.1348 94.5918 119.2988 c
94.5918 116.4688 96.0801 112.4961 99.4023 110.2773 c
f
0.174805 18.6602 m
3.33691 14.7559 9.71387 13.2676 16.6064 14.6719 C
16.0967 10.3691 16.9404 5.88086 18.2178 3.18555 c
18.2705 3.07813 18.3916 3.01953 18.5088 3.04883 c
18.626 3.07813 18.7061 3.18555 18.7021 3.30664 c
18.3271 12.0723 23.3252 19.1484 32.1514 22.2148 C
25.2451 17.459 23.2256 8.02148 26.5127 3.15039 c
26.5811 3.05078 26.708 3.01172 26.8193 3.05664 c
26.9307 3.10156 26.9951 3.21875 26.9736 3.33789 c
26.6006 5.39844 27.5791 8.02148 29.6865 10.0625 c
32.5928 12.877 36.5361 13.5156 38.4971 11.4922 c
40.458 9.4668 39.6943 5.54492 36.79 2.73242 c
35.7295 1.70508 34.5303 0.96875 33.3408 0.546875 c
33.2275 0.505859 33.1592 0.392578 33.1748 0.275391 c
33.1885 0.15625 33.2842 0.064453 33.4033 0.054688 c
39.792 -0.5 44.1729 3.30664 46.9189 7.93164 c
49.7139 12.6367 54.4893 16.3438 60.1299 15.6035 c
60.249 15.5879 60.3623 15.6582 60.4033 15.7715 c
60.4424 15.8848 60.3975 16.0098 60.2939 16.0723 c
57.4971 17.7559 54.4229 18.4551 50.4307 17.125 C
56.2256 22.0332 64.4775 24.8652 72.2715 22.3516 c
72.3809 22.3164 72.5 22.3594 72.5625 22.4551 c
72.625 22.5508 72.6152 22.6777 72.5371 22.7637 c
66.6279 29.3281 54.8467 29.459 47.4268 24.1348 C
50.4639 28.4512 54.4951 31.6211 61.7197 32.6133 c
61.835 32.6289 61.9248 32.7227 61.9385 32.8379 c
61.9502 32.9531 61.8838 33.0625 61.7744 33.1035 c
53.4834 36.1797 45.1748 33.0586 38.3291 24.8867 C
41.3213 31.2656 46.2354 36.373 53.0967 38.9004 c
53.2119 38.9414 53.2803 39.0586 53.2588 39.1797 c
53.2393 39.3008 53.1357 39.3887 53.0146 39.3906 c
49.0713 39.4727 45.5283 38.5332 40.749 35.8203 C
44.2568 41.5117 43.4893 51.459 38.3799 58.0801 c
38.3096 58.1719 38.1846 58.2031 38.0771 58.1582 c
37.9717 58.1113 37.9092 57.998 37.9287 57.8828 c
39.1084 50.6836 36.6299 42.5547 32.3193 38.2422 C
34.4717 45.873 32.3252 52.8184 26.4229 57.8848 c
26.3525 57.9453 26.2529 57.9629 26.167 57.9297 c
26.0791 57.8965 26.0186 57.8184 26.0049 57.7266 c
24.7705 48.3086 14.2354 38.752 5.40332 37.9512 c
5.27832 37.9395 5.18066 37.8398 5.17285 37.7148 c
5.16504 37.5898 5.24707 37.4785 5.37012 37.4512 c
9.64941 36.4824 14.0615 36.9609 17.7588 38.4805 C
15.0986 35.5488 11.8193 33.3711 8.2041 32.2363 c
8.08691 32.1992 8.01465 32.0859 8.02832 31.9648 c
8.04199 31.8438 8.1416 31.748 8.2627 31.7402 c
12.7725 31.4297 17.1865 32.7461 20.9932 35.2793 C
16.6318 28.6582 10.0127 23.7344 1.56543 21.7715 c
1.44434 21.7441 1.3623 21.6328 1.36816 21.5098 c
1.37598 21.3867 1.47168 21.2871 1.59473 21.2734 c
13.5127 19.9707 23.3408 24.5918 29.8154 33.1914 C
28.167 28.2891 23.4502 23.4355 16.8701 20.5723 c
11.0244 18.0273 5.02051 17.625 0.448242 19.0625 c
0.342773 19.0957 0.225586 19.0547 0.163086 18.9629 c
0.100586 18.8691 0.104492 18.7461 0.174805 18.6602 c
f
53.0791 94.2324 m
48.2725 83.7461 48.6143 75.5469 52.4854 65.1777 c
52.5303 65.0605 52.6514 64.9922 52.7744 65.0176 c
52.8975 65.043 52.9834 65.1543 52.9775 65.2773 c
52.3564 77.9004 55.8037 86.9316 63.2764 93.0859 C
55.0264 83.2324 58.9229 63.5254 72.0996 63.5254 c
81.6855 63.5254 89.6152 71.502 91.5547 81.0508 c
91.5801 81.1719 91.5137 81.293 91.3965 81.3379 c
91.2813 81.3828 91.1504 81.3379 91.0879 81.2305 c
88.2461 76.4688 83.6797 73.3789 78.6309 73.3789 c
70.4951 73.3789 68.0889 79.8457 68.0889 84.3789 c
68.0889 90.5645 73.0156 95.7207 76.7969 95.7207 c
80.2344 95.7207 81.8379 92.8984 81.8379 90.7949 c
81.8379 86.8965 78.8398 83.6289 75.4629 82.6309 c
75.3418 82.5938 75.2656 82.4766 75.2832 82.3516 c
75.3008 82.2266 75.4063 82.1328 75.5332 82.1328 c
79.6387 82.1074 83.1094 83.9863 85.1621 87.7012 C
85.4316 84.8262 85.4336 83.0156 84.5215 79.9766 c
84.4863 79.8594 84.5391 79.7344 84.6465 79.6777 c
84.7559 79.623 84.8887 79.6504 84.9629 79.748 c
92.3203 89.1406 88.7988 105.3711 82.9844 112.1055 C
88.5156 108.123 93.4004 99.4707 93.3242 87.7109 c
93.3223 87.5898 93.4082 87.4844 93.5293 87.4609 c
93.6484 87.4375 93.7676 87.502 93.8125 87.6152 c
97.9219 97.8691 95.7422 116.8633 84.5313 127.4668 C
87.416 127.8652 90.3984 127.8145 93.6563 126.7754 c
93.7715 126.7383 93.8965 126.7891 93.9551 126.8945 c
94.0137 127 93.9902 127.1328 93.8965 127.2109 c
89.8047 130.666 84.082 131.752 78.6309 131.752 C
83.3281 126.252 81.7676 115.1992 74.2773 115.1992 c
68.9268 115.1992 66.499 123.498 70.6279 127.9805 c
70.7061 128.0664 70.7158 128.1934 70.6533 128.291 c
70.5889 128.3887 70.4678 128.4297 70.3564 128.3926 c
65.5771 126.7363 60.4111 122.6035 60.4111 117.375 c
60.4111 112.334 65.2236 107.9805 72.2148 108.3242 C
63.3936 105.8203 54.1611 108.5918 49.3311 114.5781 c
49.2568 114.6699 49.126 114.6992 49.0205 114.6445 c
48.9131 114.5918 48.8584 114.4707 48.8877 114.3535 c
51.6787 103.6387 60.8545 99.1543 72.3281 100.6484 C
63.0459 96.8906 49.0771 100.166 42.9033 107.957 c
42.8311 108.0488 42.7041 108.0801 42.5967 108.0293 c
42.4912 107.9805 42.4326 107.8633 42.4561 107.748 c
43.8271 101.1328 47.3193 96.1875 53.0791 94.2324 C
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.992126 0.828977 0.322972 0.007965 0 0.258824 0.494118 Xa
 0.992126 0.828977 0.322972 0.007965 0 0.258824 0.494118 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
135.0352 184.5869 m
135.0566 184.7061 135.1602 184.792 135.2813 184.7939 c
148.1875 184.9287 160.0352 188.0615 169.2529 196.3086 C
161.2227 190.751 146.3105 188.7979 137.7256 192.6904 c
137.6152 192.7402 137.5566 192.8604 137.584 192.9785 c
137.6104 193.0967 137.7168 193.1787 137.8379 193.1748 c
148.5176 192.8857 157.1172 196.1816 163.8223 202.1396 C
156.9531 202.5615 151.248 206.8799 151.2656 211.9844 c
151.2656 212.1035 151.3496 212.2061 151.4668 212.2314 c
151.583 212.2568 151.7012 212.1963 151.75 212.0879 c
152.8711 209.5986 156.498 208.3076 160.333 209.208 c
164.5127 210.1885 167.333 213.3975 166.6338 216.373 c
166.1621 218.3877 164.1973 219.7764 161.6816 220.1602 c
161.5547 220.1787 161.4619 220.29 161.4648 220.418 c
161.4688 220.5459 161.5674 220.6514 161.6953 220.6631 c
162.7637 220.7656 163.875 220.7695 165.0127 220.6611 c
171.5029 220.0439 176.5264 216.0654 176.9619 211.4834 C
181.6748 212.0303 185.8467 214.6396 187.3408 218.2568 c
187.3857 218.3652 187.501 218.4287 187.6162 218.4111 c
187.7314 218.3916 187.8193 218.2969 187.8291 218.1807 c
188.2061 213.4287 186.5713 210.3418 182.8584 207.3262 C
188.2432 209.3857 194.3027 209.4912 200.1133 206.7881 c
200.2188 206.7393 200.2773 206.624 200.2559 206.5088 c
200.2324 206.3936 200.1328 206.3096 200.0156 206.3057 c
195.1367 206.1152 191.5996 204.5498 188.2861 201.2334 C
206.5391 206.3672 221.3711 195.0322 216.2383 178.1807 c
216.2031 178.0654 216.0918 177.9902 215.9707 178.0029 c
215.8496 178.0146 215.7539 178.1104 215.7441 178.2314 c
214.8262 187.9453 208.041 194.3467 197.8828 195.3076 C
203.2695 193.2471 208.8828 188.3311 209.4395 179.7734 c
209.4473 179.6514 209.3672 179.54 209.248 179.5107 c
209.1289 179.4814 209.0059 179.54 208.9551 179.6514 c
206.1563 185.8057 200.6582 188.917 194.7949 189.4639 C
201.1289 186.8838 205.1914 180.8623 206.3652 173.0439 c
206.3848 172.9209 206.3105 172.8018 206.1914 172.7646 c
206.0742 172.7256 205.9453 172.7803 205.8887 172.8896 c
202.0234 180.4727 193.7324 185.6836 183.4424 181.7021 c
172.8252 177.5928 168.168 165.3154 167.1387 156.6611 c
167.124 156.54 167.0234 156.4463 166.9004 156.4385 c
166.7783 156.4307 166.668 156.5127 166.6396 156.6338 c
162.9199 172.3213 170.2227 188.583 183.2764 195.4736 C
176.1807 193.4707 169.8369 189.2139 166.249 182.1191 C
157.9551 181.1006 152.2451 178.2568 149.3916 172.8799 c
149.335 172.7725 149.2109 172.7197 149.0957 172.7549 c
148.9805 172.7881 148.9043 172.8994 148.9141 173.0205 c
149.0967 175.1299 149.8555 179.3506 152.9883 181.291 C
146.0234 181.2803 140.4824 182.1846 135.1895 184.3037 c
135.0781 184.3496 135.0127 184.4678 135.0352 184.5869 c
f
164.5215 131.1162 m
164.4229 131.1826 164.293 131.1709 164.2061 131.0908 c
164.1201 131.0088 164.1016 130.8799 164.1602 130.7783 c
165.7803 127.9814 164.3008 123.9639 161.1094 123.9639 c
155.3887 123.9639 152.6387 134.7334 153.5137 144.5576 C
155.6768 138.8018 157.5469 136.5029 160.8613 133.7627 c
160.9551 133.6846 161.0898 133.6846 161.1836 133.7607 c
161.2773 133.8389 161.3047 133.9697 161.2471 134.0771 c
156.3906 143.1572 155.3496 150.1436 155.3496 158.1631 C
156.8125 152.2041 158.5449 148.8408 163.4766 143.7822 c
163.5625 143.6943 163.6992 143.6807 163.8018 143.749 c
163.9033 143.8193 163.9404 143.9521 163.8887 144.0654 c
158.5908 155.6553 158.9951 168.5127 162.9414 178.3291 c
162.9805 178.4268 162.9561 178.5381 162.8789 178.6104 c
162.8018 178.6807 162.6895 178.6982 162.5938 178.6514 c
157.3887 176.1006 154.3301 174.4248 149.8418 168.2627 C
151.1992 160.8643 150.0703 157.2139 146.6699 151.0674 C
150.6074 160.9854 148.5117 174.9619 138.4824 180.6592 c
138.373 180.7207 138.2344 180.6934 138.1582 180.5947 c
138.0801 180.4951 138.0869 180.3535 138.1738 180.2627 c
141.9551 176.3076 144.7051 169.6279 142.3301 162.335 C
143.8594 172.7236 134.7344 181.4502 124.5508 181.4502 c
114.9512 181.4502 108.4004 173.9404 108.9414 166.5088 c
109.4785 159.1436 114.3848 155.54 118.6133 154.0107 c
118.7246 153.9717 118.8496 154.0127 118.9131 154.1123 c
118.9766 154.2139 118.9629 154.3428 118.8799 154.4287 c
113.2695 160.1201 112.502 170.9209 122.4629 174.1885 C
116.6035 169.1318 118.7734 157.3584 128.1523 156.4639 c
128.2695 156.4521 128.3789 156.5225 128.417 156.6338 c
128.4551 156.7451 128.4121 156.8682 128.3135 156.9307 c
126.3047 158.208 124.6348 160.7021 124.6348 163.5049 c
124.6348 168.1787 128.0566 170.0146 130.3105 170.0146 c
133.7324 170.0146 136.5703 166.7588 136.5703 161.835 c
136.5703 155.9912 131.3105 151.1514 124.5508 150.3994 c
117.9248 149.665 111.7686 152.5537 108.8008 156.8584 c
108.7314 156.96 108.5996 156.9971 108.4873 156.9463 c
108.375 156.8955 108.3164 156.7705 108.3467 156.6514 c
111.3652 144.9482 125.1426 139.7744 135.2344 147.1455 C
128.6211 139.6436 118.2285 139.54 109.5127 147.2314 c
109.4219 147.3115 109.2871 147.3154 109.1904 147.2412 c
109.0938 147.1689 109.0635 147.0361 109.1172 146.9287 c
111.7842 141.5205 118.3701 135.1084 127.7227 136.0439 c
136.2793 136.8994 141.2441 145.0576 142.2461 151.7354 C
142.8027 143.2139 140.8525 137.1982 133.4922 131.5889 c
133.3955 131.5146 133.3652 131.3818 133.4199 131.2725 c
133.4746 131.165 133.5996 131.1104 133.7168 131.1436 c
140.502 133.1045 145.9473 136.5693 148.7656 143.6885 C
148.7656 137.5264 146.627 131.3154 141.2402 127.1768 c
141.1426 127.1025 141.1133 126.9717 141.168 126.8623 c
141.2227 126.7529 141.3467 126.6982 141.4639 126.7314 c
144.917 127.7158 147.6348 129.2197 149.6016 131.917 C
150.9121 120.8174 156.123 114.2256 162.127 114.2256 c
166.252 114.2256 169.332 117.2588 169.332 122.0967 c
169.332 124.9268 167.8438 128.8994 164.5215 131.1162 c
f
263.748 222.7354 m
260.5859 226.6396 254.209 228.1279 247.3164 226.7236 C
247.8262 231.0244 246.9824 235.5146 245.7051 238.208 c
245.6523 238.3174 245.5313 238.375 245.4141 238.3467 c
245.2969 238.3174 245.2168 238.21 245.2207 238.0889 c
245.5957 229.3223 240.5977 222.2451 231.7715 219.1787 C
238.6777 223.9346 240.6973 233.3721 237.4102 238.2451 c
237.3418 238.3438 237.2148 238.3828 237.1035 238.3369 c
236.9922 238.292 236.9277 238.1748 236.9492 238.0576 c
237.3223 235.9971 236.3438 233.373 234.2363 231.3311 c
231.3301 228.5166 227.3867 227.8779 225.4258 229.9014 c
223.4648 231.9268 224.2285 235.8486 227.1328 238.6631 c
228.1934 239.6904 229.3926 240.4248 230.582 240.8477 c
230.6953 240.8877 230.7637 241.001 230.748 241.1191 c
230.7344 241.2383 230.6387 241.3301 230.5195 241.3398 c
224.1309 241.8945 219.75 238.0879 217.0039 233.4619 c
214.209 228.7568 209.4336 225.0518 203.793 225.792 c
203.6738 225.8076 203.5605 225.7373 203.5195 225.624 c
203.4805 225.5107 203.5254 225.3838 203.6289 225.3223 c
206.4258 223.6377 209.5 222.9385 213.4922 224.2705 C
207.6973 219.3613 199.4453 216.5283 191.6523 219.043 c
191.543 219.0791 191.4238 219.0361 191.3613 218.9395 c
191.2988 218.8428 191.3105 218.7168 191.3867 218.6318 c
197.2949 212.0674 209.0762 211.9365 216.4961 217.2588 C
213.459 212.9424 209.4277 209.7744 202.2031 208.7803 c
202.0879 208.7646 201.998 208.6729 201.9844 208.5576 c
201.9727 208.4414 202.0391 208.332 202.1484 208.292 c
210.4395 205.2139 218.748 208.3369 225.5938 216.5068 C
222.6016 210.1299 217.6875 205.0225 210.8262 202.4951 c
210.7109 202.4531 210.6426 202.335 210.6641 202.2158 c
210.6836 202.0947 210.7871 202.0059 210.9082 202.0029 c
214.8516 201.9219 218.3945 202.8604 223.1738 205.5732 C
219.666 199.8838 220.4336 189.9346 225.543 183.3154 c
225.6133 183.2236 225.7383 183.1914 225.8457 183.2373 c
225.9512 183.2842 226.0137 183.3965 225.9941 183.5107 c
224.8145 190.7119 227.293 198.8408 231.6035 203.1533 C
229.4512 195.5215 231.5977 188.5771 237.5 183.5088 c
237.5703 183.4482 237.6699 183.4316 237.7559 183.4648 c
237.8438 183.498 237.9043 183.5771 237.918 183.6689 c
239.1523 193.0869 249.6875 202.6436 258.5195 203.4443 c
258.6445 203.4551 258.7422 203.5557 258.75 203.6797 c
258.7578 203.8037 258.6758 203.917 258.5527 203.9443 c
254.2734 204.9131 249.8613 204.4346 246.1641 202.9131 C
248.8242 205.8467 252.1035 208.0244 255.7188 209.1592 c
255.8359 209.1953 255.9082 209.3096 255.8945 209.4307 c
255.8809 209.5518 255.7813 209.6455 255.6602 209.6543 c
251.1504 209.9658 246.7363 208.6484 242.9297 206.1162 C
247.291 212.7373 253.9102 217.6611 262.3574 219.6221 c
262.4785 219.6504 262.5605 219.7607 262.5547 219.8848 c
262.5469 220.0088 262.4512 220.1084 262.3281 220.1221 c
250.4102 221.4238 240.582 216.8037 234.1074 208.2041 C
235.7559 213.1045 240.4727 217.96 247.0527 220.8232 c
252.8984 223.3682 258.9023 223.7695 263.4746 222.333 c
263.5801 222.2998 263.6973 222.3398 263.7598 222.4326 c
263.8223 222.5244 263.8184 222.6475 263.748 222.7354 c
f
210.8438 147.1631 m
215.6504 157.6494 215.3086 165.8486 211.4375 176.2178 c
211.3926 176.335 211.2715 176.4023 211.1484 176.3779 c
211.0254 176.3525 210.9395 176.2412 210.9453 176.1162 c
211.5664 163.4951 208.1191 154.4619 200.6465 148.3096 C
208.8965 158.1611 205 177.8691 191.8242 177.8691 c
182.2393 177.8691 174.3086 169.8936 172.3691 160.3447 c
172.3447 160.2236 172.4111 160.1006 172.5273 160.0576 c
172.6426 160.0127 172.7734 160.0576 172.8359 160.1631 c
175.6787 164.9248 180.2451 168.0146 185.2939 168.0146 c
193.4277 168.0146 195.834 161.5479 195.834 157.0166 c
195.834 150.8291 190.9082 145.6729 187.1279 145.6729 c
183.6904 145.6729 182.0869 148.4971 182.0869 150.6006 c
182.0869 154.499 185.085 157.7666 188.4639 158.7646 c
188.583 158.7998 188.6611 158.9189 188.6436 159.0439 c
188.624 159.1689 188.5186 159.2607 188.3936 159.2627 c
184.2861 159.2881 180.8154 157.4072 178.7627 153.6943 C
178.4932 156.5693 178.4902 158.3799 179.4033 161.417 c
179.4385 161.5342 179.3848 161.6592 179.2773 161.7158 c
179.168 161.7725 179.0352 161.7432 178.9609 161.6475 c
171.6045 152.2549 175.125 136.0225 180.9404 129.29 C
175.4082 133.2725 170.5234 141.9229 170.6006 153.6826 c
170.6016 153.8057 170.5156 153.9092 170.3955 153.9326 c
170.2754 153.958 170.1563 153.8916 170.1113 153.7783 c
166.0029 143.5264 168.1826 124.5303 179.3926 113.9268 C
176.5088 113.5303 173.5254 113.5811 170.2676 114.6201 c
170.1523 114.6553 170.0273 114.6064 169.9688 114.501 c
169.9102 114.3936 169.9336 114.2607 170.0273 114.1826 c
174.1191 110.7275 179.8418 109.6416 185.2939 109.6416 C
180.5967 115.1416 182.1572 126.1963 189.6494 126.1963 c
194.9961 126.1963 197.4238 117.8975 193.2949 113.415 c
193.2168 113.3291 193.207 113.2002 193.2695 113.1045 c
193.334 113.0068 193.4551 112.9639 193.5664 113.0029 c
198.3457 114.6572 203.5117 118.792 203.5117 124.0186 c
203.5117 129.0615 198.6992 133.4131 191.7109 133.0693 C
200.5293 135.5752 209.7617 132.8018 214.5918 126.8174 c
214.666 126.7236 214.7969 126.6963 214.9023 126.749 c
215.0098 126.8037 215.0645 126.9248 215.0352 127.04 c
212.2441 137.7568 203.0684 142.2393 191.5957 140.7471 C
200.877 144.5029 214.8457 141.2275 221.0195 133.4365 c
221.0918 133.3447 221.2188 133.3154 221.3262 133.3643 c
221.4316 133.415 221.4902 133.5322 221.4668 133.6455 c
220.0957 140.2607 216.6035 145.208 210.8438 147.1631 C
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.415961 0.013672 0.033997 0 0.615686 0.862745 0.976471 Xa
 0.415961 0.013672 0.033997 0 0.615686 0.862745 0.976471 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
237.2266 166.4502 m
237.2051 166.3311 237.1016 166.2432 236.9805 166.2432 c
224.0742 166.1064 212.2266 162.9756 203.0098 154.7275 C
211.0391 160.2861 225.9512 162.2373 234.5371 158.3467 c
234.6465 158.2959 234.7051 158.1748 234.6777 158.0576 c
234.6523 157.9404 234.5449 157.8584 234.4238 157.8604 c
223.7441 158.1514 215.1445 154.8545 208.4395 148.8975 C
215.3086 148.4736 221.0137 144.1572 220.9961 139.0518 c
220.9961 138.9326 220.9121 138.8291 220.7949 138.8037 c
220.6797 138.7803 220.5605 138.8389 220.5117 138.9482 c
219.3906 141.4365 215.7637 142.7295 211.9297 141.8291 c
207.75 140.8467 204.9297 137.6396 205.6289 134.6631 c
206.0996 132.6494 208.0645 131.2607 210.5801 130.876 c
210.707 130.8564 210.8008 130.7471 210.7969 130.6182 c
210.793 130.4912 210.6953 130.3857 210.5664 130.3721 c
209.498 130.2705 208.3867 130.2666 207.25 130.376 c
200.7598 130.9932 195.7363 134.9697 195.3008 139.5537 C
190.5889 139.0068 186.417 136.3955 184.9229 132.7803 c
184.8779 132.6709 184.7646 132.6084 184.6475 132.626 c
184.5322 132.6436 184.4443 132.7393 184.4346 132.8564 c
184.0576 137.6064 185.6924 140.6943 189.4053 143.71 C
184.0205 141.6514 177.959 141.5459 172.1484 144.2471 c
172.043 144.2979 171.9844 144.4131 172.0059 144.5283 c
172.0293 144.6436 172.1289 144.7275 172.2461 144.7314 c
177.125 144.9209 180.6631 146.4873 183.9795 149.8037 C
165.7227 144.6689 150.8906 156.0049 156.0234 172.8545 c
156.0586 172.9717 156.1699 173.0459 156.291 173.0342 c
156.4121 173.0225 156.5078 172.9268 156.5176 172.8057 c
157.4355 163.0908 164.2207 156.6885 174.3789 155.7295 C
168.9922 157.7881 163.3789 162.7041 162.8223 171.2627 c
162.8145 171.3857 162.8945 171.4951 163.0137 171.5264 c
163.1328 171.5557 163.2559 171.4951 163.3066 171.3838 c
166.1055 165.2295 171.6035 162.1201 177.4668 161.5713 C
171.1328 164.1533 167.0703 170.1748 165.8965 177.9932 c
165.877 178.1162 165.9512 178.2334 166.0703 178.2725 c
166.1875 178.3096 166.3164 178.2568 166.373 178.1455 c
170.2383 170.5635 178.5293 165.3525 188.8213 169.335 c
199.4375 173.4443 204.0938 185.7197 205.123 194.374 c
205.1387 194.4971 205.2383 194.5908 205.3613 194.5986 c
205.4844 194.6045 205.5938 194.5225 205.623 194.4033 c
209.3418 178.7139 202.0391 162.4541 188.9873 155.5635 C
196.082 157.5654 202.4258 161.8232 206.0137 168.917 C
214.3066 169.9346 220.0176 172.7803 222.8711 178.1572 c
222.9277 178.2627 223.0508 178.3154 223.166 178.2822 c
223.2813 178.2471 223.3574 178.1357 223.3477 178.0166 c
223.166 175.9072 222.4063 171.6865 219.2734 169.7451 C
226.2383 169.7568 231.7793 168.8525 237.0723 166.7314 c
237.1836 166.6865 237.25 166.5693 237.2266 166.4502 c
f
207.7402 219.9189 m
207.8398 219.8545 207.9688 219.8643 208.0566 219.9463 c
208.1426 220.0264 208.1602 220.1553 208.1016 220.2588 c
206.4824 223.0557 207.9609 227.0713 211.1523 227.0713 c
216.873 227.0713 219.623 216.3018 218.748 206.4795 C
216.5859 212.2334 214.7148 214.5342 211.4004 217.2744 c
211.3066 217.3506 211.1719 217.3525 211.0781 217.2744 c
210.9844 217.1982 210.957 217.0654 211.0156 216.958 c
215.8711 207.8799 216.9121 200.8936 216.9121 192.874 C
215.4492 198.8311 213.7168 202.1943 208.7852 207.2549 c
208.6992 207.3428 208.5625 207.3564 208.4609 207.2861 c
208.3594 207.2158 208.3223 207.083 208.373 206.9717 c
213.6719 195.3799 213.2676 182.5244 209.3203 172.708 c
209.2813 172.6104 209.3066 172.499 209.3828 172.4268 c
209.4609 172.3545 209.5723 172.3389 209.668 172.3838 c
214.873 174.9346 217.9316 176.6104 222.4199 182.7744 C
221.0625 190.1729 222.1914 193.8213 225.5918 199.9678 C
221.6543 190.0518 223.75 176.0752 233.7793 170.3779 c
233.8887 170.3154 234.0273 170.3428 234.1035 170.4424 c
234.1816 170.542 234.1758 170.6826 234.0879 170.7744 c
230.3066 174.7295 227.5566 181.4092 229.9316 188.7002 C
228.4023 178.3115 237.5273 169.5869 247.7109 169.5869 c
257.3105 169.5869 263.8613 177.0947 263.3203 184.5264 c
262.7832 191.8916 257.877 195.4971 253.6484 197.0244 c
253.5371 197.0654 253.4121 197.0225 253.3496 196.9229 c
253.2852 196.8232 253.2988 196.6924 253.3828 196.6084 c
258.9922 190.915 259.7598 180.1162 249.7988 176.8486 C
255.6582 181.9053 253.4883 193.6768 244.1094 194.5732 c
243.9922 194.583 243.8828 194.5127 243.8457 194.4014 c
243.8066 194.292 243.8496 194.1689 243.9492 194.1064 c
245.957 192.8271 247.627 190.335 247.627 187.5322 c
247.627 182.8584 244.2051 181.0205 241.9512 181.0205 c
238.5293 181.0205 235.6914 184.2764 235.6914 189.2021 c
235.6914 195.0439 240.9512 199.8857 247.7109 200.6357 c
254.3379 201.3721 260.4941 198.4814 263.4609 194.1768 c
263.5313 194.0752 263.6621 194.04 263.7754 194.0908 c
263.8867 194.1416 263.9453 194.2646 263.916 194.3838 c
260.8965 206.0869 247.1191 211.2607 237.0273 203.8916 C
243.6406 211.3916 254.0332 211.4971 262.75 203.8057 c
262.8398 203.7256 262.9746 203.7197 263.0723 203.7939 c
263.168 203.8682 263.1992 203.999 263.1445 204.1084 c
260.4785 209.5146 253.8926 215.9268 244.5391 214.9932 c
235.9824 214.1377 231.0176 205.9775 230.0156 199.3018 C
229.459 207.8232 231.4102 213.8369 238.7695 219.4463 c
238.8672 219.5205 238.8965 219.6533 238.8418 219.7627 c
238.7871 219.8721 238.6621 219.9268 238.5449 219.8916 c
231.7598 217.9326 226.3145 214.4678 223.4961 207.3486 C
223.4961 213.5088 225.6348 219.7197 231.0215 223.8584 c
231.1191 223.9326 231.1484 224.0654 231.0938 224.1748 c
231.0391 224.2822 230.916 224.3369 230.7988 224.3037 c
227.3457 223.3213 224.627 221.8154 222.6602 219.1201 C
221.3496 230.2197 216.1387 236.8096 210.1348 236.8096 c
206.0098 236.8096 202.9297 233.7764 202.9297 228.9404 c
202.9297 226.1104 204.418 222.1377 207.7402 219.9189 c
f
108.5137 128.3018 m
111.6758 124.3975 118.0527 122.9092 124.9453 124.3135 C
124.4355 120.0107 125.2793 115.5225 126.5566 112.8271 c
126.6094 112.7197 126.7305 112.6611 126.8477 112.6904 c
126.9648 112.7197 127.0449 112.8271 127.041 112.9482 c
126.666 121.7139 131.6641 128.79 140.4902 131.8564 C
133.584 127.1006 131.5645 117.6631 134.8516 112.792 c
134.9199 112.6924 135.0469 112.6533 135.1582 112.6982 c
135.2695 112.7432 135.334 112.8604 135.3125 112.9795 c
134.9395 115.04 135.918 117.6631 138.0254 119.7041 c
140.9316 122.5186 144.875 123.1572 146.8359 121.1338 c
148.7969 119.1084 148.0332 115.1865 145.1289 112.374 c
144.0684 111.3467 142.8691 110.6104 141.6797 110.1885 c
141.5664 110.1475 141.498 110.0342 141.5137 109.917 c
141.5273 109.7979 141.623 109.7061 141.7422 109.6963 c
148.1309 109.1416 152.5117 112.9482 155.2578 117.5732 c
158.0527 122.2783 162.8281 125.9854 168.4688 125.2451 c
168.5879 125.2295 168.7012 125.2998 168.7422 125.4131 c
168.7813 125.5264 168.7363 125.6514 168.6328 125.7139 c
165.8359 127.3975 162.7617 128.0967 158.7695 126.7666 C
164.5645 131.6748 172.8164 134.5068 180.6104 131.9932 c
180.7197 131.958 180.8389 132.001 180.9014 132.0967 c
180.9639 132.1924 180.9541 132.3193 180.876 132.4053 c
174.9668 138.9697 163.1855 139.1006 155.7656 133.7764 C
158.8027 138.0928 162.834 141.2627 170.0586 142.2549 c
170.1738 142.2705 170.2637 142.3643 170.2773 142.4795 c
170.2891 142.5947 170.2227 142.7041 170.1133 142.7451 c
161.8223 145.8213 153.5137 142.7002 146.668 134.5283 C
149.6602 140.9072 154.5742 146.0146 161.4355 148.542 c
161.5508 148.583 161.6191 148.7002 161.5977 148.8213 c
161.5781 148.9424 161.4746 149.0303 161.3535 149.0322 c
157.4102 149.1143 153.8672 148.1748 149.0879 145.4619 C
152.5957 151.1533 151.8281 161.1006 146.7188 167.7217 c
146.6484 167.8135 146.5234 167.8447 146.416 167.7998 c
146.3105 167.7529 146.248 167.6396 146.2676 167.5244 c
147.4473 160.3252 144.9688 152.1963 140.6582 147.8838 C
142.8105 155.5146 140.6641 162.46 134.7617 167.5264 c
134.6914 167.5869 134.5918 167.6045 134.5059 167.5713 c
134.418 167.5381 134.3574 167.46 134.3438 167.3682 c
133.1094 157.9502 122.5742 148.3936 113.7422 147.5928 c
113.6172 147.5811 113.5195 147.4814 113.5117 147.3564 c
113.5039 147.2314 113.5859 147.1201 113.709 147.0928 c
117.9883 146.124 122.4004 146.6025 126.0977 148.1221 C
123.4375 145.1904 120.1582 143.0127 116.543 141.8779 c
116.4258 141.8408 116.3535 141.7275 116.3672 141.6064 c
116.3809 141.4854 116.4805 141.3896 116.6016 141.3818 c
121.1113 141.0713 125.5254 142.3877 129.332 144.9209 C
124.9707 138.2998 118.3516 133.376 109.9043 131.4131 c
109.7832 131.3857 109.7012 131.2744 109.707 131.1514 c
109.7148 131.0283 109.8105 130.9287 109.9336 130.915 c
121.8516 129.6123 131.6797 134.2334 138.1543 142.833 C
136.5059 137.9307 131.7891 133.0771 125.209 130.2139 c
119.3633 127.6689 113.3594 127.2666 108.7871 128.7041 c
108.6816 128.7373 108.5645 128.6963 108.502 128.6045 c
108.4395 128.5107 108.4434 128.3877 108.5137 128.3018 c
f
161.418 203.874 m
156.6113 193.3877 156.9531 185.1885 160.8242 174.8193 c
160.8691 174.7021 160.9902 174.6338 161.1133 174.6592 c
161.2363 174.6846 161.3223 174.7959 161.3164 174.9189 c
160.6953 187.542 164.1426 196.5732 171.6152 202.7275 C
163.3652 192.874 167.2617 173.167 180.4385 173.167 c
190.0244 173.167 197.9531 181.1436 199.8926 190.6924 c
199.918 190.8135 199.8516 190.9346 199.7344 190.9795 c
199.6191 191.0244 199.4883 190.9795 199.4258 190.8721 c
196.584 186.1104 192.0176 183.0205 186.9697 183.0205 c
178.834 183.0205 176.4277 189.4873 176.4277 194.0205 c
176.4277 200.2061 181.3545 205.3623 185.1357 205.3623 c
188.5732 205.3623 190.1768 202.54 190.1768 200.4365 c
190.1768 196.5381 187.1787 193.2705 183.8018 192.2725 c
183.6807 192.2354 183.6045 192.1182 183.6221 191.9932 c
183.6396 191.8682 183.7451 191.7744 183.8721 191.7744 c
187.9775 191.749 191.4473 193.6279 193.5 197.3428 C
193.7695 194.4678 193.7715 192.6572 192.8594 189.6182 c
192.8242 189.501 192.877 189.376 192.9844 189.3193 c
193.0938 189.2646 193.2266 189.292 193.3008 189.3896 c
200.6582 198.7822 197.1367 215.0127 191.3223 221.7471 C
196.8535 217.7646 201.7383 209.1123 201.6621 197.3525 c
201.6602 197.2314 201.7461 197.126 201.8672 197.1025 c
201.9863 197.0791 202.1055 197.1436 202.1504 197.2568 c
206.2598 207.5107 204.0801 226.5049 192.8691 237.1084 C
195.7539 237.5068 198.7363 237.4561 201.9941 236.417 c
202.1094 236.3799 202.2344 236.4307 202.293 236.5361 c
202.3516 236.6416 202.3281 236.7744 202.2344 236.8525 c
198.1426 240.3076 192.4199 241.3936 186.9697 241.3936 C
191.666 235.8936 190.1064 224.8408 182.6162 224.8408 c
177.2656 224.8408 174.8379 233.1396 178.9668 237.6221 c
179.0449 237.708 179.0547 237.835 178.9922 237.9326 c
178.9277 238.0303 178.8066 238.0713 178.6953 238.0342 c
173.916 236.3779 168.75 232.2451 168.75 227.0166 c
168.75 221.9756 173.5625 217.6221 180.5537 217.9658 C
171.7324 215.4619 162.5 218.2334 157.6699 224.2197 c
157.5957 224.3115 157.4648 224.3408 157.3594 224.2861 c
157.252 224.2334 157.1973 224.1123 157.2266 223.9951 c
160.0176 213.2803 169.1934 208.7959 180.667 210.29 C
171.3848 206.5322 157.416 209.8076 151.2422 217.5986 c
151.1699 217.6904 151.043 217.7217 150.9355 217.6709 c
150.8301 217.6221 150.7715 217.5049 150.7949 217.3896 c
152.166 210.7744 155.6582 205.8291 161.418 203.874 C
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.992126 0.828977 0.322972 0.007965 0 0.258824 0.494118 Xa
 0.992126 0.828977 0.322972 0.007965 0 0.258824 0.494118 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
26.6963 184.5869 m
26.7178 184.7061 26.8213 184.792 26.9424 184.7939 c
39.8486 184.9287 51.6963 188.0615 60.9141 196.3086 C
52.8838 190.751 37.9717 188.7979 29.3867 192.6904 c
29.2764 192.7402 29.2178 192.8604 29.2451 192.9785 c
29.2715 193.0967 29.3779 193.1787 29.499 193.1748 c
40.1787 192.8857 48.7783 196.1816 55.4834 202.1396 C
48.6143 202.5615 42.9092 206.8799 42.9268 211.9844 c
42.9268 212.1035 43.0107 212.2061 43.1279 212.2314 c
43.2441 212.2568 43.3623 212.1963 43.4111 212.0879 c
44.5322 209.5986 48.1592 208.3076 51.9941 209.208 c
56.1738 210.1885 58.9941 213.3975 58.2949 216.373 c
57.8232 218.3877 55.8584 219.7764 53.3428 220.1602 c
53.2158 220.1787 53.123 220.29 53.126 220.418 c
53.1299 220.5459 53.2285 220.6514 53.3564 220.6631 c
54.4248 220.7656 55.5361 220.7695 56.6738 220.6611 c
63.1641 220.0439 68.1875 216.0654 68.623 211.4834 C
73.3359 212.0303 77.5078 214.6396 79.002 218.2568 c
79.0469 218.3652 79.1621 218.4287 79.2773 218.4111 c
79.3926 218.3916 79.4805 218.2969 79.4902 218.1807 c
79.8672 213.4287 78.2324 210.3418 74.5195 207.3262 C
79.9043 209.3857 85.9648 209.4912 91.7754 206.7881 c
91.8809 206.7393 91.9395 206.624 91.918 206.5088 c
91.8945 206.3936 91.7949 206.3096 91.6777 206.3057 c
86.7988 206.1152 83.2617 204.5498 79.9473 201.2334 C
98.2012 206.3672 113.0332 195.0322 107.9004 178.1807 c
107.8652 178.0654 107.7539 177.9902 107.6328 178.0029 c
107.5117 178.0146 107.416 178.1104 107.4063 178.2314 c
106.4883 187.9453 99.7031 194.3467 89.5449 195.3076 C
94.9316 193.2471 100.5449 188.3311 101.1016 179.7734 c
101.1094 179.6514 101.0293 179.54 100.9102 179.5107 c
100.791 179.4814 100.668 179.54 100.6172 179.6514 c
97.8184 185.8057 92.3203 188.917 86.457 189.4639 C
92.791 186.8838 96.8535 180.8623 98.0273 173.0439 c
98.0469 172.9209 97.9727 172.8018 97.8535 172.7646 c
97.7363 172.7256 97.6074 172.7803 97.5508 172.8896 c
93.6855 180.4727 85.3945 185.6836 75.1035 181.7021 c
64.4863 177.5928 59.8291 165.3154 58.7998 156.6611 c
58.7852 156.54 58.6846 156.4463 58.5615 156.4385 c
58.4395 156.4307 58.3291 156.5127 58.3008 156.6338 c
54.5811 172.3213 61.8838 188.583 74.9375 195.4736 C
67.8418 193.4707 61.498 189.2139 57.9102 182.1191 C
49.6162 181.1006 43.9063 178.2568 41.0527 172.8799 c
40.9961 172.7725 40.8721 172.7197 40.7568 172.7549 c
40.6416 172.7881 40.5654 172.8994 40.5752 173.0205 c
40.7578 175.1299 41.5166 179.3506 44.6494 181.291 C
37.6846 181.2803 32.1436 182.1846 26.8506 184.3037 c
26.7393 184.3496 26.6738 184.4678 26.6963 184.5869 c
f
56.1826 131.1162 m
56.084 131.1826 55.9541 131.1709 55.8672 131.0908 c
55.7813 131.0088 55.7627 130.8799 55.8213 130.7783 c
57.4414 127.9814 55.9619 123.9639 52.7705 123.9639 c
47.0498 123.9639 44.2998 134.7334 45.1748 144.5576 C
47.3379 138.8018 49.208 136.5029 52.5225 133.7627 c
52.6162 133.6846 52.751 133.6846 52.8447 133.7607 c
52.9385 133.8389 52.9658 133.9697 52.9082 134.0771 c
48.0518 143.1572 47.0107 150.1436 47.0107 158.1631 C
48.4736 152.2041 50.2061 148.8408 55.1377 143.7822 c
55.2236 143.6943 55.3604 143.6807 55.4629 143.749 c
55.5645 143.8193 55.6016 143.9521 55.5498 144.0654 c
50.252 155.6553 50.6563 168.5127 54.6025 178.3291 c
54.6416 178.4268 54.6172 178.5381 54.54 178.6104 c
54.4629 178.6807 54.3506 178.6982 54.2549 178.6514 c
49.0498 176.1006 45.9912 174.4248 41.5029 168.2627 C
42.8604 160.8643 41.7314 157.2139 38.3311 151.0674 C
42.2686 160.9854 40.1729 174.9619 30.1436 180.6592 c
30.0342 180.7207 29.8955 180.6934 29.8193 180.5947 c
29.7412 180.4951 29.748 180.3535 29.835 180.2627 c
33.6162 176.3076 36.3662 169.6279 33.9912 162.335 C
35.5205 172.7236 26.3955 181.4502 16.2119 181.4502 c
6.6123 181.4502 0.061523 173.9404 0.602539 166.5088 c
1.13965 159.1436 6.0459 155.54 10.2744 154.0107 c
10.3857 153.9717 10.5107 154.0127 10.5742 154.1123 c
10.6377 154.2139 10.624 154.3428 10.541 154.4287 c
4.93066 160.1201 4.16309 170.9209 14.124 174.1885 C
8.26465 169.1318 10.4346 157.3584 19.8135 156.4639 c
19.9307 156.4521 20.04 156.5225 20.0781 156.6338 c
20.1162 156.7451 20.0732 156.8682 19.9746 156.9307 c
17.9658 158.208 16.2959 160.7021 16.2959 163.5049 c
16.2959 168.1787 19.7178 170.0146 21.9717 170.0146 c
25.3936 170.0146 28.2314 166.7588 28.2314 161.835 c
28.2314 155.9912 22.9717 151.1514 16.2119 150.3994 c
9.58594 149.665 3.42969 152.5537 0.461914 156.8584 c
0.392578 156.96 0.260742 156.9971 0.148438 156.9463 c
0.036133 156.8955 -0.022461 156.7705 0.007813 156.6514 c
3.02637 144.9482 16.8037 139.7744 26.8955 147.1455 C
20.2822 139.6436 9.88965 139.54 1.17383 147.2314 c
1.08301 147.3115 0.948242 147.3154 0.851563 147.2412 c
0.754883 147.1689 0.724609 147.0361 0.77832 146.9287 c
3.44531 141.5205 10.0313 135.1084 19.3838 136.0439 c
27.9404 136.8994 32.9053 145.0576 33.9072 151.7354 C
34.4639 143.2139 32.5137 137.1982 25.1533 131.5889 c
25.0566 131.5146 25.0264 131.3818 25.0811 131.2725 c
25.1357 131.165 25.2607 131.1104 25.3779 131.1436 c
32.1631 133.1045 37.6084 136.5693 40.4268 143.6885 C
40.4268 137.5264 38.2881 131.3154 32.9014 127.1768 c
32.8037 127.1025 32.7744 126.9717 32.8291 126.8623 c
32.8838 126.7529 33.0078 126.6982 33.125 126.7314 c
36.5781 127.7158 39.2959 129.2197 41.2627 131.917 C
42.5732 120.8174 47.7842 114.2256 53.7881 114.2256 c
57.9131 114.2256 60.9932 117.2588 60.9932 122.0967 c
60.9932 124.9268 59.5049 128.8994 56.1826 131.1162 c
f
155.4102 222.7354 m
152.248 226.6396 145.8711 228.1279 138.9785 226.7236 C
139.4883 231.0244 138.6445 235.5146 137.3672 238.208 c
137.3145 238.3174 137.1934 238.375 137.0762 238.3467 c
136.959 238.3174 136.8789 238.21 136.8828 238.0889 c
137.2578 229.3223 132.2598 222.2451 123.4336 219.1787 C
130.3398 223.9346 132.3594 233.3721 129.0723 238.2451 c
129.0039 238.3438 128.877 238.3828 128.7656 238.3369 c
128.6543 238.292 128.5898 238.1748 128.6113 238.0576 c
128.9844 235.9971 128.0059 233.373 125.8984 231.3311 c
122.9922 228.5166 119.0488 227.8779 117.0879 229.9014 c
115.127 231.9268 115.8906 235.8486 118.7949 238.6631 c
119.8555 239.6904 121.0547 240.4248 122.2441 240.8477 c
122.3574 240.8877 122.4258 241.001 122.4102 241.1191 c
122.3965 241.2383 122.3008 241.3301 122.1816 241.3398 c
115.793 241.8945 111.4121 238.0879 108.666 233.4619 c
105.8711 228.7568 101.0957 225.0518 95.4551 225.792 c
95.3359 225.8076 95.2227 225.7373 95.1816 225.624 c
95.1426 225.5107 95.1875 225.3838 95.291 225.3223 c
98.0879 223.6377 101.1621 222.9385 105.1543 224.2705 C
99.3594 219.3613 91.1074 216.5283 83.3145 219.043 c
83.2051 219.0791 83.0859 219.0361 83.0234 218.9395 c
82.9609 218.8428 82.9727 218.7168 83.0488 218.6318 c
88.957 212.0674 100.7383 211.9365 108.1582 217.2588 C
105.1211 212.9424 101.0898 209.7744 93.8652 208.7803 c
93.75 208.7646 93.6602 208.6729 93.6465 208.5576 c
93.6348 208.4414 93.7012 208.332 93.8105 208.292 c
102.1016 205.2139 110.4102 208.3369 117.2559 216.5068 C
114.2637 210.1299 109.3496 205.0225 102.4883 202.4951 c
102.373 202.4531 102.3047 202.335 102.3262 202.2158 c
102.3457 202.0947 102.4492 202.0059 102.5703 202.0029 c
106.5137 201.9219 110.0566 202.8604 114.8359 205.5732 C
111.3281 199.8838 112.0957 189.9346 117.2051 183.3154 c
117.2754 183.2236 117.4004 183.1914 117.5078 183.2373 c
117.6133 183.2842 117.6758 183.3965 117.6563 183.5107 c
116.4766 190.7119 118.9551 198.8408 123.2656 203.1533 C
121.1133 195.5215 123.2598 188.5771 129.1621 183.5088 c
129.2324 183.4482 129.332 183.4316 129.418 183.4648 c
129.5059 183.498 129.5664 183.5771 129.5801 183.6689 c
130.8145 193.0869 141.3496 202.6436 150.1816 203.4443 c
150.3066 203.4551 150.4043 203.5557 150.4121 203.6797 c
150.4199 203.8037 150.3379 203.917 150.2148 203.9443 c
145.9355 204.9131 141.5234 204.4346 137.8262 202.9131 C
140.4863 205.8467 143.7656 208.0244 147.3809 209.1592 c
147.498 209.1953 147.5703 209.3096 147.5566 209.4307 c
147.543 209.5518 147.4434 209.6455 147.3223 209.6543 c
142.8125 209.9658 138.3984 208.6484 134.5918 206.1162 C
138.9531 212.7373 145.5723 217.6611 154.0195 219.6221 c
154.1406 219.6504 154.2227 219.7607 154.2168 219.8848 c
154.209 220.0088 154.1133 220.1084 153.9902 220.1221 c
142.0723 221.4238 132.2441 216.8037 125.7695 208.2041 C
127.418 213.1045 132.1348 217.96 138.7148 220.8232 c
144.5605 223.3682 150.5645 223.7695 155.1367 222.333 c
155.2422 222.2998 155.3594 222.3398 155.4219 222.4326 c
155.4844 222.5244 155.4805 222.6475 155.4102 222.7354 c
f
102.5059 147.1631 m
107.3125 157.6494 106.9707 165.8486 103.0996 176.2178 c
103.0547 176.335 102.9336 176.4023 102.8105 176.3779 c
102.6875 176.3525 102.6016 176.2412 102.6074 176.1162 c
103.2285 163.4951 99.7813 154.4619 92.3086 148.3096 C
100.5586 158.1611 96.6621 177.8691 83.4863 177.8691 c
73.9004 177.8691 65.9697 169.8936 64.0303 160.3447 c
64.0059 160.2236 64.0723 160.1006 64.1885 160.0576 c
64.3037 160.0127 64.4346 160.0576 64.4971 160.1631 c
67.3398 164.9248 71.9063 168.0146 76.9551 168.0146 c
85.0898 168.0146 87.4961 161.5479 87.4961 157.0166 c
87.4961 150.8291 82.5703 145.6729 78.7891 145.6729 c
75.3516 145.6729 73.748 148.4971 73.748 150.6006 c
73.748 154.499 76.7461 157.7666 80.125 158.7646 c
80.2441 158.7998 80.3223 158.9189 80.3047 159.0439 c
80.2852 159.1689 80.1797 159.2607 80.0547 159.2627 c
75.9473 159.2881 72.4766 157.4072 70.4238 153.6943 C
70.1543 156.5693 70.1514 158.3799 71.0645 161.417 c
71.0996 161.5342 71.0459 161.6592 70.9385 161.7158 c
70.8291 161.7725 70.6963 161.7432 70.6221 161.6475 c
63.2656 152.2549 66.7861 136.0225 72.6016 129.29 C
67.0693 133.2725 62.1846 141.9229 62.2617 153.6826 c
62.2627 153.8057 62.1768 153.9092 62.0566 153.9326 c
61.9365 153.958 61.8174 153.8916 61.7725 153.7783 c
57.6641 143.5264 59.8438 124.5303 71.0537 113.9268 C
68.1699 113.5303 65.1865 113.5811 61.9287 114.6201 c
61.8135 114.6553 61.6885 114.6064 61.6299 114.501 c
61.5713 114.3936 61.5947 114.2607 61.6885 114.1826 c
65.7803 110.7275 71.5029 109.6416 76.9551 109.6416 C
72.2578 115.1416 73.8184 126.1963 81.3105 126.1963 c
86.6582 126.1963 89.0859 117.8975 84.957 113.415 c
84.8789 113.3291 84.8691 113.2002 84.9316 113.1045 c
84.9961 113.0068 85.1172 112.9639 85.2285 113.0029 c
90.0078 114.6572 95.1738 118.792 95.1738 124.0186 c
95.1738 129.0615 90.3613 133.4131 83.373 133.0693 C
92.1914 135.5752 101.4238 132.8018 106.2539 126.8174 c
106.3281 126.7236 106.459 126.6963 106.5645 126.749 c
106.6719 126.8037 106.7266 126.9248 106.6973 127.04 c
103.9063 137.7568 94.7305 142.2393 83.2578 140.7471 C
92.5391 144.5029 106.5078 141.2275 112.6816 133.4365 c
112.7539 133.3447 112.8809 133.3154 112.9883 133.3643 c
113.0938 133.415 113.1523 133.5322 113.1289 133.6455 c
111.7578 140.2607 108.2656 145.208 102.5059 147.1631 C
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.415961 0.013672 0.033997 0 0.615686 0.862745 0.976471 Xa
 0.415961 0.013672 0.033997 0 0.615686 0.862745 0.976471 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
128.8887 166.4502 m
128.8672 166.3311 128.7637 166.2432 128.6426 166.2432 c
115.7363 166.1064 103.8887 162.9756 94.6719 154.7275 C
102.7012 160.2861 117.6133 162.2373 126.1992 158.3467 c
126.3086 158.2959 126.3672 158.1748 126.3398 158.0576 c
126.3145 157.9404 126.207 157.8584 126.0859 157.8604 c
115.4063 158.1514 106.8066 154.8545 100.1016 148.8975 C
106.9707 148.4736 112.6758 144.1572 112.6582 139.0518 c
112.6582 138.9326 112.5742 138.8291 112.457 138.8037 c
112.3418 138.7803 112.2227 138.8389 112.1738 138.9482 c
111.0527 141.4365 107.4258 142.7295 103.5918 141.8291 c
99.4121 140.8467 96.5918 137.6396 97.291 134.6631 c
97.7617 132.6494 99.7266 131.2607 102.2422 130.876 c
102.3691 130.8564 102.4629 130.7471 102.459 130.6182 c
102.4551 130.4912 102.3574 130.3857 102.2285 130.3721 c
101.1602 130.2705 100.0488 130.2666 98.9121 130.376 c
92.4219 130.9932 87.3984 134.9697 86.9629 139.5537 C
82.25 139.0068 78.0781 136.3955 76.584 132.7803 c
76.5391 132.6709 76.4258 132.6084 76.3086 132.626 c
76.1934 132.6436 76.1055 132.7393 76.0957 132.8564 c
75.7188 137.6064 77.3535 140.6943 81.0664 143.71 C
75.6816 141.6514 69.6201 141.5459 63.8096 144.2471 c
63.7041 144.2979 63.6455 144.4131 63.667 144.5283 c
63.6904 144.6436 63.79 144.7275 63.9072 144.7314 c
68.7861 144.9209 72.3242 146.4873 75.6406 149.8037 C
57.3838 144.6689 42.5518 156.0049 47.6846 172.8545 c
47.7197 172.9717 47.8311 173.0459 47.9521 173.0342 c
48.0732 173.0225 48.1689 172.9268 48.1787 172.8057 c
49.0967 163.0908 55.8818 156.6885 66.04 155.7295 C
60.6533 157.7881 55.04 162.7041 54.4834 171.2627 c
54.4756 171.3857 54.5557 171.4951 54.6748 171.5264 c
54.7939 171.5557 54.917 171.4951 54.9678 171.3838 c
57.7666 165.2295 63.2646 162.1201 69.1279 161.5713 C
62.7939 164.1533 58.7314 170.1748 57.5576 177.9932 c
57.5381 178.1162 57.6123 178.2334 57.7314 178.2725 c
57.8486 178.3096 57.9775 178.2568 58.0342 178.1455 c
61.8994 170.5635 70.1904 165.3525 80.4824 169.335 c
91.0996 173.4443 95.7559 185.7197 96.7852 194.374 c
96.8008 194.4971 96.9004 194.5908 97.0234 194.5986 c
97.1465 194.6045 97.2559 194.5225 97.2852 194.4033 c
101.0039 178.7139 93.7012 162.4541 80.6484 155.5635 C
87.7441 157.5654 94.0879 161.8232 97.6758 168.917 C
105.9688 169.9346 111.6797 172.7803 114.5332 178.1572 c
114.5898 178.2627 114.7129 178.3154 114.8281 178.2822 c
114.9434 178.2471 115.0195 178.1357 115.0098 178.0166 c
114.8281 175.9072 114.0684 171.6865 110.9355 169.7451 C
117.9004 169.7568 123.4414 168.8525 128.7344 166.7314 c
128.8457 166.6865 128.9121 166.5693 128.8887 166.4502 c
f
99.4023 219.9189 m
99.502 219.8545 99.6309 219.8643 99.7188 219.9463 c
99.8047 220.0264 99.8223 220.1553 99.7637 220.2588 c
98.1445 223.0557 99.623 227.0713 102.8145 227.0713 c
108.5352 227.0713 111.2852 216.3018 110.4102 206.4795 C
108.248 212.2334 106.377 214.5342 103.0625 217.2744 c
102.9688 217.3506 102.834 217.3525 102.7402 217.2744 c
102.6465 217.1982 102.6191 217.0654 102.6777 216.958 c
107.5332 207.8799 108.5742 200.8936 108.5742 192.874 C
107.1113 198.8311 105.3789 202.1943 100.4473 207.2549 c
100.3613 207.3428 100.2246 207.3564 100.123 207.2861 c
100.0215 207.2158 99.9844 207.083 100.0352 206.9717 c
105.334 195.3799 104.9297 182.5244 100.9824 172.708 c
100.9434 172.6104 100.9688 172.499 101.0449 172.4268 c
101.123 172.3545 101.2344 172.3389 101.3301 172.3838 c
106.5352 174.9346 109.5938 176.6104 114.082 182.7744 C
112.7246 190.1729 113.8535 193.8213 117.2539 199.9678 C
113.3164 190.0518 115.4121 176.0752 125.4414 170.3779 c
125.5508 170.3154 125.6895 170.3428 125.7656 170.4424 c
125.8438 170.542 125.8379 170.6826 125.75 170.7744 c
121.9688 174.7295 119.2188 181.4092 121.5938 188.7002 C
120.0645 178.3115 129.1895 169.5869 139.373 169.5869 c
148.9727 169.5869 155.5234 177.0947 154.9824 184.5264 c
154.4453 191.8916 149.5391 195.4971 145.3105 197.0244 c
145.1992 197.0654 145.0742 197.0225 145.0117 196.9229 c
144.9473 196.8232 144.9609 196.6924 145.0449 196.6084 c
150.6543 190.915 151.4219 180.1162 141.4609 176.8486 C
147.3203 181.9053 145.1504 193.6768 135.7715 194.5732 c
135.6543 194.583 135.5449 194.5127 135.5078 194.4014 c
135.4688 194.292 135.5117 194.1689 135.6113 194.1064 c
137.6191 192.8271 139.2891 190.335 139.2891 187.5322 c
139.2891 182.8584 135.8672 181.0205 133.6133 181.0205 c
130.1914 181.0205 127.3535 184.2764 127.3535 189.2021 c
127.3535 195.0439 132.6133 199.8857 139.373 200.6357 c
146 201.3721 152.1563 198.4814 155.123 194.1768 c
155.1934 194.0752 155.3242 194.04 155.4375 194.0908 c
155.5488 194.1416 155.6074 194.2646 155.5781 194.3838 c
152.5586 206.0869 138.7813 211.2607 128.6895 203.8916 C
135.3027 211.3916 145.6953 211.4971 154.4121 203.8057 c
154.502 203.7256 154.6367 203.7197 154.7344 203.7939 c
154.8301 203.8682 154.8613 203.999 154.8066 204.1084 c
152.1406 209.5146 145.5547 215.9268 136.2012 214.9932 c
127.6445 214.1377 122.6797 205.9775 121.6777 199.3018 C
121.1211 207.8232 123.0723 213.8369 130.4316 219.4463 c
130.5293 219.5205 130.5586 219.6533 130.5039 219.7627 c
130.4492 219.8721 130.3242 219.9268 130.207 219.8916 c
123.4219 217.9326 117.9766 214.4678 115.1582 207.3486 C
115.1582 213.5088 117.2969 219.7197 122.6836 223.8584 c
122.7813 223.9326 122.8105 224.0654 122.7559 224.1748 c
122.7012 224.2822 122.5781 224.3369 122.4609 224.3037 c
119.0078 223.3213 116.2891 221.8154 114.3223 219.1201 C
113.0117 230.2197 107.8008 236.8096 101.7969 236.8096 c
97.6719 236.8096 94.5918 233.7764 94.5918 228.9404 c
94.5918 226.1104 96.0801 222.1377 99.4023 219.9189 c
f
0.174805 128.3018 m
3.33691 124.3975 9.71387 122.9092 16.6064 124.3135 C
16.0967 120.0107 16.9404 115.5225 18.2178 112.8271 c
18.2705 112.7197 18.3916 112.6611 18.5088 112.6904 c
18.626 112.7197 18.7061 112.8271 18.7021 112.9482 c
18.3271 121.7139 23.3252 128.79 32.1514 131.8564 C
25.2451 127.1006 23.2256 117.6631 26.5127 112.792 c
26.5811 112.6924 26.708 112.6533 26.8193 112.6982 c
26.9307 112.7432 26.9951 112.8604 26.9736 112.9795 c
26.6006 115.04 27.5791 117.6631 29.6865 119.7041 c
32.5928 122.5186 36.5361 123.1572 38.4971 121.1338 c
40.458 119.1084 39.6943 115.1865 36.79 112.374 c
35.7295 111.3467 34.5303 110.6104 33.3408 110.1885 c
33.2275 110.1475 33.1592 110.0342 33.1748 109.917 c
33.1885 109.7979 33.2842 109.7061 33.4033 109.6963 c
39.792 109.1416 44.1729 112.9482 46.9189 117.5732 c
49.7139 122.2783 54.4893 125.9854 60.1299 125.2451 c
60.249 125.2295 60.3623 125.2998 60.4033 125.4131 c
60.4424 125.5264 60.3975 125.6514 60.2939 125.7139 c
57.4971 127.3975 54.4229 128.0967 50.4307 126.7666 C
56.2256 131.6748 64.4775 134.5068 72.2715 131.9932 c
72.3809 131.958 72.5 132.001 72.5625 132.0967 c
72.625 132.1924 72.6152 132.3193 72.5371 132.4053 c
66.6279 138.9697 54.8467 139.1006 47.4268 133.7764 C
50.4639 138.0928 54.4951 141.2627 61.7197 142.2549 c
61.835 142.2705 61.9248 142.3643 61.9385 142.4795 c
61.9502 142.5947 61.8838 142.7041 61.7744 142.7451 c
53.4834 145.8213 45.1748 142.7002 38.3291 134.5283 C
41.3213 140.9072 46.2354 146.0146 53.0967 148.542 c
53.2119 148.583 53.2803 148.7002 53.2588 148.8213 c
53.2393 148.9424 53.1357 149.0303 53.0146 149.0322 c
49.0713 149.1143 45.5283 148.1748 40.749 145.4619 C
44.2568 151.1533 43.4893 161.1006 38.3799 167.7217 c
38.3096 167.8135 38.1846 167.8447 38.0771 167.7998 c
37.9717 167.7529 37.9092 167.6396 37.9287 167.5244 c
39.1084 160.3252 36.6299 152.1963 32.3193 147.8838 C
34.4717 155.5146 32.3252 162.46 26.4229 167.5264 c
26.3525 167.5869 26.2529 167.6045 26.167 167.5713 c
26.0791 167.5381 26.0186 167.46 26.0049 167.3682 c
24.7705 157.9502 14.2354 148.3936 5.40332 147.5928 c
5.27832 147.5811 5.18066 147.4814 5.17285 147.3564 c
5.16504 147.2314 5.24707 147.1201 5.37012 147.0928 c
9.64941 146.124 14.0615 146.6025 17.7588 148.1221 C
15.0986 145.1904 11.8193 143.0127 8.2041 141.8779 c
8.08691 141.8408 8.01465 141.7275 8.02832 141.6064 c
8.04199 141.4854 8.1416 141.3896 8.2627 141.3818 c
12.7725 141.0713 17.1865 142.3877 20.9932 144.9209 C
16.6318 138.2998 10.0127 133.376 1.56543 131.4131 c
1.44434 131.3857 1.3623 131.2744 1.36816 131.1514 c
1.37598 131.0283 1.47168 130.9287 1.59473 130.915 c
13.5127 129.6123 23.3408 134.2334 29.8154 142.833 C
28.167 137.9307 23.4502 133.0771 16.8701 130.2139 c
11.0244 127.6689 5.02051 127.2666 0.448242 128.7041 c
0.342773 128.7373 0.225586 128.6963 0.163086 128.6045 c
0.100586 128.5107 0.104492 128.3877 0.174805 128.3018 c
f
53.0791 203.874 m
48.2725 193.3877 48.6143 185.1885 52.4854 174.8193 c
52.5303 174.7021 52.6514 174.6338 52.7744 174.6592 c
52.8975 174.6846 52.9834 174.7959 52.9775 174.9189 c
52.3564 187.542 55.8037 196.5732 63.2764 202.7275 C
55.0264 192.874 58.9229 173.167 72.0996 173.167 c
81.6855 173.167 89.6152 181.1436 91.5547 190.6924 c
91.5801 190.8135 91.5137 190.9346 91.3965 190.9795 c
91.2813 191.0244 91.1504 190.9795 91.0879 190.8721 c
88.2461 186.1104 83.6797 183.0205 78.6309 183.0205 c
70.4951 183.0205 68.0889 189.4873 68.0889 194.0205 c
68.0889 200.2061 73.0156 205.3623 76.7969 205.3623 c
80.2344 205.3623 81.8379 202.54 81.8379 200.4365 c
81.8379 196.5381 78.8398 193.2705 75.4629 192.2725 c
75.3418 192.2354 75.2656 192.1182 75.2832 191.9932 c
75.3008 191.8682 75.4063 191.7744 75.5332 191.7744 c
79.6387 191.749 83.1094 193.6279 85.1621 197.3428 C
85.4316 194.4678 85.4336 192.6572 84.5215 189.6182 c
84.4863 189.501 84.5391 189.376 84.6465 189.3193 c
84.7559 189.2646 84.8887 189.292 84.9629 189.3896 c
92.3203 198.7822 88.7988 215.0127 82.9844 221.7471 C
88.5156 217.7646 93.4004 209.1123 93.3242 197.3525 c
93.3223 197.2314 93.4082 197.126 93.5293 197.1025 c
93.6484 197.0791 93.7676 197.1436 93.8125 197.2568 c
97.9219 207.5107 95.7422 226.5049 84.5313 237.1084 C
87.416 237.5068 90.3984 237.4561 93.6563 236.417 c
93.7715 236.3799 93.8965 236.4307 93.9551 236.5361 c
94.0137 236.6416 93.9902 236.7744 93.8965 236.8525 c
89.8047 240.3076 84.082 241.3936 78.6309 241.3936 C
83.3281 235.8936 81.7676 224.8408 74.2773 224.8408 c
68.9268 224.8408 66.499 233.1396 70.6279 237.6221 c
70.7061 237.708 70.7158 237.835 70.6533 237.9326 c
70.5889 238.0303 70.4678 238.0713 70.3564 238.0342 c
65.5771 236.3779 60.4111 232.2451 60.4111 227.0166 c
60.4111 221.9756 65.2236 217.6221 72.2148 217.9658 C
63.3936 215.4619 54.1611 218.2334 49.3311 224.2197 c
49.2568 224.3115 49.126 224.3408 49.0205 224.2861 c
48.9131 224.2334 48.8584 224.1123 48.8877 223.9951 c
51.6787 213.2803 60.8545 208.7959 72.3281 210.29 C
63.0459 206.5322 49.0771 209.8076 42.9033 217.5986 c
42.8311 217.6904 42.7041 217.7217 42.5967 217.6709 c
42.4912 217.6221 42.4326 217.5049 42.4561 217.3896 c
43.8271 210.7744 47.3193 205.8291 53.0791 203.874 C
f
*U
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginBrushPattern
(Unnamed 6)0 A
u
u
0 J 0 j 1 w 4 M []0 d0 XR
-3897.5 4020.5 m
-3796.1816 4020.5 L
-3796.1816 4012.7832 L
-3897.5 4012.7832 L
-3897.5 4020.5 L
n
u
0 O
0.815 0.796628 0.765103 0.611902 0.137255 0.121569 0.12549 Xa
-3796.3 4014.207 m
-3796.1504 4014.2439 -3796.2041 4013.8247 -3796.1816 4013.7495 C
-3796.4319 4013.8423 -3796.2937 4014.3159 -3796.3 4014.207 C
f
-3798.7693 4015.1582 m
-3798.7256 4014.9871 L
-3799.0896 4015.4063 L
-3798.7693 4015.1582 L
f
-3801.0784 4015.1504 m
-3800.8601 4015.8643 -3800.2417 4015.0352 -3799.8303 4015.2888 C
-3799.7625 4015.4524 L
-3799.5769 4014.8772 L
-3800.0769 4014.9683 -3800.7263 4015.3499 -3801.0784 4015.1504 C
f
-3802.3096 4013.6072 m
-3802.2336 4013.8843 -3802.5759 4013.8455 -3802.0225 4013.6936 C
-3802.0503 4013.6631 -3802.0583 4013.6455 -3802.0745 4013.623 C
-3802.1243 4013.6272 -3802.1929 4013.6262 -3802.3096 4013.6072 C
f
-3802.0745 4013.623 m
-3801.8313 4013.603 -3802.2336 4013.3904 -3802.0745 4013.623 C
-3802.0745 4013.623 L
f
-3803.1975 4013.7822 m
-3802.8772 4013.5342 L
-3802.9441 4013.3704 -3803.2292 4013.333 -3803.1233 4013.2134 C
-3803.4519 4013.3496 -3803.3843 4013.5127 -3803.1975 4013.7822 C
f
-3803.5012 4014.303 m
-3803.3352 4014.1982 L
-3803.3643 4014.1294 -3803.4082 4014.105 -3803.5012 4014.303 C
f
-3802.9832 4013.9768 m
-3803.3352 4014.1982 L
-3803.2888 4014.313 -3803.2839 4014.5447 -3803.1736 4014.1184 C
-3803.2024 4014.3296 -3803.1328 4014.1262 -3802.9832 4013.9768 C
f
-3802.7839 4014.0852 m
-3802.6042 4014.24 -3802.3721 4014.3384 -3802.6936 4014.5852 C
-3802.0808 4014.4871 -3802.1711 4013.9856 -3802.7839 4014.0852 C
f
-3801.1963 4015.8887 m
-3800.9561 4016.0984 L
-3800.7483 4015.8584 L
-3800.8521 4015.9771 -3801.2112 4015.665 -3801.1963 4015.8887 C
f
-3805.1929 4013.4126 m
-3805.2129 4013.5647 -3805.0852 4013.8174 -3805.0613 4014.012 C
-3804.8247 4013.8374 L
-3804.9463 4013.7334 -3805.1768 4013.6375 -3805.1929 4013.4126 C
f
-3805.0613 4014.012 m
-3805.4153 4014.2727 L
-3805.0991 4014.303 -3805.0413 4014.1792 -3805.0613 4014.012 C
f
-3803.5583 4015.0955 m
-3802.9768 4014.5479 L
-3803.6704 4015.103 L
-3803.5583 4015.0955 L
f
-3806.5449 4013.3936 m
-3806.3442 4013.0422 L
-3806.7017 4013.5735 L
-3806.5449 4013.3936 L
f
-3807.4417 4013.4551 m
-3807.2932 4013.1638 -3807.6453 4012.9624 -3807.4883 4012.7832 C
-3807.7319 4012.8352 -3807.9399 4013.0852 -3808.1272 4013.3103 C
-3807.9282 4013.1848 -3807.7161 4013.2168 -3807.4417 4013.4551 C
f
-3808.4417 4013.6375 m
-3808.3423 4013.5679 -3808.2393 4013.4431 -3808.1272 4013.3103 C
-3808.2329 4013.3772 -3808.3369 4013.4744 -3808.4417 4013.6375 C
f
-3806.0183 4014.1975 m
-3806.0457 4014.1055 -3806.0984 4013.8655 -3806.2969 4013.7639 C
-3806.1577 4014.1912 L
-3806.1152 4014.1936 -3806.0671 4014.1951 -3806.0183 4014.1975 C
f
-3806.1528 4014.2046 m
-3806.1577 4014.1912 L
-3806.3088 4014.1814 -3806.4136 4014.1719 -3806.4585 4014.167 c
-3806.4199 4014.1707 -3806.3279 4014.1824 -3806.1528 4014.2046 C
f
-3805.9832 4014.1992 m
-3805.9961 4014.1982 -3806.0056 4014.1975 -3806.0183 4014.1975 C
-3806.0049 4014.24 -3805.9968 4014.2534 -3805.9832 4014.1992 C
f
-3804.4863 4014.709 m
-3804.6943 4014.948 -3805.1279 4015.2039 -3804.7083 4015.5686 C
-3804.5591 4015.2759 -3804.7993 4015.0686 -3804.4863 4014.709 c
f
-3805.8103 4014.7334 m
-3805.4343 4014.8311 L
-3805.4417 4014.7183 -3805.5095 4014.5535 -3805.4065 4014.4351 C
-3805.8103 4014.7334 L
f
-3805.9944 4014.8694 m
-3805.8103 4014.7334 L
-3805.9497 4014.6975 L
-3805.9944 4014.8694 L
f
-3807.7976 4014.0376 m
-3807.96 4014.2239 -3808.1377 4014.239 -3808.3384 4014.269 C
-3808.1233 4014.353 -3807.9009 4014.3992 -3807.6897 4014.3972 C
-3807.6599 4014.2632 -3807.5671 4014.0222 -3807.7976 4014.0376 C
f
-3806.9983 4014.1563 m
-3807.0095 4014.1663 -3807.0239 4014.1707 -3807.0344 4014.1807 C
-3807.0122 4014.217 -3806.9944 4014.2283 -3806.9983 4014.1563 C
f
-3810.3142 4014.2664 m
-3810.3032 4014.2896 -3810.2937 4014.3196 -3810.2825 4014.344 C
-3810.28 4014.3196 -3810.2783 4014.2952 -3810.2751 4014.27 C
-3810.3142 4014.2664 L
f
-3807.6536 4014.4771 m
-3807.4919 4014.5598 -3807.3953 4014.4551 -3807.3032 4014.324 C
-3807.4241 4014.3662 -3807.5522 4014.3943 -3807.6897 4014.3972 C
-3807.7031 4014.4583 -3807.7056 4014.4983 -3807.6536 4014.4771 C
f
-3808.9929 4013.8374 m
-3808.9087 4013.9272 -3808.8132 4014.0032 -3808.7129 4014.0723 C
-3808.7952 4013.937 -3808.9631 4013.7263 -3808.9929 4013.8374 C
f
-3807.0889 4014.0623 m
-3807.0808 4014.0559 -3807.0735 4014.0479 -3807.0647 4014.0432 C
-3807.1177 4013.9524 -3807.1111 4013.9966 -3807.0889 4014.0623 C
f
-3807.0889 4014.0623 m
-3807.1721 4014.1243 -3807.2375 4014.2295 -3807.3032 4014.324 C
-3807.2048 4014.2896 -3807.1135 4014.2439 -3807.0344 4014.1807 C
-3807.0544 4014.1504 -3807.0745 4014.104 -3807.0889 4014.0623 C
f
-3810.9128 4017.009 m
-3810.8843 4016.613 -3810.4592 4016.2471 -3810.0923 4016.6719 C
-3809.7312 4016.375 -3809.9673 4015.0723 -3810.2825 4014.344 C
-3810.2937 4014.5166 -3810.2937 4014.6763 -3810.6653 4014.9104 C
-3810.5352 4015.1262 -3809.8408 4015.4163 -3810.1543 4015.7747 C
-3810.6465 4015.9783 -3810.5576 4015.6343 -3810.7969 4015.425 C
-3810.5935 4015.9182 -3811.4231 4016.1431 -3811.3159 4016.8687 C
-3810.8843 4016.613 L
-3810.8762 4016.7263 -3811.0327 4016.9063 -3810.9128 4017.009 C
f
-3809.5745 4014.3843 m
-3809.4216 4014.3352 L
-3809.5959 4014.2664 -3809.7207 4014.1079 -3809.9504 4013.7976 C
-3810.2048 4013.9915 -3810.2576 4014.1382 -3810.2751 4014.27 C
-3809.5222 4014.3252 L
-3809.5745 4014.3843 L
f
-3808.7351 4014.3335 m
-3808.8545 4014.7644 -3809.2217 4014.948 -3808.9968 4015.4143 C
-3808.5481 4015.3843 -3808.6824 4015.0542 -3808.4143 4014.8672 C
-3809.1384 4014.9744 -3808.2063 4014.6272 -3808.7295 4014.3831 C
-3808.5872 4014.3096 -3808.4592 4014.2871 -3808.3384 4014.269 C
-3808.4688 4014.217 -3808.5945 4014.1519 -3808.7129 4014.0723 C
-3808.7063 4014.0823 -3808.7017 4014.0896 -3808.6963 4014.0984 C
-3808.6929 4014.0984 L
-3808.6929 4014.1006 -3808.6936 4014.1016 -3808.6936 4014.104 C
-3808.6624 4014.1582 -3808.6521 4014.1912 -3808.6873 4014.1604 C
-3808.6897 4014.165 -3808.6985 4014.167 -3808.7024 4014.1692 C
-3808.7073 4014.2283 -3808.7207 4014.2808 -3808.7351 4014.3311 C
-3808.9448 4014.2422 -3808.7681 4014.22 -3808.7024 4014.1692 C
-3808.7 4014.1472 -3808.6943 4014.1272 -3808.6936 4014.104 C
-3808.6943 4014.1023 -3808.6953 4014.1006 -3808.6963 4014.0984 C
-3809.4216 4014.3352 L
-3809.2681 4014.395 -3809.0759 4014.3831 -3808.7351 4014.3335 C
f
-3805.0952 4016.4951 m
-3805.1177 4016.457 -3805.1167 4016.4263 -3805.1184 4016.395 C
-3805.1653 4016.448 -3805.1831 4016.4839 -3805.0952 4016.4951 C
f
-3805.3936 4016.2351 m
-3805.3408 4016.175 -3805.2969 4016.0032 -3805.1255 4016.0471 C
-3804.9768 4016.1763 -3805.1262 4016.2534 -3805.1184 4016.395 C
-3805.0151 4016.2808 -3804.7568 4016.0862 -3805.0808 4015.8762 C
-3805.1321 4015.9351 L
-3805.4241 4015.7871 -3805.7993 4015.2495 -3805.7483 4015.1902 C
-3805.6631 4015.5784 -3805.5879 4015.8542 -3805.3936 4016.2351 C
f
-3807.0852 4015.3943 m
-3807.6892 4015.6055 L
-3807.3816 4015.9783 L
-3807.3972 4015.7544 L
-3807.0537 4015.8423 -3807.1279 4015.5667 -3807.0852 4015.3943 C
f
-3810.3833 4014.052 m
-3810.3032 4013.5967 L
-3810.6521 4014.24 L
-3810.3833 4014.052 L
f
-3811.1682 4014.1062 m
-3811.1392 4013.7112 L
-3811.3464 4013.9495 L
-3811.1682 4014.1062 L
f
-3855.4617 4019.0166 m
-3855.6392 4019.1287 L
-3855.5552 4019.0942 -3855.5012 4019.0564 -3855.4617 4019.0166 C
f
-3854.1768 4019.0435 m
-3854.1453 4018.8484 L
-3854.2048 4018.9558 -3854.2292 4019.0352 -3854.1768 4019.0435 C
f
-3830.4456 4014.1504 m
-3830.7041 4013.7815 -3830.9929 4013.2083 -3830.9617 4013.6536 C
-3830.8823 4014.0872 L
-3830.7017 4014.009 -3830.5632 4014.0576 -3830.4456 4014.1504 C
f
-3843.6479 4016.7415 m
-3843.6233 4016.7832 -3843.5977 4016.8286 -3843.5723 4016.8728 C
-3843.5095 4016.7246 -3843.4504 4016.5872 -3843.3977 4016.4583 C
-3843.4729 4016.5471 -3843.5583 4016.6416 -3843.6479 4016.7415 C
f
-3843.8303 4018.5364 m
-3844.1711 4018.2566 L
-3844.0945 4018.3542 -3843.9849 4018.448 -3843.8303 4018.5364 C
f
-3862.4792 4019.4768 m
-3862.6863 4019.9182 L
-3862.3623 4019.9163 -3862.5049 4019.6936 -3862.4792 4019.4768 C
f
-3819.2073 4014.2664 m
-3819.4304 4014.0967 -3819.6079 4014.0254 -3819.7639 4014.0044 C
-3819.4951 4014.2534 -3819.2783 4014.6272 -3819.2073 4014.2664 C
f
-3854.9561 4014.4126 m
-3855.0647 4014.4912 -3855.1111 4014.5796 -3855.1079 4014.6763 C
-3854.9961 4014.6023 -3854.9329 4014.519 -3854.9561 4014.4126 C
f
-3820.4082 4014.0059 m
-3820.3689 4014.0496 -3820.3303 4014.071 -3820.2903 4014.1079 C
-3820.1272 4014.0352 -3819.9631 4013.9768 -3819.7639 4014.0044 C
-3819.9624 4013.8196 -3820.1897 4013.7046 -3820.4082 4014.0059 C
f
-3887.9297 4019.1172 m
-3887.9482 4019.0984 -3887.9705 4019.0884 -3887.9873 4019.0652 C
-3887.9929 4019.1243 -3887.9673 4019.1272 -3887.9297 4019.1172 C
f
-3895.3442 4014.74 m
-3895.2712 4014.7124 -3895.1521 4014.7119 -3895.0398 4014.7063 C
-3895.0945 4014.6763 -3895.1863 4014.6792 -3895.3442 4014.74 c
f
-3814.3264 4013.917 m
-3814.1599 4013.8887 -3814.3 4013.8694 -3814.3264 4013.917 C
-3814.3264 4013.917 L
f
-3813.5168 4015.6331 m
-3813.5522 4015.6814 -3813.5791 4015.7439 -3813.5833 4015.844 C
-3813.5696 4015.74 -3813.5464 4015.6736 -3813.5168 4015.6331 c
f
-3822.0664 4016.7063 m
-3822.0713 4016.7063 -3822.0752 4016.7046 -3822.0808 4016.7046 C
-3822.0313 4016.7896 -3822.0398 4016.7732 -3822.0664 4016.7063 C
f
-3814.0759 4014.1143 m
-3814.1384 4014.061 -3814.2104 4014.0166 -3814.2888 4013.9856 C
-3814.2544 4014.019 -3814.1897 4014.061 -3814.0759 4014.1143 C
f
-3814.1096 4013.9092 m
-3814.0522 4013.9287 -3814.0071 4013.9395 -3813.9641 4013.9512 C
-3813.9431 4013.8792 -3813.9617 4013.8335 -3814.1096 4013.9092 C
f
-3814.5583 4013.9407 m
-3814.4631 4013.9336 -3814.3743 4013.9539 -3814.2888 4013.9856 C
-3814.3215 4013.9558 -3814.3352 4013.9319 -3814.3264 4013.917 C
-3814.3752 4013.9236 -3814.4441 4013.9326 -3814.5583 4013.9407 c
f
-3874.2932 4017.9558 m
-3874.3042 4017.9424 -3874.3169 4017.9336 -3874.3289 4017.915 C
-3874.4968 4018.0952 -3874.4231 4018.0667 -3874.2932 4017.9558 C
f
-3834.7783 4018.6563 m
-3834.7705 4018.6519 -3834.7664 4018.6404 -3834.7593 4018.636 C
-3834.7671 4018.6311 -3834.7769 4018.625 -3834.7839 4018.6199 C
-3834.7783 4018.6563 L
f
-3835.3762 4018.979 m
-3835.1216 4018.4392 -3834.9768 4018.5056 -3834.7839 4018.6199 C
-3834.9817 4017.3694 L
-3835.3762 4018.979 L
f
*u
-3858.5383 4019.1416 m
-3858.1184 4019.532 L
-3858.6252 4020.1736 -3858.9919 4019.9524 -3858.5977 4020.5 C
-3858.5383 4019.1416 -3856.9656 4020.3616 -3856.9072 4019.0039 C
-3856.6304 4019.2896 L
-3856.7097 4019.2766 -3856.7224 4019.356 -3856.8008 4019.343 C
-3856.2625 4019.9934 -3856.4009 4018.3616 -3855.7073 4018.5542 C
-3855.4656 4018.6582 -3855.2969 4018.855 -3855.4617 4019.0166 C
-3854.9231 4018.6807 L
-3854.7664 4018.707 -3854.8047 4018.9431 -3854.9607 4018.917 C
-3854.1392 4018.8086 L
-3854.1453 4018.8484 L
-3854.0281 4018.636 -3853.7625 4018.3064 -3853.6328 4018.1663 C
-3853.4241 4018.3616 -3853.7375 4018.3103 -3853.6841 4018.479 C
-3853.2292 4018.1504 L
-3853.0439 4018.5032 -3853.4209 4018.844 -3853.7351 4018.7935 C
-3853.3103 4020.1494 -3853.3577 4018.4524 -3852.4409 4019.2444 C
-3852.8704 4019.4163 L
-3852.5935 4020.1863 -3852.2583 4019.9072 -3851.7727 4020.3875 C
-3851.8879 4020.1367 -3852.7449 4019.1775 -3852.2512 4018.8391 C
-3852.1121 4018.9414 -3851.9287 4018.99 -3851.6624 4018.7168 C
-3851.6599 4019.2 -3851.3999 4019.0811 -3851.0745 4019.0535 C
-3851.0967 4019.6936 L
-3850.7449 4019.5088 -3850.7727 4019.1831 -3850.5657 4018.895 C
-3850.1736 4018.9583 -3850.0923 4019.4536 -3850 4019.8711 C
-3849.3721 4019.9727 -3850.4336 4019.0767 -3849.6904 4018.9558 C
-3849.1682 4019.2007 -3848.8015 4018.9392 -3848.1768 4018.5564 C
-3847.8113 4018.7776 -3848.2407 4018.948 -3848.1096 4019.1311 C
-3847.7856 4018.6206 L
-3847.7063 4018.6331 -3847.7319 4018.7896 -3847.7449 4018.8687 C
-3847.4719 4018.6707 -3847.7224 4018.229 -3847.2932 4018.0559 C
-3847.1775 4017.3511 -3846.4121 4019.0852 -3845.8809 4018.2854 C
-3845.75 4018.467 -3845.9441 4018.6775 -3845.9041 4018.925 C
-3845.1753 4018.3999 -3845.2793 4018.5435 -3844.6809 4017.8367 C
-3844.1711 4018.2566 L
-3844.5457 4017.7766 -3844.0671 4017.2083 -3843.6479 4016.7415 C
-3843.7808 4016.509 -3843.8943 4016.3064 -3843.9705 4016.2095 C
-3843.3015 4015.8662 L
-3843.2207 4015.9712 -3843.2881 4016.1912 -3843.3977 4016.4583 C
-3843.3521 4016.4055 -3843.3088 4016.353 -3843.2751 4016.3047 C
-3843.0359 4016.541 -3843.1599 4016.9104 -3843.3313 4017.2676 C
-3843.4128 4017.1416 -3843.4937 4017.0071 -3843.5723 4016.8728 C
-3843.7375 4017.2615 -3843.8921 4017.6919 -3843.8577 4018.0667 C
-3843.8142 4017.9927 -3843.7305 4017.9292 -3843.6384 4017.8936 C
-3843.6816 4017.999 -3843.7092 4018.0935 -3843.6892 4018.1575 c
-3843.6665 4018.2246 -3843.5967 4018.083 -3843.4873 4017.9192 C
-3843.3352 4018.6331 L
-3843.2983 4018.3499 L
-3842.4231 4018.7959 L
-3841.7969 4018.0784 -3841.2522 4017.021 -3840.2583 4016.7271 C
-3840.5049 4017.25 -3840.3113 4017.5811 -3840.3247 4018.2007 C
-3840.5959 4017.5447 -3841.0945 4018.479 -3841.6096 4018.3462 c
-3841.3408 4018.415 -3841.3999 4018.7112 -3841.4683 4018.813 C
-3840.5496 4018.2168 L
-3840.5703 4018.7239 -3840.3545 4018.5967 -3840.1145 4018.8064 C
-3840.2959 4017.8047 -3839.4297 4018.1392 -3839.0559 4017.8323 C
-3839.0327 4018.168 -3839.1223 4018.512 -3839.5784 4018.4304 C
-3839.0752 4019.1848 -3838.9282 4017.2544 -3838.4343 4017.895 C
-3838.5457 4017.9031 -3838.6057 4017.8518 -3838.6497 4018.0232 C
-3838.3896 4017.7239 -3837.7537 4017.9612 -3837.9033 4018.2534 C
-3838.0144 4018.2603 L
-3837.2751 4018.3792 -3835.7639 4018.2676 -3835.6536 4017.417 C
-3835.6462 4017.5276 -3835.7505 4018.4424 -3835.7952 4018.6143 C
-3834.4761 4015.7527 L
-3834.5923 4016.4832 -3834.1462 4018.2224 -3834.7593 4018.636 C
-3834.5833 4018.74 -3834.3655 4018.8616 -3833.9944 4018.603 C
-3834.1145 4018.499 -3834.2937 4017.5471 -3834.1296 4017.48 C
-3833.6792 4018.2932 -3833.8169 4017.915 -3833.2617 4018.6084 C
-3833.4417 4018.4524 -3833.2417 4017.3064 -3832.9573 4017.343 C
-3833.0017 4017.5144 -3832.9336 4018.4734 -3833.0376 4018.5928 C
-3832.3296 4017.4683 L
-3832.5063 4017.6707 -3832.3608 4018.4214 -3832.2024 4018.74 C
-3832.2759 4018.519 -3831.5903 4018.76 -3831.4016 4018.6487 C
-3831.7017 4018.3875 L
-3830.9023 4018.5579 -3830.9121 4016.8064 -3830.1191 4016.8655 C
-3830.2151 4017.0974 -3830.3562 4018.2952 -3829.9529 4018.4363 C
-3829.7681 4017.8606 -3829.1345 4015.6663 -3828.4329 4015.2227 C
-3828.2983 4015.552 L
-3827.76 4015.1768 L
-3828.0952 4016.0435 -3829.0359 4017.8672 -3829.5496 4018.5767 C
-3829.2505 4018.8374 -3829.4663 4018.9656 -3829.0183 4018.9351 C
-3828.8601 4019.2439 -3829.2625 4019.4031 -3829.3943 4019.4214 C
-3828.3513 4019.6206 L
-3828.3977 4018.948 -3827.5537 4018.9463 -3827.5935 4018.3862 C
-3828.7263 4019.083 L
-3828.7722 4018.4119 -3828.0713 4017.175 -3827.3323 4017.2932 C
-3827.1443 4017.561 -3827.4729 4018.49 -3827.4575 4018.7144 C
-3827.3616 4018.4832 -3826.7561 4018.272 -3826.6882 4018.4363 C
-3827.0017 4018.7959 L
-3826.5903 4019.0486 -3826.3303 4017.9048 -3825.8359 4018.5464 C
-3825.6653 4018.5896 -3825.3264 4019.4119 -3825.2969 4019.0144 C
-3825.5752 4018.2471 -3825.6296 4015.8743 -3825.4441 4015.2979 C
-3825.3843 4015.3499 -3824.5481 4016.031 -3824.3533 4016.4104 C
-3824.0723 4017.012 -3824.7751 4017.844 -3824.5359 4018.3606 C
-3824.5256 4018.1768 -3824.3704 4017.9502 -3824.3057 4017.8772 C
-3824.1265 4018.0342 -3824.3799 4018.4463 -3823.9905 4018.363 C
-3823.9255 4017.6824 -3823.1985 4018.4207 -3823.8064 4017.7871 C
-3823.4255 4017.5923 -3823.4016 4017.9282 -3822.9543 4017.8975 C
-3823.0967 4017.457 -3822.5527 4016.3992 -3822.1711 4016.2039 C
-3822.1936 4016.3772 -3822.1079 4016.603 -3822.0664 4016.7063 C
-3821.2856 4016.7676 -3820.8665 4017.0774 -3820.1384 4017.083 C
-3820.0713 4017.2483 -3819.72 4017.448 -3819.8696 4017.7415 C
-3819.7649 4017.6206 -3819.6687 4017.3894 -3819.4441 4017.373 C
-3819.0095 4017.9624 -3819.9448 4017.4646 -3819.6135 4018.1736 C
-3819.5852 4017.7776 -3819.0327 4017.6262 -3818.7129 4017.3792 C
-3818.8113 4016.7671 -3819.4519 4017.2615 -3819.7722 4017.5088 C
-3819.7737 4016.665 -3819.2161 4015.7815 -3818.4551 4015.3911 C
-3817.8503 4015.1814 -3818.1929 4015.9363 -3818.0879 4015.8167 C
-3816.9519 4015.9639 -3817.1201 4014.343 -3816.1768 4014.9524 C
-3815.8025 4015.4895 -3816.1599 4016.021 -3816.0769 4016.4092 C
-3816.5696 4016.6128 -3816.8333 4016.0679 -3817.1672 4016.0896 C
-3816.7561 4016.344 L
-3816.9128 4016.5232 -3817.2417 4016.6582 -3817.4209 4016.5032 C
-3817.1072 4016.9856 -3815.5017 4016.5952 -3814.6252 4017.041 C
-3814.4695 4016.8616 -3814.2007 4016.6743 -3814.3279 4016.4583 C
-3814.6052 4016.5332 L
-3814.8601 4016.0999 -3814.0833 4015.9336 -3814.4343 4015.7312 C
-3814.0623 4015.4263 -3813.6453 4014.947 -3813.1216 4015.1924 C
-3813.0232 4015.8054 L
-3813.0344 4015.6262 -3813.3655 4015.4407 -3813.5127 4015.6272 c
-3813.2944 4015.355 -3812.7097 4016.457 -3812.4705 4015.6543 C
-3812.8376 4015.2295 L
-3812.4641 4014.9214 -3812.0024 4014.2703 -3811.5383 4014.4639 C
-3811.7495 4013.8584 -3811.6453 4014.5332 -3811.9751 4013.8247 C
-3811.6892 4014.7063 -3813.1624 4013.7876 -3812.7031 4014.7134 C
-3813.0415 4013.8916 -3813.2888 4014.3655 -3813.7312 4013.6638 C
-3813.7175 4013.8662 -3813.5745 4014.051 -3813.9641 4013.9512 C
-3813.9817 4014.0103 -3814.0232 4014.0852 -3814.0496 4014.1294 C
-3814.0615 4014.1243 -3814.0657 4014.1206 -3814.0759 4014.1143 C
-3814.0681 4014.1223 -3814.0623 4014.1311 -3814.0544 4014.1382 C
-3814.0713 4014.1687 -3814.0728 4014.175 -3814.0464 4014.1462 C
-3813.9536 4014.2356 -3813.8784 4014.3416 -3813.8479 4014.4539 C
-3814.0413 4014.9182 -3814.6609 4014.9038 -3814.8704 4015.1443 C
-3815.1016 4015.0479 -3814.7737 4014.9119 -3814.8999 4014.6963 C
-3815.2129 4015.0559 L
-3815.2439 4014.6072 -3815.8271 4014.3096 -3815.2825 4014.0464 C
-3815.7727 4014.0264 L
-3816.0613 4013.7747 -3816.4583 4013.6743 -3816.7031 4013.863 C
-3816.9343 4013.7664 -3817.2871 4014.3606 -3817.0857 4014.0088 C
-3817.8545 4014.2871 L
-3817.8616 4014.175 L
-3818.6201 4014.1184 -3819.4231 4014.9192 -3820.2903 4014.1079 C
-3820.5457 4014.2212 -3820.8096 4014.3599 -3821.2368 4014.2327 C
-3821.3201 4013.844 L
-3821.6479 4013.979 -3822.3047 4013.4551 -3822.4456 4013.8599 C
-3822.7993 4012.8142 -3824.0369 4013.6316 -3824.6135 4013.4463 C
-3824.6353 4013.9536 L
-3825.0322 4013.925 -3825.4128 4014.0696 -3825.9055 4014.2727 C
-3825.8752 4014.7207 L
-3826.3 4015.0884 -3826.9673 4014.4019 -3827.6392 4014.448 C
-3827.5935 4014.2766 -3827.4231 4014.321 -3827.3025 4014.425 C
-3828.1052 4013.4119 -3828.9961 4015.1614 -3829.7241 4014.4236 C
-3829.9055 4014.5872 -3830.0369 4014.531 -3830.1641 4014.4192 C
-3830.1472 4014.4175 -3830.1321 4014.4092 -3830.1191 4014.395 C
-3830.1377 4014.3904 -3830.1653 4014.3887 -3830.1936 4014.3894 C
-3830.2737 4014.3123 -3830.3562 4014.2227 -3830.4456 4014.1504 C
-3830.3696 4014.26 -3830.2969 4014.3496 -3830.2336 4014.3911 C
-3830.3735 4014.4004 -3830.5857 4014.4558 -3830.7937 4014.5686 C
-3830.8823 4014.0872 L
-3830.8992 4014.0935 -3830.9128 4014.0923 -3830.9304 4014.1006 C
-3831.1345 4013.9231 -3831.0945 4014.3286 -3830.9856 4014.6912 C
-3831.0903 4014.77 -3831.1863 4014.8655 -3831.2607 4014.9812 C
-3831.4265 4014.2039 -3831.8064 4015.2432 -3832.0327 4014.4143 C
-3832.1729 4014.8184 -3833.0784 4014.7183 -3833.1892 4015.5696 C
-3833.1963 4015.4583 -3833.2576 4015.4055 -3833.1453 4015.3982 C
-3833.3772 4015.3015 -3833.6089 4015.2046 -3833.8169 4015.4446 C
-3833.9153 4014.8323 L
-3834.4216 4015.655 L
-3834.7292 4015.2822 -3834.8567 4015.0652 -3834.5513 4014.5942 C
-3835.2888 4015.3196 -3835.1497 4014.8672 -3835.7769 4015.5852 C
-3835.7463 4015.1895 L
-3835.9705 4015.2046 -3836.3289 4015.7356 -3836.4641 4015.408 C
-3836.9656 4014.655 -3838.9456 4015.304 -3840.2329 4014.604 C
-3839.9832 4015.77 -3840.8313 4014.0823 -3840.8823 4014.9856 C
-3840.9573 4014.7102 -3841.1367 4014.5542 -3840.9282 4014.3152 C
-3841.5852 4014.5852 -3841.9153 4013.8772 -3842.3689 4014.6392 C
-3842.4441 4014.3623 -3842.2283 4014.2356 -3842.2952 4014.071 C
-3842.3479 4014.1311 -3842.5039 4014.311 -3842.5723 4014.1462 c
-3842.6392 4013.9822 -3842.4761 4013.915 -3842.3721 4013.7952 C
-3843.0432 4013.8416 -3843.1111 4014.6912 -3843.1599 4015.4883 C
-3843.5 4015.1111 -3843.6697 4015.1638 -3843.9153 4015.687 C
-3844.0337 4015.4263 -3844.2312 4015.1536 -3843.8142 4015.0598 C
-3844.0488 4015.0215 -3845.2473 4014.6775 -3845.2712 4015.3167 C
-3845.3447 4015.1543 -3845.5991 4015.269 -3845.6609 4015.343 C
-3846.1873 4015.3047 -3846.2336 4015.2471 -3846.7505 4015.3079 C
-3846.6072 4015.4119 L
-3846.8113 4016.1831 -3847.0369 4015.584 -3847.4536 4015.6768 C
-3847.4417 4015.5984 L
-3848.3972 4015.0415 -3847.8542 4015.8643 -3848.7969 4015.229 C
-3848.7456 4015.709 L
-3848.8335 4016.74 -3849.5808 4015.1006 -3850.1279 4015.4951 C
-3849.9304 4015.769 L
-3850.2292 4016.1223 -3850.7656 4014.3662 -3851.0657 4014.2371 C
-3851.1311 4014.1472 -3850.9624 4014.0935 -3850.8711 4014.0276 C
-3851.6567 4013.4182 -3850.9729 4014.655 -3851.5583 4014.8015 C
-3851.6663 4014.4624 -3851.4192 4013.9392 -3851.8132 4013.876 C
-3852.0095 4013.6023 -3852.9561 4014.9768 -3853.4937 4014.3267 C
-3853.3752 4014.5879 -3853.2576 4014.8484 -3853.5295 4015.0447 C
-3853.9463 4015.1382 -3854.6563 4014.0579 -3855.0327 4014.8816 C
-3855.0857 4014.8096 -3855.1057 4014.7415 -3855.1079 4014.6763 C
-3855.4265 4014.8887 -3856.1433 4015.0291 -3856.3352 4015.4756 C
-3856.6296 4013.8191 -3858.3159 4016.2815 -3858.3088 4014.7534 C
-3859.2888 4014.8352 L
-3859.2632 4014.6792 L
-3859.8896 4014.5784 -3860.1111 4014.9446 -3860.3313 4015.311 C
-3860.4761 4015.207 -3860.3704 4015.064 -3860.3584 4014.9846 C
-3861.2737 4014.6763 -3861.3647 4014.7415 -3862.1321 4015.5032 C
-3862.2119 4015.0071 L
-3862.4199 4015.2952 -3863.5352 4014.2295 -3864.4329 4014.8079 C
-3864.4241 4014.751 -3864.4055 4014.655 -3864.3342 4014.5852 C
-3865.3442 4015.167 -3866.7522 4013.2112 -3867.1223 4015.0159 C
-3867.7888 4015.4607 L
-3866.9265 4015.6006 -3867.9172 4016.2444 -3867.5625 4016.5435 C
-3867.9016 4016.6494 -3868.4392 4015.999 -3868.0225 4015.9063 C
-3867.9573 4015.9966 L
-3867.8042 4015.0559 -3869.0288 4015.6631 -3869.0056 4015.0222 C
-3870.7024 4015.0696 -3872.3562 4014.5479 -3873.9456 4014.5078 C
-3873.7625 4015.239 L
-3874.3169 4015.1975 L
-3874.4624 4015.0276 -3874.5122 4014.625 -3874.1167 4014.655 C
-3874.3247 4014.24 -3874.78 4015.0032 -3874.7913 4015.1614 C
-3875.5657 4014.8655 -3874.4888 4014.3086 -3874.7263 4014.291 C
-3875.0488 4014.3455 L
-3874.9761 4014.4312 L
-3875.2375 4014.73 -3875.2607 4015.0471 -3875.7361 4015.0112 C
-3876.0369 4014.8643 -3875.8904 4014.5598 -3876.0088 4014.532 C
-3876.0081 4014.479 -3876.0481 4014.4551 -3876.1904 4014.5103 C
-3876.8889 4014.448 L
-3876.6096 4015.0254 L
-3876.9192 4015.3103 -3877.2664 4014.9951 -3876.9441 4015.6494 c
-3877.4172 4014.6404 -3879.5496 4015.2871 -3879.8401 4014.9744 C
-3880.2737 4015.395 -3880.7017 4015.3875 -3881.2319 4015.3367 C
-3881.1001 4015.457 -3881.0212 4016.1062 -3881.4785 4016.0271 C
-3881.3113 4014.687 -3882.3159 4015.4456 -3882.6855 4014.4812 C
-3882.3552 4015.1206 -3883.9856 4014.6392 -3883.4673 4015.5471 C
-3883.8489 4015.4382 -3883.4905 4015.0454 -3883.78 4014.73 C
-3884.6882 4015.249 -3885.7815 4014.3926 -3886.9041 4014.5679 C
-3886.9216 4014.7444 -3886.7336 4015.0127 -3886.9744 4015.2747 C
-3887.5671 4014.395 L
-3887.7888 4014.4812 -3887.7712 4015.4104 -3888.1763 4014.8 C
-3888.1191 4014.948 -3888.0337 4015.1707 -3888.1824 4015.2271 C
-3890.3816 4014.3704 -3892.6763 4015.9292 -3894.9097 4014.3191 C
-3894.6072 4014.6604 -3894.8088 4014.6936 -3895.0398 4014.7063 C
-3894.8896 4014.7876 -3895.0432 4015.1404 -3895.0137 4015.3792 C
-3895.9487 4014.7168 L
-3896.1191 4015.3784 -3896.9512 4014.7615 -3897.0488 4015.3943 C
-3896.7527 4015.28 L
-3897.1465 4016.0271 -3896.2017 4016.9395 -3896.2593 4017.8975 C
-3895.8184 4017.0486 -3895.0967 4019.1543 -3894.3733 4017.9395 C
-3894.2136 4018.135 -3894.5095 4018.2483 -3894.4241 4018.4702 C
-3894.2407 4018.0598 -3894.0193 4017.9744 -3893.6089 4018.1582 C
-3893.6553 4018.26 L
-3892.5024 4018.1599 -3892.0081 4018.5647 -3890.7129 4018.8342 C
-3890.8088 4018.3606 L
-3890.5305 4018.4236 -3890.4719 4018.5723 -3890.3416 4018.6912 C
-3890.0222 4017.9727 -3891.1233 4018.6504 -3890.8323 4017.8584 C
-3890.4631 4018.8223 -3888.8696 4017.8728 -3888.6201 4018.9683 C
-3888.1919 4018.9744 -3888.7456 4018.4192 -3888.3176 4018.4263 C
-3888.2041 4018.7227 L
-3888.0959 4018.3408 L
-3887.8152 4018.4038 -3887.6736 4018.7747 -3887.6631 4019.0254 C
-3887.7312 4018.9956 -3887.8567 4019.0955 -3887.9297 4019.1172 C
-3887.5657 4019.4663 -3886.9033 4018.9983 -3886.7783 4019.1118 C
-3887.1897 4018.9292 L
-3886.0212 4018.6519 -3884.5945 4019.041 -3883.4656 4018.4382 C
-3883.5513 4018.2151 L
-3882.6892 4017.8015 -3882.8608 4018.4607 -3881.9143 4018.269 C
-3881.9487 4018.3223 L
-3881.7593 4018.0999 -3881.5063 4017.9871 -3881.2473 4018.0127 C
-3881.4863 4018.2747 -3880.7976 4018.521 -3881.1111 4018.811 C
-3880.1763 4018.3672 -3880.6487 4018.4624 -3880.0313 4017.6316 C
-3879.8889 4018.0032 L
-3879.6785 4017.667 -3879.6609 4017.49 -3879.1882 4017.3943 C
-3879.5759 4017.7124 -3878.8865 4017.959 -3879.3208 4018.3799 C
-3878.3289 4019.1912 -3877.8479 4017.561 -3877.3928 4018.7471 C
-3876.9373 4017.7207 -3878.2512 4018.1775 -3877.9961 4017.9575 C
-3878.2097 4017.6223 -3877.6201 4017.1902 -3877.3088 4017.2932 C
-3876.9919 4017.3167 -3876.77 4018.6072 -3875.9729 4018.5872 C
-3876.0522 4018.5823 -3876.0576 4018.6604 -3876.1367 4018.655 C
-3875.8384 4018.917 -3875.5522 4018.3008 -3875.1863 4018.7263 C
-3874.9812 4018.105 -3874.7112 4018.7615 -3874.6521 4017.9702 C
-3875.3833 4018.1536 L
-3874.9688 4017.9463 -3874.5801 4017.02 -3873.8972 4017.4695 C
-3873.9504 4017.6287 -3874.1536 4017.8391 -3874.2932 4017.9558 C
-3874.0935 4018.1895 -3873.9087 4017.8015 -3873.7017 4018.041 C
-3873.7607 4018.8335 -3874.5903 4018.2134 -3875.0344 4018.8174 C
-3874.8201 4019.1519 -3874.1943 4018.2439 -3874.4175 4019.1016 c
-3874.0967 4018.0112 -3873.6321 4019.24 -3873.0923 4018.4063 C
-3873.1279 4018.8806 L
-3873.0425 4018.8064 -3872.8655 4018.5823 -3872.7083 4018.5942 C
-3872.9929 4019.2095 L
-3872.5559 4018.6848 -3872.1504 4019.6692 -3871.7312 4019.3831 C
-3872.6089 4019.3975 -3871.9282 4018.811 -3872.2993 4018.4646 C
-3871.2168 4017.8296 -3871.6768 4019.7063 -3870.4648 4019.4783 C
-3870.6289 4019.5454 -3871.0808 4019.1936 -3870.8242 4018.9734 C
-3870.5935 4019.071 -3870.2888 4019.2534 -3870.1472 4019.5032 C
-3869.3442 4019.4038 -3870.2705 4019.0144 -3869.9287 4018.7224 C
-3869.6553 4019.3008 -3869.5344 4018.4871 -3869.1824 4018.3022 C
-3869.1799 4018.7847 L
-3868.2649 4019.0942 -3868.9373 4017.7791 -3868.1135 4018.1536 C
-3868.4617 4018.8223 L
-3868.0322 4018.6494 L
-3868.1208 4019.1982 L
-3867.6536 4018.791 -3867.5081 4018.896 -3867.0503 4019.0503 C
-3867.1567 4018.7112 -3866.9905 4018.175 -3866.5852 4018.1599 C
-3866.3088 4018.4463 -3866.74 4018.6184 -3866.1655 4018.5496 C
-3866.2952 4018.8511 -3866.4373 4019.23 -3866.6873 4018.7864 C
-3866.7129 4018.9436 -3866.8152 4019.0884 -3866.8416 4019.2444 C
-3866.5439 4019.5735 -3866.0935 4019.3191 -3865.8855 4019.3142 C
-3865.9656 4019.2964 -3866.0613 4019.2703 -3866.1104 4019.2024 C
-3865.2776 4018.5332 L
-3865.1465 4018.7144 -3865.2505 4018.8599 -3865.3535 4019.0032 C
-3865.1848 4018.9502 -3865.0681 4018.7283 -3864.8201 4018.687 C
-3864.8843 4019.0791 -3864.8689 4019.4839 -3865.22 4019.6687 C
-3864.4265 4019.2334 L
-3864.3735 4019.4038 -3864.0193 4019.7024 -3864.1223 4019.8462 C
-3863.6824 4020.0767 -3863.0432 4019.0852 -3862.46 4019.3894 C
-3862.4297 4019.3135 -3862.3689 4019.24 -3862.2449 4019.1848 C
-3861.6968 4019.2732 -3861.2112 4019.7544 -3860.5615 4019.217 C
-3860.1929 4019.9192 L
-3859.6841 4019.7603 -3860.6919 4019.0342 -3859.8447 4018.769 C
-3859.2449 4018.5447 -3859.6208 4019.3687 -3859.4104 4019.564 C
-3859.1121 4019.2102 -3858.5935 4018.4888 -3858.0425 4019.061 C
-3858.2249 4019.1936 -3858.3679 4019.0896 -3858.5383 4019.1416 C
f
1 D
-3852.2632 4018.8296 m
-3852.3848 4018.9312 -3852.6272 4019.2439 -3852.7161 4018.959 C
-3852.5776 4018.4063 -3852.4705 4018.6707 -3852.2632 4018.8296 C
f
-3842.7241 4017.6692 m
-3842.8145 4017.8279 -3842.9543 4017.749 -3843.1121 4017.5667 C
-3842.9976 4017.5271 -3842.8679 4017.5447 -3842.7241 4017.6692 C
f
-3816.1511 4014.3096 m
-3816.1563 4014.3174 -3816.1599 4014.3232 -3816.1641 4014.333 C
-3816.4353 4014.145 -3816.3391 4014.22 -3816.1511 4014.3096 C
f
0 D
-3815.5879 4014.519 m
-3815.5313 4014.4524 -3815.5352 4014.3848 -3815.5591 4014.3174 C
-3815.5984 4014.4392 -3815.7249 4014.448 -3815.8689 4014.4136 C
-3815.8289 4014.5398 -3815.7561 4014.6272 -3815.5879 4014.519 C
f
1 D
-3876.0713 4014.709 m
-3875.9617 4014.8352 L
-3876.2092 4014.9744 -3876.1399 4014.8484 -3876.0713 4014.709 C
f
*U
0 D
-3843.8057 4018.3286 m
-3843.8401 4018.2471 -3843.8496 4018.1575 -3843.8577 4018.0667 C
-3843.9055 4018.1475 -3843.9065 4018.2415 -3843.8057 4018.3286 C
f
-3862.4409 4019.395 m
-3862.4473 4019.3911 -3862.4536 4019.3926 -3862.46 4019.3894 C
-3862.4705 4019.4182 -3862.4761 4019.448 -3862.4792 4019.4768 C
-3862.4409 4019.395 L
f
-3824.3123 4018.6096 m
-3824.4282 4018.5398 -3824.4929 4018.4524 -3824.5359 4018.3606 C
-3824.5422 4018.4783 -3824.4895 4018.5784 -3824.3123 4018.6096 C
f
-3812.6033 4013.6992 m
-3812.9641 4013.8247 L
-3812.7896 4013.8008 -3812.7273 4013.9063 -3812.6392 4013.9832 C
-3812.6472 4013.8704 -3812.7161 4013.707 -3812.6033 4013.6992 C
f
-3809.4719 4016.6848 m
-3809.4192 4016.6255 -3809.3601 4016.6782 -3809.3081 4016.6184 C
-3809.3225 4016.3943 L
-3809.5471 4016.4087 -3809.7041 4016.5896 -3809.4719 4016.6848 C
f
-3812.2693 4015.3022 m
-3812.2407 4015.7083 -3812.0144 4015.5703 -3811.7617 4015.4951 C
-3811.7769 4015.4966 -3811.7913 4015.5 -3811.8064 4015.4951 C
-3811.7319 4014.9282 -3812.0012 4015.1152 -3812.2693 4015.3022 C
f
-3811.7031 4015.4812 m
-3811.6252 4015.4624 -3811.5457 4015.4524 -3811.4695 4015.4712 C
-3811.4399 4015.2439 -3811.5642 4015.4236 -3811.7031 4015.4812 C
f
-3814.8735 4014.25 m
-3814.7537 4014.3542 -3814.7983 4013.7312 -3814.7305 4013.896 C
-3814.5967 4013.3799 -3815.5295 4014.521 -3814.8735 4014.25 C
f
-3812.0647 4016.6392 m
-3812.1553 4016.1382 L
-3812.2969 4016.5422 L
-3812.0647 4016.6392 L
f
-3814.0601 4016.271 m
-3813.6563 4016.4104 L
-3813.6624 4016.3264 -3813.6111 4016.2776 -3813.5481 4016.24 C
-3813.7969 4016.2224 -3814.0696 4016.123 -3814.0601 4016.271 C
f
-3813.5481 4016.24 m
-3813.4185 4016.249 -3813.2952 4016.2383 -3813.2231 4016.1563 C
-3813.2932 4016.1614 -3813.4441 4016.1782 -3813.5481 4016.24 C
f
-3812.6167 4016.7896 m
-3812.7361 4016.6851 L
-3813.0212 4016.6487 L
-3812.6167 4016.7896 L
f
-3818.4009 4016.175 m
-3818.8416 4016.3184 L
-3818.8865 4016.49 -3818.7664 4016.5952 -3818.6023 4016.5271 C
-3818.4968 4016.4072 -3818.3333 4016.3408 -3818.4009 4016.175 C
f
-3817.0681 4017.5471 m
-3817.1873 4017.4431 -3817.1953 4017.3311 -3817.2625 4017.1663 C
-3817.2759 4017.7871 L
-3817.0681 4017.5471 L
f
-3818.3533 4017.6919 m
-3818.3972 4017.8643 -3818.9929 4018.1863 -3818.4343 4018.1475 C
-3818.3896 4017.9768 -3817.9482 4017.8335 -3818.3533 4017.6919 C
f
-3824.9937 4016.9063 m
-3824.8816 4016.8982 L
-3824.8977 4015.8799 L
-3824.9937 4016.9063 L
f
-3830.8464 4019.343 m
-3830.3242 4019.5872 -3830.7224 4018.7144 -3830.2505 4019.019 C
-3830.1279 4018.7783 -3830.6362 4018.7703 -3830.5105 4018.5623 C
-3830.8257 4018.8167 -3830.9912 4018.6736 -3830.8464 4019.343 C
f
-3830.5105 4018.5623 m
-3830.46 4018.5222 -3830.4065 4018.4734 -3830.3496 4018.408 C
-3830.4409 4018.4712 -3830.4839 4018.52 -3830.5105 4018.5623 C
f
-3896.5745 4014.1924 m
-3896.9104 4013.98 L
-3896.6936 4014.3223 L
-3896.5745 4014.1924 L
f
-3897.2192 4014.948 m
-3897.2983 4014.2991 L
-3897.5 4014.8862 L
-3897.4241 4014.8572 -3897.2769 4014.8015 -3897.2192 4014.948 C
f
-3851.3303 4020.1375 m
-3851.3047 4019.9812 L
-3851.3567 4019.8123 -3851.4353 4019.8 -3851.5928 4019.7732 C
-3851.3303 4020.1375 L
f
-3855.8848 4019.6519 m
-3855.8064 4019.665 L
-3855.9529 4019.0784 L
-3855.8848 4019.6519 L
f
-3859.7073 4020.4004 m
-3859.5513 4020.425 -3859.3679 4020.2942 -3859.2112 4020.3196 C
-3859.5513 4020.425 -3859.7495 4019.6692 -3859.7073 4020.4004 C
f
U
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat)0 A
u
1 Ap
0 J 0 j 1 w 10 M []0 d0 XR
-7742.4036 7893 m
-7769.5408 7893 L
-7769.5408 7872.9818 L
-7742.4036 7872.9818 L
-7742.4036 7893 L
n
0 Ap
0 O
0.552117 0.359777 0.233188 0 0.513725 0.6 0.694118 Xa
4 M-7770 7893 m
-7742 7893 L
-7742 7886.2663 L
-7770 7886.2663 L
-7770 7893 L
f
0.255192 0.142306 0.129122 0 0.784314 0.823529 0.847059 Xa
-7770 7886.2687 m
-7742 7886.2687 L
-7742 7885.1079 L
-7770 7885.1079 L
-7770 7886.2687 L
f
0.430304 0.253208 0.145632 0 0.627451 0.701961 0.792157 Xa
-7742 7885.1079 m
-7742 7872.9818 L
-7770 7872.9818 L
-7770 7885.1079 L
-7742 7885.1079 L
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 4)0 A
u
0 J 0 j 1 w 10 M []0 d0 XR
-7770 7893 m
-7742 7893 L
-7742 7865 L
-7770 7865 L
-7770 7893 L
n
u
q
-7742.4592 7869.0187 m
-7766.0369 7869.0187 l
-7746.0187 7889.0369 l
-7742.4592 7889.0369 l
-7742.4592 7869.0187 l
h
W
n
0 O
0.552117 0.359777 0.233188 0 0.513725 0.6 0.694118 Xa
4 M-7742 7869.0187 m
-7770 7869.0187 L
-7770 7875.7523 L
-7742 7875.7523 L
-7742 7869.0187 L
f
0.255192 0.142306 0.129122 0 0.784314 0.823529 0.847059 Xa
-7742 7875.7499 m
-7770 7875.7499 L
-7770 7876.9108 L
-7742 7876.9108 L
-7742 7875.7499 L
f
0.430304 0.253208 0.145632 0 0.627451 0.701961 0.792157 Xa
-7770 7876.9108 m
-7770 7889.0369 L
-7742 7889.0369 L
-7742 7876.9108 L
-7770 7876.9108 L
f
Q
0 A
q
0 J 0 j 1 w 10 M []0 d0 XR
-7766.0369 7892.5964 m
-7766.0369 7869.0187 l
-7746.0187 7889.0369 l
-7746.0187 7892.5964 l
-7766.0369 7892.5964 l
h
W
n
0 O
0.552117 0.359777 0.233188 0 0.513725 0.6 0.694118 Xa
4 M-7766.0369 7865 m
-7766.0369 7893 L
-7759.3032 7893 L
-7759.3032 7865 L
-7766.0369 7865 L
f
0.255192 0.142306 0.129122 0 0.784314 0.823529 0.847059 Xa
-7759.3056 7865 m
-7759.3056 7893 L
-7758.1448 7893 L
-7758.1448 7865 L
-7759.3056 7865 L
f
0.430304 0.253208 0.145632 0 0.627451 0.701961 0.792157 Xa
-7758.1448 7893 m
-7746.0187 7893 L
-7746.0187 7865 L
-7758.1448 7865 L
-7758.1448 7893 L
f
Q
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 5)0 A
u
0 J 0 j 1 w 10 M []0 d0 XR
-7770 7893 m
-7742 7893 L
-7742 7865 L
-7770 7865 L
-7770 7893 L
n
u
q
-7745.9631 7892.5408 m
-7745.9631 7888.9813 l
-7765.9813 7868.9631 l
-7765.9813 7892.5408 l
-7745.9631 7892.5408 l
h
W
n
0 O
0.552117 0.359777 0.233188 0 0.513725 0.6 0.694118 Xa
4 M-7745.9631 7893 m
-7745.9631 7865 L
-7752.6968 7865 L
-7752.6968 7893 L
-7745.9631 7893 L
f
0.255192 0.142306 0.129122 0 0.784314 0.823529 0.847059 Xa
-7752.6944 7893 m
-7752.6944 7865 L
-7753.8552 7865 L
-7753.8552 7893 L
-7752.6944 7893 L
f
0.430304 0.253208 0.145632 0 0.627451 0.701961 0.792157 Xa
-7753.8552 7865 m
-7765.9813 7865 L
-7765.9813 7893 L
-7753.8552 7893 L
-7753.8552 7865 L
f
Q
0 A
q
0 J 0 j 1 w 10 M []0 d0 XR
-7742.4036 7888.9813 m
-7745.9631 7888.9813 l
-7765.9813 7868.9631 l
-7742.4036 7868.9631 l
-7742.4036 7888.9813 l
h
W
n
0 O
0.552117 0.359777 0.233188 0 0.513725 0.6 0.694118 Xa
4 M-7770 7888.9813 m
-7742 7888.9813 L
-7742 7882.2477 L
-7770 7882.2477 L
-7770 7888.9813 L
f
0.255192 0.142306 0.129122 0 0.784314 0.823529 0.847059 Xa
-7770 7882.2501 m
-7742 7882.2501 L
-7742 7881.0892 L
-7770 7881.0892 L
-7770 7882.2501 L
f
0.430304 0.253208 0.145632 0 0.627451 0.701961 0.792157 Xa
-7742 7881.0892 m
-7742 7868.9631 L
-7770 7868.9631 L
-7770 7881.0892 L
-7742 7881.0892 L
f
Q
U
U
%AI8_EndBrushPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Brush Manager Order)
(Adobe Brush Manager Order)
( Adobe Calligraphic Brush Tool/ 3 \265\343\324\262\320\316/ Adobe Calligraphic B) -
(rush Tool/ 10 \265\343\324\262\320\316/ Adobe Calligraphic Brush Tool/ 3 \265\343\315\326\324\262\320) -
(\316/ Adobe Calligraphic Brush Tool/ Touch Calligraphic Brush/ Ad) -
(obe PatternOnPath Brush Tool/ \322\370\311\253/ Adobe ArtOnPath Brush Tool) -
(/ \314\277\261\312 - \323\360\303\253/) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(\714\677\661\712 - \723\760\703\653)
(1 / Unnamed 6/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(10 \665\743\724\662\720\716)
(1 10 10 100 100 0 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(3 \665\743\724\662\720\716)
(1 3 3 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(3 \665\743\715\726\724\662\720\716)
(1 3 3 26 74 15 15 0 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(Touch Calligraphic Brush)
(1 12 12 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
0.929412 0.87924 0.890196 0.799985 ([\714\727\660\746\711\653]) 0 Xs
([\714\727\660\746\711\653])
Pc
0 0 0 0 1 1 1 Xa
(\660\727\711\653)
Pc
0.929412 0.87924 0.890196 0.799985 0 0 0 Xa
(\672\732\711\653)
Pc
0 0.96051 0.947051 0 1 0 0 Xa
(RGB \672\754)
Pc
0.102327 0 0.827939 0 1 1 0 Xa
(RGB \673\706)
Pc
0.613855 0 1 0 0 1 0 Xa
(RGB \702\714)
Pc
0.54818 0 0.177462 0 0 1 1 Xa
(RGB \707\740)
Pc
0.924346 0.746212 0 0 0 0 1 Xa
(RGB \700\666)
Pc
0.371527 0.764706 0 0 1 0 1 Xa
(RGB \721\763\672\754)
Pc
0.307042 0.963928 0.892882 0.003113 0.756863 0.152941 0.176471 Xa
(R=193 G=39 B=45)
Pc
0.066346 0.952422 0.881834 0 0.929412 0.109804 0.141176 Xa
(R=237 G=28 B=36)
Pc
0.041718 0.782742 0.874266 0 0.945098 0.352941 0.141176 Xa
(R=241 G=90 B=36)
Pc
0.033295 0.537835 0.878965 0 0.968627 0.576471 0.117647 Xa
(R=247 G=147 B=30)
Pc
0.031586 0.40238 0.79382 0 0.984314 0.690196 0.231373 Xa
(R=251 G=176 B=59)
Pc
0.087068 0.042786 0.841947 0 0.988235 0.933333 0.129412 Xa
(R=252 G=238 B=33)
Pc
0.244999 0.048127 0.882811 0 0.85098 0.878431 0.129412 Xa
(R=217 G=224 B=33)
Pc
0.526574 0.043 0.887724 0 0.54902 0.776471 0.247059 Xa
(R=140 G=198 B=63)
Pc
0.716518 0.039796 0.897276 0 0.223529 0.709804 0.290196 Xa
(R=57 G=181 B=74)
Pc
0.82153 0.258732 0.945403 0 0 0.572549 0.270588 Xa
(R=0 G=146 B=69)
Pc
0.890623 0.486915 0.998871 0.128603 0 0.407843 0.215686 Xa
(R=0 G=104 B=55)
Pc
0.731197 0.040314 0.702968 0 0.133333 0.709804 0.45098 Xa
(R=34 G=181 B=115)
Pc
0.761929 0.138186 0.464698 0 0 0.662745 0.615686 Xa
(R=0 G=169 B=157)
Pc
0.7149 0.189822 0.070375 0 0.160784 0.670588 0.886275 Xa
(R=41 G=171 B=226)
Pc
0.859281 0.525872 0.055329 0 0 0.443137 0.737255 Xa
(R=0 G=113 B=188)
Pc
0.943084 0.920348 0.068147 0 0.180392 0.192157 0.572549 Xa
(R=46 G=49 B=146)
Pc
0.998901 1 0.56228 0.068696 0.105882 0.078431 0.392157 Xa
(R=27 G=20 B=100)
Pc
0.744228 0.928771 0.047822 0 0.4 0.176471 0.568627 Xa
(R=102 G=45 B=145)
Pc
0.543633 0.94226 0.05301 0 0.576471 0.152941 0.560784 Xa
(R=147 G=39 B=143)
Pc
0.489631 1 0.454658 0.011688 0.619608 0 0.364706 Xa
(R=158 G=0 B=93)
Pc
0.212711 0.968048 0.479377 0 0.831373 0.078431 0.352941 Xa
(R=212 G=20 B=90)
Pc
0.073213 0.928374 0.236789 0 0.929412 0.117647 0.47451 Xa
(R=237 G=30 B=121)
Pc
0.270176 0.31516 0.397436 0 0.780392 0.698039 0.6 Xa
(R=199 G=178 B=153)
Pc
0.474739 0.484657 0.527703 0 0.6 0.52549 0.458824 Xa
(R=153 G=134 B=117)
Pc
0.61648 0.613458 0.646265 0.095979 0.45098 0.388235 0.341176 Xa
(R=115 G=99 B=87)
Pc
0.69369 0.6907 0.702144 0.290349 0.32549 0.278431 0.254902 Xa
(R=83 G=71 B=65)
Pc
0.283055 0.42945 0.597803 0 0.776471 0.611765 0.427451 Xa
(R=198 G=156 B=109)
Pc
0.431952 0.558648 0.724697 0.004028 0.65098 0.486275 0.321569 Xa
(R=166 G=124 B=82)
Pc
0.510399 0.646448 0.860594 0.09897 0.54902 0.384314 0.223529 Xa
(R=140 G=98 B=57)
Pc
0.558312 0.709468 0.982238 0.239689 0.458824 0.298039 0.141176 Xa
(R=117 G=76 B=36)
Pc
0.586725 0.765286 1 0.384924 0.376471 0.219608 0.07451 Xa
(R=96 G=56 B=19)
Pc
0.650996 0.826047 1 0.566766 0.258824 0.129412 0.043137 Xa
(R=66 G=33 B=11)
Pc
Bb
2 (\660\727\711\653, \672\732\711\653) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(\660\727\711\653, \672\732\711\653)
Pc
Bb
2 (\675\760\667\733) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(\675\760\667\733)
Pc
Bb
2 (\700\666\711\653\714\754\677\725) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(\700\666\711\653\714\754\677\725)
Pc
(\722\641\660\732) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(\722\641\660\732)
Pc
0.595605 0.036378 0.242435 0 0.396078 0.784314 0.815686 Xa
(C=56 M=0 Y=20 K=0)
Pc
0.56286 0.452949 0.04242 0 0.513725 0.545098 0.772549 Xa
(C=51 M=43 Y=0 K=0)
Pc
0.331456 0.437598 0.029419 0 0.729412 0.607843 0.788235 Xa
(C=26 M=41 Y=0 K=0)
Pc
0.929412 0.87924 0.890196 0.799985 0 0 0 Xa
(R=0 G=0 B=0)
Pc
0.844602 0.800595 0.790127 0.656428 0.101961 0.101961 0.101961 Xa
(R=26 G=26 B=26)
Pc
0.791501 0.737911 0.713436 0.450996 0.2 0.2 0.2 Xa
(R=51 G=51 B=51)
Pc
0.737636 0.670893 0.639551 0.226688 0.301961 0.301961 0.301961 Xa
(R=77 G=77 B=77)
Pc
0.674098 0.589471 0.561028 0.058686 0.4 0.4 0.4 Xa
(R=102 G=102 B=102)
Pc
0.574578 0.484413 0.45478 0 0.501961 0.501961 0.501961 Xa
(R=128 G=128 B=128)
Pc
0.461982 0.377691 0.353674 0 0.6 0.6 0.6 Xa
(R=153 G=153 B=153)
Pc
0.346197 0.272953 0.259342 0 0.701961 0.701961 0.701961 Xa
(R=179 G=179 B=179)
Pc
0.235142 0.178103 0.172366 0 0.8 0.8 0.8 Xa
(R=204 G=204 B=204)
Pc
0.116304 0.089021 0.089021 0 0.901961 0.901961 0.901961 Xa
(R=230 G=230 B=230)
Pc
0.062989 0.048035 0.048035 0 0.94902 0.94902 0.94902 Xa
(R=242 G=242 B=242)
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(\315\274\262\343 1) Ln
0 A
u
*u
0 O
0.929412 0.87924 0.890196 0.799985 0 0 0 Xa
0 J 0 j 1 w 4 M []0 d0 XR
318.4387 -203.5035 m
318.4387 -203.5035 L
322.4701 -202.784 326.326 -202.4226 330.0057 -202.4226 c
335.2464 -202.4226 339.8074 -203.2825 343.689 -205 c
348.0741 -207.1072 350.2663 -210.3499 350.2663 -214.7283 c
350.2663 -216.3365 349.7372 -218.359 348.6785 -220.7977 C
351.0979 -221.6294 353.4415 -222.7098 355.7096 -224.0405 C
359.943 -226.8672 362.0599 -230.7477 362.0599 -235.6809 C
362.0599 -238.4246 L
362.0599 -242.7478 360.2193 -246.1857 356.5412 -248.7343 C
354.5248 -250.2308 352.2566 -251.451 349.7372 -252.3927 C
350.6181 -253.1194 351.4553 -253.8987 352.2489 -254.7305 c
354.24 -256.8174 354.2524 -260.3143 352.3074 -262.4531 c
352.3074 -262.4531 L
352.3076 -262.4535 352.3074 -262.453 352.3076 -262.4534 C
355.4734 -261.3398 358.8173 -263.429 359.4964 -266.9976 c
359.4964 -266.9976 l
359.9322 -269.2879 358.7562 -271.6072 356.737 -272.3447 c
351.5724 -274.2311 346.6437 -275.1744 341.9504 -275.1744 C
339.9848 -275.1744 L
336.2544 -275.1744 333.0541 -274.3145 330.3835 -272.597 c
327.4596 -270.4351 325.9984 -267.3863 325.9984 -263.4511 c
325.9984 -260.7903 326.426 -257.9636 327.2838 -254.9701 C
326.2256 -254.9701 L
325.7718 -254.9701 325.3678 -254.9701 325.0156 -254.9701 C
323.3917 -259.8925 321.8452 -264.8427 320.3761 -269.8213 c
319.3809 -273.194 316.2172 -275.1817 313.0642 -274.4416 c
313.0642 -274.4416 l
309.4137 -273.5848 307.2253 -269.445 308.3663 -265.5363 c
309.3344 -262.2199 310.3027 -258.9781 311.271 -255.8109 c
311.5755 -254.8149 311.0011 -253.759 310.06 -253.5778 c
307.913 -253.1643 305.9681 -252.6306 304.2258 -251.9771 C
298.278 -249.0399 295.3049 -244.9655 295.3049 -239.7548 c
295.3049 -234.4336 296.9424 -229.2788 300.2191 -224.2897 C
300.2191 -224.2897 l
298.4558 -222.9508 298.0424 -220.2743 299.2913 -218.3594 c
302.5351 -213.3854 305.7698 -208.8848 308.9959 -204.8576 c
311.3874 -201.8722 317.2095 -195.1104 318.4387 -203.5035 c
f
1 D
317.9406 -231.1716 m
316.0269 -231.7249 314.0502 -232.4172 312.01 -233.2488 c
310.377 -233.9144 309.192 -235.5036 308.9174 -237.395 c
308.9129 -237.4266 l
308.9129 -240.3096 310.3992 -242.1946 313.3733 -243.0805 C
313.3794 -243.0821 313.3854 -243.0838 313.3915 -243.0854 c
314.449 -243.375 315.5323 -242.6967 315.9139 -241.574 c
316.9757 -238.4506 318.0246 -235.4375 319.0619 -232.5346 c
319.3444 -231.7438 318.6878 -230.9556 317.9406 -231.1716 c
f
311.8147 -220.1676 m
311.8033 -220.1867 311.8171 -220.2114 311.8377 -220.2084 c
317.6168 -219.3817 323.6227 -218.9686 329.8544 -218.9686 c
331.2986 -218.9686 332.6788 -218.9808 333.9951 -219.0042 c
335.4202 -219.0297 336.6555 -217.9467 336.9563 -216.4145 c
336.9609 -216.3912 l
336.9609 -214.1746 333.9616 -213.0655 327.9641 -213.0655 c
325.2454 -213.3033 322.555 -213.6976 319.8932 -214.2479 c
316.581 -214.9326 313.6621 -217.0675 311.8147 -220.1676 c
311.8147 -220.1676 l
f
329.0988 -242.5814 m
328.7684 -243.5451 329.4191 -244.577 330.3556 -244.577 c
331.0639 -244.577 L
337.7166 -244.577 342.4795 -243.7182 345.3522 -241.9995 c
347.4183 -240.781 348.4519 -239.1729 348.4519 -237.1774 c
348.4519 -234.5723 347.0405 -232.6327 344.2181 -231.3572 c
342.5636 -230.6211 340.0613 -230.0879 336.7125 -229.7574 c
334.9476 -229.5833 333.2779 -230.7116 332.6273 -232.5244 c
331.4285 -235.8644 330.2522 -239.217 329.0988 -242.5814 c
f
344.3693 -253.8891 m
343.5542 -254.0746 342.7158 -254.2343 341.8541 -254.3681 c
340.4329 -254.5889 339.2158 -255.6556 338.7345 -257.1427 c
338.3078 -258.4613 338.0944 -259.705 338.0944 -260.8737 c
338.0944 -262.0933 338.3216 -262.9809 338.7748 -263.534 c
339.1778 -264.1447 339.8581 -264.4486 340.8163 -264.4486 c
342.9825 -264.4486 345.2506 -264.1994 347.6203 -263.7004 C
346.6492 -262.5748 345.6165 -261.457 344.5226 -260.3467 c
342.8279 -258.6266 342.759 -255.7046 344.3693 -253.8892 c
344.3693 -253.8891 L
f
*U
*u
0 D
373.4738 -214.7273 m
374.7967 -215.0176 L
376.8419 -215.4665 378.1093 -217.423 377.8082 -219.3949 c
377.7367 -219.8632 378.1117 -220.2796 378.5851 -220.3001 c
387.7273 -220.6953 398.4145 -221.3755 404.8876 -221.831 c
407.4342 -222.0102 409.5099 -224.1306 409.4033 -226.6812 c
409.2933 -229.3114 407.0429 -231.3064 404.4481 -231.1415 c
401.8409 -230.9757 399.2763 -230.816 396.7543 -230.6622 c
395.9314 -230.612 395.2673 -231.3024 395.3326 -232.1242 c
395.359 -232.4569 395.3841 -232.7909 395.4078 -233.1262 c
395.4545 -233.7866 396.0053 -234.2943 396.667 -234.2748 c
398.4102 -234.2235 400.168 -234.1866 401.9402 -234.1644 c
404.1442 -234.1367 406.1515 -235.7016 406.4312 -237.8879 c
406.7553 -240.4205 404.8045 -242.661 402.2643 -242.6963 c
400.8331 -242.7161 399.4049 -242.7451 397.9798 -242.7833 c
397.0021 -242.8095 396.2544 -243.656 396.3416 -244.6302 c
396.4607 -245.9601 396.5742 -247.2955 396.6822 -248.6363 c
396.7559 -249.5505 397.5232 -250.2492 398.4402 -250.2293 c
401.2518 -250.1682 404.0774 -250.1279 406.9168 -250.1083 c
409.2213 -250.0924 411.1588 -251.8413 411.3946 -254.1337 c
411.3997 -254.1829 l
411.6688 -256.8074 409.6174 -259.0779 406.9793 -259.107 c
404.8302 -259.1306 401.0429 -259.3927 398.8742 -259.6291 c
397.9612 -259.7285 397.292 -260.5319 397.3544 -261.4481 c
397.9297 -269.8835 396.4156 -273.3358 393.2349 -273.6973 C
390.3722 -274.0225 387.8063 -271.9148 387.5633 -269.0439 c
387.4979 -268.2715 387.4325 -263.7579 387.3671 -261.2415 c
387.3444 -260.367 386.6111 -259.6843 385.7372 -259.7236 c
379.507 -260.0032 373.2657 -260.4019 367.014 -260.9195 c
364.6684 -261.1136 362.4254 -259.5888 361.9947 -257.2749 c
361.4984 -254.6084 363.4127 -252.1379 366.0579 -251.9312 c
366.4772 -251.8984 366.8972 -251.8669 367.3179 -251.8366 c
367.9095 -251.7941 368.3713 -251.3146 368.3985 -250.7221 c
368.6347 -245.5799 369.2929 -240.7246 370.3726 -236.1549 c
367.9347 -235.6366 l
365.1869 -235.0525 363.5027 -232.2854 364.2138 -229.5677 c
365.1307 -226.0638 367.8603 -221.0635 369.2028 -217.7668 C
370.1424 -215.4592 371.0402 -214.1931 373.4738 -214.7273 C
f
1 D
385.2584 -233.5173 m
385.2151 -232.9422 385.1695 -232.3739 385.1217 -231.8125 c
385.0269 -230.6998 384.1279 -229.824 383.0133 -229.7546 c
380.5954 -229.6039 378.2126 -229.4619 375.8649 -229.3283 c
374.9765 -229.2777 374.1727 -229.8568 373.9451 -230.7169 c
373.6886 -231.6858 373.447 -232.6545 373.2202 -233.6231 c
373.049 -234.3539 373.5691 -235.0673 374.3162 -235.1399 c
377.0542 -235.406 L
379.3722 -235.1782 381.7184 -234.991 384.0927 -234.8454 c
384.7822 -234.8031 385.3102 -234.2062 385.2584 -233.5173 c
f
386.4261 -248.9117 m
386.321 -247.5676 386.2162 -246.2463 386.1114 -244.9479 c
386.0401 -244.0638 385.2637 -243.4068 384.3792 -243.4737 c
383.105 -243.5702 381.8353 -243.6708 380.5701 -243.776 c
379.1017 -243.8981 377.9275 -245.0478 377.7647 -246.5122 c
377.649 -247.5535 377.5555 -248.6023 377.4842 -249.6584 c
377.4315 -250.4408 378.0915 -251.0877 378.8742 -251.0403 c
380.8787 -250.9189 382.875 -250.8057 384.8632 -250.7005 c
385.7945 -250.6512 386.4987 -249.8414 386.4261 -248.9117 c
f
*U
*u
0 D
450.1315 -228.1142 m
450.1315 -228.1142 l
450.1315 -230.1277 448.4837 -231.7749 446.4704 -231.8006 c
442.7746 -231.8478 439.093 -231.96 435.4262 -232.1373 c
434.861 -232.1646 434.4368 -232.6704 434.504 -233.2323 c
434.5265 -233.4197 434.5488 -233.6053 434.5712 -233.789 c
434.6197 -234.1884 434.9727 -234.4741 435.3743 -234.4506 c
437.9705 -234.2989 440.5274 -234.1929 443.0454 -234.1324 c
444.8188 -234.0898 446.4424 -235.3343 446.6846 -237.0915 c
446.9654 -239.1295 445.4113 -240.9516 443.37 -240.9926 c
434.7383 -241.1657 426.2091 -241.774 417.7823 -242.8175 c
415.9872 -243.0398 414.2274 -241.9196 413.8559 -240.1493 c
413.4325 -238.1314 414.8397 -236.2523 416.8313 -236.0206 c
419.8022 -235.6749 422.73 -235.3724 425.6157 -235.1128 c
426.0241 -235.076 426.3126 -234.7048 426.2549 -234.2988 c
426.2144 -234.0135 426.1759 -233.7341 426.1395 -233.4606 c
426.0825 -233.0319 425.6975 -232.7227 425.2663 -232.7568 c
421.7937 -233.0312 418.321 -233.3538 414.8483 -233.725 c
412.8912 -233.9341 411.2917 -232.5117 411.2917 -230.5434 c
411.2917 -230.5434 l
411.2917 -228.5951 412.8738 -227.4684 414.8099 -227.2516 c
417.2831 -226.9747 419.2626 -226.8511 422.9724 -226.5108 c
423.7177 -226.4424 424.0024 -226.2347 424.6211 -225.8306 c
424.8634 -225.6723 424.9948 -225.4818 425.0816 -225.2056 c
425.2008 -224.8259 425.1888 -224.3908 425.2024 -223.9522 c
425.2936 -221.008 427.797 -219.474 430.3486 -220.4962 c
431.9902 -221.1538 433.096 -222.7147 433.3259 -224.4681 c
433.3271 -224.4777 433.3284 -224.4873 433.3296 -224.497 c
433.3772 -224.8594 433.6926 -225.1248 434.0577 -225.1068 c
438.2187 -224.9015 442.4357 -224.779 446.7074 -224.739 c
448.5905 -224.7214 450.1315 -226.2311 450.1315 -228.1142 c
f
430.5955 -243.2402 m
437.8138 -243.2402 442.6614 -243.9816 445.1406 -245.4648 c
447.4547 -246.7321 448.5585 -248.7865 448.4499 -251.6288 C
448.6128 -252.6484 L
448.6128 -256.3258 447.7683 -258.7966 446.0804 -260.0639 c
444.3914 -261.516 439.9649 -262.2423 432.8021 -262.2423 C
427.3682 -262.2423 L
421.9476 -262.2423 418.1351 -261.6703 415.9288 -260.5275 c
414.1037 -259.3224 413.1914 -257.4221 413.1914 -254.8269 c
413.1914 -253.1498 413.1914 -252.5346 413.4414 -251.2813 c
414.0072 -248.4464 414.562 -245.9323 418.4983 -244.805 c
418.696 -244.7483 426.7819 -243.2402 430.5955 -243.2402 c
f
1 D
431.3724 -249.7288 m
428.4064 -249.7288 425.4096 -250.3244 422.3814 -251.5151 c
421.594 -251.8248 421.0038 -252.5027 420.834 -253.3316 c
420.8332 -253.3356 420.8324 -253.3396 420.8316 -253.3436 c
420.8316 -254.2089 421.2261 -254.7653 422.0163 -255.0123 c
423.3507 -255.4756 425.6249 -255.7072 428.8389 -255.7072 C
432.1892 -255.7072 L
435.5396 -255.7072 438.0044 -255.4294 439.5837 -254.8731 c
440.5102 -254.3793 440.9735 -253.4524 440.9735 -252.0924 c
440.8637 -251.0727 440.1833 -250.4397 438.9309 -250.1921 c
437.4325 -249.8837 434.9123 -249.7288 431.3724 -249.7288 c
f
*U
*u
0 D
460.1486 -205.3558 m
460.0742 -205.1811 458.9005 -202.8058 458.8276 -202.6299 c
457.4758 -199.3711 459.3053 -197.5918 461.2759 -196.5472 c
464.431 -195.3108 467.9995 -196.7839 469.3592 -199.8878 C
469.9547 -201.2472 470.6127 -202.5682 471.3334 -203.8508 c
474.078 -204.0625 476.2437 -204.96 477.8271 -206.5439 c
480.5201 -208.7095 481.8672 -212.1411 481.8672 -216.8398 C
481.7082 -220.114 480.4138 -223.4408 477.986 -226.8187 c
476.6525 -228.5485 475.307 -229.1923 473.9491 -230.1483 c
473.0327 -230.7935 473.2708 -232.2037 474.3337 -232.5591 c
475.0866 -232.8109 475.8338 -233.0713 476.5753 -233.3403 c
479.0761 -234.2475 480.7376 -236.7575 480.3022 -239.3818 c
479.7112 -242.9447 475.97 -244.8954 472.7205 -243.4739 c
472.61 -243.4256 472.4893 -243.5066 472.5019 -243.6265 c
472.5577 -244.1582 472.7018 -245.3261 472.714 -245.5429 c
472.7153 -245.5661 472.7152 -245.5911 472.718 -245.6142 c
473.0949 -248.6599 473.214 -249.5913 473.6115 -252.7275 c
474.04 -256.1088 471.6956 -259.3254 468.3095 -259.714 c
464.9919 -260.0947 463.1248 -257.7491 462.6912 -254.4595 C
462.2341 -250.9914 461.7963 -247.5331 461.3784 -244.0843 c
461.3137 -243.5509 460.8628 -243.1516 460.3255 -243.1516 c
459.7278 -243.1516 459.0657 -243.1516 y
456.67 -243.5443 454.308 -242.428 v
453.6686 -242.1258 449.9731 -239.9195 450.0348 -237.5546 C
449.6721 -236.1545 451.5576 -232.4078 454.5584 -230.4272 c
457.6043 -228.4168 463.5742 -226.6933 465.8688 -223.8093 C
468.2966 -221.0647 469.5115 -219.1364 469.5115 -218.0278 c
469.5115 -217.4472 469.3536 -216.9187 469.0367 -216.4439 c
468.7198 -216.0217 468.2439 -215.8101 467.6112 -215.8101 C
465.4797 -215.9489 463.5342 -216.8111 461.5007 -216.9437 c
458.7616 -217.1222 453.92 -216.5255 452.3559 -213.4781 c
452.02 -212.4569 l
451.2727 -209.9701 452.4866 -206.5285 457.2253 -205.4959 c
457.6668 -205.3997 458.1229 -205.3686 458.5747 -205.3658 c
460.1486 -205.3558 L
f
496.7635 -198.9524 m
497.7877 -201.1929 498.9617 -203.3446 500.2851 -205.4076 c
500.6439 -205.9668 501.2881 -206.286 501.9517 -206.2524 c
502.4184 -206.2287 502.8799 -206.2049 503.3362 -206.1809 c
503.7328 -206.16 504.0674 -205.9017 504.1986 -205.5268 c
505.3358 -202.2777 506.4111 -195.8469 507.4246 -193.4489 c
508.6759 -190.4884 512.22 -187.1235 517.2477 -188.9465 C
517.2477 -188.9465 l
522.3033 -190.5361 519.7729 -198.2927 v
519.4372 -199.3215 516.728 -204.6793 516.327 -205.6727 C
517.4272 -205.6729 L
519.8737 -205.5618 521.9659 -207.4103 522.2107 -209.8419 c
522.4625 -212.3428 l
522.7338 -215.0374 520.6478 -217.3908 517.94 -217.4375 c
515.0033 -217.4883 512.0665 -217.5833 509.13 -217.7222 c
508.3906 -217.7572 507.827 -218.4122 507.9075 -219.148 c
507.9909 -219.9113 508.0807 -220.6745 508.1766 -221.4377 c
508.2537 -222.0507 508.8087 -222.4913 509.4231 -222.4263 c
510.7471 -222.2863 512.0749 -222.1426 513.4065 -221.995 c
516.5014 -221.6521 519.2826 -223.9023 519.612 -226.9988 c
519.612 -226.9988 l
519.9399 -230.0803 517.713 -232.8571 514.633 -233.1992 c
513.4694 -233.3285 512.3117 -233.4491 511.1596 -233.5613 c
510.2928 -233.6456 509.6681 -234.4288 509.7686 -235.2939 c
509.8448 -235.95 509.9211 -236.5992 509.9974 -237.2414 c
510.1221 -238.2902 511.0343 -239.0483 512.0893 -238.9972 c
514.4008 -238.885 516.7314 -238.8045 519.0813 -238.7556 c
522.1677 -238.6914 524.7889 -241.0166 525.0981 -244.0882 c
525.0981 -244.0882 l
525.4433 -247.5164 522.7992 -250.4924 519.3552 -250.5953 c
517.3026 -250.6567 515.25 -250.7476 513.1972 -250.868 c
512.2622 -250.9229 511.5446 -251.7209 511.5795 -252.6569 c
511.7229 -256.5068 511.8664 -265.2083 512.0099 -266.443 c
512.4221 -269.9907 509.8508 -273.1947 506.297 -273.5502 c
506.2969 -273.5502 l
502.8366 -273.8964 499.7303 -271.4091 499.3131 -267.9567 c
499.1449 -266.565 498.9805 -257.2084 498.8203 -253.4613 c
498.7885 -252.7171 498.1278 -252.1571 497.3888 -252.2504 c
495.0758 -252.5421 492.763 -252.8642 490.4505 -253.2167 c
487.1033 -253.7269 484.0114 -251.3327 483.6498 -247.9662 c
483.6498 -247.9662 l
483.3119 -244.8203 485.4868 -241.9476 488.61 -241.4403 c
491.0606 -241.0423 493.5321 -240.686 496.0246 -240.3716 c
496.7796 -240.2764 497.3195 -239.5912 497.2323 -238.8353 c
497.13 -237.9476 497.0277 -237.066 496.9256 -236.1905 c
496.8306 -235.3758 496.1113 -234.7908 495.2932 -234.8501 c
494.223 -234.9278 493.1528 -234.9971 492.0826 -235.0581 c
489.113 -235.2274 486.5345 -233.0259 486.2175 -230.0684 c
486.2175 -230.0684 l
485.8768 -226.8884 488.267 -224.0776 491.46 -223.8962 c
492.4631 -223.8392 493.4711 -223.7798 494.484 -223.7179 c
495.0701 -223.6821 495.5049 -223.1588 495.4337 -222.576 c
495.3128 -221.5864 495.2016 -220.5965 495.1 -219.6066 c
495.0511 -219.1302 494.6226 -218.7817 494.1464 -218.8329 c
492.2039 -219.0416 490.2678 -219.2625 488.3379 -219.4956 c
485.4331 -219.8464 482.8103 -217.7412 482.5174 -214.83 c
482.3664 -213.328 l
482.0845 -210.5253 484.0897 -208.0093 486.8847 -207.6588 c
489.1353 -207.6525 L
488.5203 -206.5382 485.7439 -204.2992 485.2059 -203.1357 c
483.6616 -199.7955 485.1837 -196.9426 488.605 -195.5878 c
488.6051 -195.5878 l
491.7872 -194.3277 495.3406 -195.8397 496.7635 -198.9524 c
f
*U
U
u
*u
398.725 -217.4758 m
398.725 -217.4758 l
398.725 -218.616 397.8007 -219.5403 396.6604 -219.5403 c
387.2176 -219.5403 l
384.9618 -219.5403 383.4774 -217.0805 384.6355 -215.1447 c
384.6439 -215.1307 384.6523 -215.1167 384.6607 -215.1027 c
385.5045 -213.7052 387.1709 -211.8516 389.6599 -209.5419 c
391.6639 -207.6751 392.8926 -206.4094 393.3461 -205.745 c
393.9578 -204.8274 394.2637 -203.9204 394.2637 -203.0239 c
394.2637 -202.0325 393.9973 -201.2705 393.4647 -200.7379 c
392.9321 -200.2052 392.1965 -199.9389 391.2578 -199.9389 c
390.3297 -199.9389 389.5914 -200.2184 389.043 -200.7774 c
388.769 -201.0567 388.5529 -201.428 388.3947 -201.8915 c
388.0672 -202.8514 387.1254 -203.4649 386.1163 -203.364 c
386.1163 -203.364 l
384.6969 -203.2221 383.7636 -201.7639 384.2817 -200.4349 c
384.71 -199.3363 385.332 -198.4749 386.1478 -197.8507 c
387.54 -196.7854 389.2803 -196.2528 391.3685 -196.2528 c
393.6572 -196.2528 395.4555 -196.8698 396.7633 -198.1038 c
398.0711 -199.3378 398.725 -200.8723 398.725 -202.7075 c
398.725 -203.7516 398.5378 -204.7457 398.1634 -205.6896 c
397.7889 -206.6336 397.1957 -207.6223 396.3836 -208.6559 C
395.8457 -209.3415 394.8754 -210.3276 393.4726 -211.6143 c
392.0699 -212.901 391.1813 -213.7553 390.8069 -214.1772 c
390.4325 -214.5991 390.1293 -215.0104 389.8972 -215.4112 C
396.6604 -215.4112 l
397.8007 -215.4112 398.725 -216.3355 398.725 -217.4758 c
f
*U
*u
407.4455 -196.2528 m
409.692 -196.2528 411.448 -197.0544 412.7137 -198.6575 c
414.2219 -200.5559 414.976 -203.7042 414.976 -208.1022 c
414.976 -212.4897 414.2166 -215.6432 412.6978 -217.5628 c
411.4428 -219.1448 409.692 -219.9358 407.4455 -219.9358 c
405.1885 -219.9358 403.3691 -219.0683 401.9875 -217.3334 c
400.6058 -215.5984 399.915 -212.5055 399.915 -208.0548 c
399.915 -203.6884 400.6744 -200.5454 402.1931 -198.6259 c
403.4482 -197.0438 405.199 -196.2528 407.4455 -196.2528 c
f
1 D
407.4455 -199.9389 m
406.9076 -199.9389 406.4277 -200.1103 406.0058 -200.4531 c
405.584 -200.7959 405.257 -201.4102 405.025 -202.2962 c
404.7191 -203.4458 404.5662 -205.3811 404.5662 -208.1022 c
404.5662 -210.8233 404.7033 -212.6927 404.9775 -213.7105 c
405.2517 -214.7283 405.5972 -215.4059 406.0138 -215.7434 c
406.4304 -216.0809 406.9076 -216.2497 407.4455 -216.2497 c
407.9834 -216.2497 408.4633 -216.0783 408.8851 -215.7355 c
409.307 -215.3927 409.634 -214.7784 409.866 -213.8925 c
410.1719 -212.7534 410.3248 -210.8233 410.3248 -208.1022 c
410.3248 -205.3811 410.1877 -203.5117 409.9135 -202.4939 c
409.6392 -201.4761 409.2938 -200.7959 408.8772 -200.4531 c
408.4606 -200.1103 407.9834 -199.9389 407.4455 -199.9389 c
f
*U
*u
0 D
431.1637 -217.4758 m
431.1637 -217.4758 l
431.1637 -218.616 430.2393 -219.5403 429.0991 -219.5403 c
419.6563 -219.5403 l
417.4005 -219.5403 415.9161 -217.0805 417.0742 -215.1447 c
417.0826 -215.1307 417.091 -215.1167 417.0994 -215.1027 c
417.9431 -213.7052 419.6096 -211.8516 422.0986 -209.5419 c
424.1025 -207.6751 425.3312 -206.4094 425.7847 -205.745 c
426.3965 -204.8274 426.7023 -203.9204 426.7023 -203.0239 c
426.7023 -202.0325 426.436 -201.2705 425.9034 -200.7379 c
425.3708 -200.2052 424.6351 -199.9389 423.6965 -199.9389 c
422.7683 -199.9389 422.0301 -200.2184 421.4816 -200.7774 c
421.2076 -201.0567 420.9916 -201.428 420.8334 -201.8915 c
420.5059 -202.8514 419.5641 -203.4649 418.5549 -203.364 c
418.5549 -203.364 l
417.1356 -203.2221 416.2023 -201.7639 416.7204 -200.4349 c
417.1487 -199.3363 417.7707 -198.4749 418.5865 -197.8507 c
419.9787 -196.7854 421.7189 -196.2528 423.8072 -196.2528 c
426.0959 -196.2528 427.8941 -196.8698 429.2019 -198.1038 c
430.5097 -199.3378 431.1637 -200.8723 431.1637 -202.7075 c
431.1637 -203.7516 430.9764 -204.7457 430.602 -205.6896 c
430.2276 -206.6336 429.6344 -207.6223 428.8222 -208.6559 C
428.2844 -209.3415 427.314 -210.3276 425.9113 -211.6143 c
424.5086 -212.901 423.62 -213.7553 423.2456 -214.1772 c
422.8712 -214.5991 422.568 -215.0104 422.3359 -215.4112 C
429.0991 -215.4112 l
430.2393 -215.4112 431.1637 -216.3355 431.1637 -217.4758 c
f
*U
*u
434.5984 -213.0966 m
434.8385 -213.0675 l
435.7296 -212.9593 436.5324 -213.4941 436.8941 -214.3156 c
437.0787 -214.7349 437.3213 -215.0895 437.6219 -215.3796 c
438.223 -215.9596 438.9508 -216.2497 439.8051 -216.2497 c
440.7226 -216.2497 441.4952 -215.9016 442.1227 -215.2055 c
442.7503 -214.5094 443.064 -213.5708 443.064 -212.3895 c
443.064 -211.2716 442.7635 -210.3856 442.1623 -209.7317 c
441.5611 -209.0778 440.8281 -208.7509 439.9633 -208.7509 c
439.9354 -208.7509 l
438.8945 -208.7529 438.0913 -207.8355 438.231 -206.804 c
438.231 -206.804 l
438.3254 -206.1069 438.8384 -205.5063 439.5326 -205.3923 c
440.202 -205.2824 440.7463 -205.044 441.1656 -204.6771 c
441.7984 -204.1234 442.1148 -203.3878 442.1148 -202.4702 c
442.1148 -201.6897 441.8828 -201.0675 441.4187 -200.6034 c
440.9547 -200.1393 440.3377 -199.9073 439.5678 -199.9073 c
438.8084 -199.9073 438.1597 -200.171 437.6219 -200.6983 c
437.3711 -200.9441 437.1662 -201.2427 437.0072 -201.5939 c
436.6356 -202.4144 435.7276 -202.8529 434.8397 -202.702 c
434.8397 -202.702 l
433.5414 -202.4815 432.7471 -201.0887 433.3011 -199.8941 c
433.4619 -199.5474 433.6392 -199.2328 433.8329 -198.9502 c
434.4077 -198.1117 435.2093 -197.4525 436.2376 -196.9726 c
437.2659 -196.4927 438.4181 -196.2528 439.6943 -196.2528 c
441.8775 -196.2528 443.6283 -196.9489 444.9467 -198.3411 c
446.033 -199.4801 446.5762 -200.7669 446.5762 -202.2012 c
446.5762 -203.9583 445.7471 -205.4088 444.089 -206.5529 c
443.7817 -206.765 443.8464 -207.2224 444.1945 -207.3575 c
445.087 -207.7037 445.8308 -208.2473 446.4259 -208.9882 c
447.2222 -209.9796 447.6203 -211.1766 447.6203 -212.5794 c
447.6203 -214.6149 446.8767 -216.3499 445.3896 -217.7843 c
443.9025 -219.2186 442.0515 -219.9358 439.8367 -219.9358 c
437.7379 -219.9358 435.9976 -219.332 434.616 -218.1244 c
433.914 -217.5108 433.3618 -216.8013 432.9593 -215.9959 c
432.3367 -214.7498 433.2156 -213.2644 434.5984 -213.0966 c
f
*U
U
10 M-8153.0368 -275.6956 m
9049.1132 -275.6956 L
(N) *
1 Ap
0 O
0.929412 0.87924 0.890196 0.799985 0 0 0 Xa
490.5579 -275.5495 m
405.5185 -275.5495 l
402.3875 -275.5495 399.8493 -273.0113 399.8493 -269.8802 c
399.8493 -269.8802 l
399.8493 -266.7491 402.3875 -264.2109 405.5185 -264.2109 c
490.5579 -264.2109 l
493.689 -264.2109 496.2272 -266.7491 496.2272 -269.8802 c
496.2272 -269.8802 l
496.2272 -273.0113 493.689 -275.5495 490.5579 -275.5495 c
f
u
*u
0 Ap
415.2314 -293.582 m
414.3506 -293.582 L
414.3506 -290.4131 L
414.3506 -289.2676 413.9243 -288.6943 413.0723 -288.6943 c
412.6426 -288.6943 412.2808 -288.8604 411.9873 -289.1914 c
411.6938 -289.5225 411.5469 -289.9473 411.5469 -290.4668 C
411.5469 -293.582 L
410.666 -293.582 L
410.666 -285.4395 L
411.5469 -285.4395 L
411.5469 -288.9951 L
411.5684 -288.9951 L
411.9907 -288.3008 412.5923 -287.9531 413.373 -287.9531 c
414.6118 -287.9531 415.2314 -288.6992 415.2314 -290.1934 C
415.2314 -293.582 L
f
*U
*u
420.8281 -293.582 m
419.9473 -293.582 L
419.9473 -292.7227 L
419.9258 -292.7227 L
419.5425 -293.3818 418.9785 -293.7109 418.2339 -293.7109 c
417.686 -293.7109 417.2573 -293.5664 416.9478 -293.2754 c
416.6377 -292.9863 416.4829 -292.6006 416.4829 -292.1211 c
416.4829 -291.0938 417.0879 -290.4951 418.2983 -290.3271 C
419.9473 -290.0957 L
419.9473 -289.1621 419.5693 -288.6943 418.814 -288.6943 c
418.1514 -288.6943 417.5537 -288.9199 417.02 -289.3711 C
417.02 -288.4688 L
417.5605 -288.125 418.1836 -287.9531 418.8892 -287.9531 c
420.1816 -287.9531 420.8281 -288.6367 420.8281 -290.0049 C
420.8281 -293.582 L
f
1 D
419.9473 -290.7998 m
418.6206 -290.9824 L
418.2124 -291.04 417.9043 -291.1406 417.6968 -291.2861 c
417.4893 -291.4307 417.3853 -291.6875 417.3853 -292.0566 c
417.3853 -292.3252 417.481 -292.5449 417.6724 -292.7148 c
417.8643 -292.8848 418.1191 -292.9697 418.438 -292.9697 c
418.875 -292.9697 419.2358 -292.8164 419.52 -292.5107 c
419.8052 -292.2041 419.9473 -291.8164 419.9473 -291.3477 C
419.9473 -290.7998 L
f
*U
*u
0 D
423.3901 -292.7871 m
423.3687 -292.7871 L
423.3687 -296.1113 L
422.4878 -296.1113 L
422.4878 -288.082 L
423.3687 -288.082 L
423.3687 -289.0488 L
423.3901 -289.0488 L
423.8232 -288.3184 424.457 -287.9531 425.2915 -287.9531 c
426.0005 -287.9531 426.5537 -288.1992 426.9512 -288.6914 c
427.3486 -289.1836 427.5474 -289.8438 427.5474 -290.6709 c
427.5474 -291.5908 427.3237 -292.3281 426.876 -292.8809 c
426.4282 -293.4346 425.8159 -293.7109 425.0391 -293.7109 c
424.3267 -293.7109 423.7769 -293.4033 423.3901 -292.7871 C
f
1 D
423.3687 -290.5684 m
423.3687 -291.3369 L
423.3687 -291.792 423.5161 -292.1777 423.812 -292.4941 c
424.1069 -292.8115 424.4824 -292.9697 424.937 -292.9697 c
425.4707 -292.9697 425.8887 -292.7656 426.1909 -292.3574 c
426.4937 -291.9492 426.645 -291.3818 426.645 -290.6543 c
426.645 -290.043 426.5034 -289.5625 426.2207 -289.2148 c
425.938 -288.8682 425.5547 -288.6943 425.0713 -288.6943 c
424.5591 -288.6943 424.1475 -288.8721 423.8359 -289.2285 c
423.5244 -289.585 423.3687 -290.0313 423.3687 -290.5684 C
f
*U
*u
0 D
429.8569 -292.7871 m
429.8354 -292.7871 L
429.8354 -296.1113 L
428.9546 -296.1113 L
428.9546 -288.082 L
429.8354 -288.082 L
429.8354 -289.0488 L
429.8569 -289.0488 L
430.29 -288.3184 430.9238 -287.9531 431.7583 -287.9531 c
432.4673 -287.9531 433.0205 -288.1992 433.418 -288.6914 c
433.8154 -289.1836 434.0142 -289.8438 434.0142 -290.6709 c
434.0142 -291.5908 433.7905 -292.3281 433.3428 -292.8809 c
432.895 -293.4346 432.2827 -293.7109 431.5059 -293.7109 c
430.7935 -293.7109 430.2437 -293.4033 429.8569 -292.7871 C
f
1 D
429.8354 -290.5684 m
429.8354 -291.3369 L
429.8354 -291.792 429.9829 -292.1777 430.2788 -292.4941 c
430.5737 -292.8115 430.9492 -292.9697 431.4038 -292.9697 c
431.9375 -292.9697 432.3555 -292.7656 432.6577 -292.3574 c
432.9604 -291.9492 433.1118 -291.3818 433.1118 -290.6543 c
433.1118 -290.043 432.9702 -289.5625 432.6875 -289.2148 c
432.4048 -288.8682 432.0215 -288.6943 431.5381 -288.6943 c
431.0259 -288.6943 430.6143 -288.8721 430.3027 -289.2285 c
429.9912 -289.585 429.8354 -290.0313 429.8354 -290.5684 C
f
*U
*u
0 D
439.7988 -288.082 m
437.269 -294.4629 L
436.8179 -295.6016 436.1841 -296.1709 435.3677 -296.1709 c
435.1387 -296.1709 434.9468 -296.1475 434.793 -296.1016 C
434.793 -295.3115 L
434.9829 -295.376 435.1563 -295.4082 435.314 -295.4082 c
435.7578 -295.4082 436.0908 -295.1436 436.313 -294.6133 C
436.7534 -293.5713 L
434.605 -288.082 L
435.5825 -288.082 L
437.0703 -292.3145 L
437.0884 -292.3682 437.126 -292.5078 437.1831 -292.7334 C
437.2153 -292.7334 L
437.2334 -292.6475 437.269 -292.5117 437.3228 -292.3252 C
438.8857 -288.082 L
439.7988 -288.082 L
f
*U
*u
448.3232 -293.582 m
447.4424 -293.582 L
447.4424 -290.4453 L
447.4424 -289.2783 447.0166 -288.6943 446.1641 -288.6943 c
445.7236 -288.6943 445.3594 -288.8604 445.0713 -289.1914 c
444.7832 -289.5225 444.6387 -289.9404 444.6387 -290.4453 C
444.6387 -293.582 L
443.7578 -293.582 L
443.7578 -288.082 L
444.6387 -288.082 L
444.6387 -288.9951 L
444.6602 -288.9951 L
445.0752 -288.3008 445.6768 -287.9531 446.4648 -287.9531 c
447.0664 -287.9531 447.5264 -288.1475 447.8447 -288.5361 c
448.1641 -288.9248 448.3232 -289.4854 448.3232 -290.2197 C
448.3232 -293.582 L
f
*U
*u
454.4033 -291.0527 m
450.5195 -291.0527 L
450.5342 -291.6641 450.6982 -292.1367 451.0137 -292.4707 c
451.3291 -292.8027 451.7617 -292.9697 452.3135 -292.9697 c
452.9326 -292.9697 453.502 -292.7656 454.0215 -292.3574 C
454.0215 -293.1846 L
453.5381 -293.5352 452.8994 -293.7109 452.1045 -293.7109 c
451.3271 -293.7109 450.7168 -293.4609 450.2725 -292.9619 c
449.8281 -292.4619 449.6064 -291.7598 449.6064 -290.8535 c
449.6064 -289.998 449.8486 -289.3008 450.334 -288.7617 c
450.8193 -288.2227 451.4219 -287.9531 452.1416 -287.9531 c
452.8613 -287.9531 453.418 -288.1855 453.8115 -288.6514 c
454.2061 -289.1172 454.4033 -289.7637 454.4033 -290.5898 C
454.4033 -291.0527 L
f
1 D
453.501 -290.3057 m
453.4971 -289.7969 453.374 -289.4014 453.1328 -289.1191 c
452.8906 -288.8359 452.5557 -288.6943 452.126 -288.6943 c
451.71 -288.6943 451.3574 -288.8428 451.0674 -289.1406 c
450.7773 -289.4375 450.5986 -289.8262 450.5303 -290.3057 C
453.501 -290.3057 L
f
*U
*u
0 D
462.6631 -288.082 m
461.0146 -293.582 L
460.1006 -293.582 L
458.9678 -289.6445 L
458.9248 -289.4941 458.8965 -289.3242 458.8818 -289.1348 C
458.8604 -289.1348 L
458.8496 -289.2637 458.8115 -289.4297 458.7471 -289.6348 C
457.5176 -293.582 L
456.6367 -293.582 L
454.9717 -288.082 L
455.8955 -288.082 L
457.0342 -292.2178 L
457.0703 -292.3428 457.0947 -292.5078 457.1094 -292.7119 C
457.1523 -292.7119 L
457.1631 -292.5547 457.1953 -292.3857 457.249 -292.207 C
458.5166 -288.082 L
459.3223 -288.082 L
460.4609 -292.2285 L
460.4971 -292.3613 460.5234 -292.5254 460.542 -292.7227 C
460.585 -292.7227 L
460.5918 -292.583 460.6221 -292.418 460.6758 -292.2285 C
461.793 -288.082 L
462.6631 -288.082 L
f
*U
*u
471.0752 -288.082 m
468.5449 -294.4629 L
468.0938 -295.6016 467.46 -296.1709 466.6436 -296.1709 c
466.4141 -296.1709 466.2227 -296.1475 466.0693 -296.1016 C
466.0693 -295.3115 L
466.2588 -295.376 466.4326 -295.4082 466.5898 -295.4082 c
467.0342 -295.4082 467.3672 -295.1436 467.5889 -294.6133 C
468.0293 -293.5713 L
465.8809 -288.082 L
466.8584 -288.082 L
468.3467 -292.3145 L
468.3643 -292.3682 468.4014 -292.5078 468.459 -292.7334 C
468.4912 -292.7334 L
468.5088 -292.6475 468.5449 -292.5117 468.5986 -292.3252 C
470.1611 -288.082 L
471.0752 -288.082 L
f
*U
*u
476.4404 -291.0527 m
472.5566 -291.0527 L
472.5713 -291.6641 472.7354 -292.1367 473.0508 -292.4707 c
473.3662 -292.8027 473.7988 -292.9697 474.3506 -292.9697 c
474.9697 -292.9697 475.5391 -292.7656 476.0586 -292.3574 C
476.0586 -293.1846 L
475.5752 -293.5352 474.9365 -293.7109 474.1416 -293.7109 c
473.3643 -293.7109 472.7539 -293.4609 472.3096 -292.9619 c
471.8652 -292.4619 471.6436 -291.7598 471.6436 -290.8535 c
471.6436 -289.998 471.8857 -289.3008 472.3711 -288.7617 c
472.8564 -288.2227 473.459 -287.9531 474.1787 -287.9531 c
474.8984 -287.9531 475.4551 -288.1855 475.8486 -288.6514 c
476.2432 -289.1172 476.4404 -289.7637 476.4404 -290.5898 C
476.4404 -291.0527 L
f
1 D
475.5381 -290.3057 m
475.5342 -289.7969 475.4111 -289.4014 475.1699 -289.1191 c
474.9277 -288.8359 474.5928 -288.6943 474.1631 -288.6943 c
473.7471 -288.6943 473.3945 -288.8428 473.1045 -289.1406 c
472.8145 -289.4375 472.6357 -289.8262 472.5674 -290.3057 C
475.5381 -290.3057 L
f
*U
*u
0 D
481.709 -293.582 m
480.8281 -293.582 L
480.8281 -292.7227 L
480.8066 -292.7227 L
480.4238 -293.3818 479.8604 -293.7109 479.1152 -293.7109 c
478.5674 -293.7109 478.1387 -293.5664 477.8291 -293.2754 c
477.5195 -292.9863 477.3643 -292.6006 477.3643 -292.1211 c
477.3643 -291.0938 477.9697 -290.4951 479.1797 -290.3271 C
480.8281 -290.0957 L
480.8281 -289.1621 480.4512 -288.6943 479.6953 -288.6943 c
479.0332 -288.6943 478.4346 -288.9199 477.9014 -289.3711 C
477.9014 -288.4688 L
478.4424 -288.125 479.0654 -287.9531 479.7705 -287.9531 c
481.0635 -287.9531 481.709 -288.6367 481.709 -290.0049 C
481.709 -293.582 L
f
1 D
480.8281 -290.7998 m
479.502 -290.9824 L
479.0938 -291.04 478.7861 -291.1406 478.5781 -291.2861 c
478.3701 -291.4307 478.2666 -291.6875 478.2666 -292.0566 c
478.2666 -292.3252 478.3623 -292.5449 478.5537 -292.7148 c
478.7451 -292.8848 479.001 -292.9697 479.3193 -292.9697 c
479.7559 -292.9697 480.1172 -292.8164 480.4014 -292.5107 c
480.6865 -292.2041 480.8281 -291.8164 480.8281 -291.3477 C
480.8281 -290.7998 L
f
*U
*u
0 D
486.2373 -288.9736 m
486.083 -288.8555 485.8613 -288.7969 485.5713 -288.7969 c
485.1953 -288.7969 484.8809 -288.9736 484.6289 -289.3281 c
484.376 -289.6826 484.25 -290.166 484.25 -290.7783 C
484.25 -293.582 L
483.3691 -293.582 L
483.3691 -288.082 L
484.25 -288.082 L
484.25 -289.2148 L
484.2715 -289.2148 L
484.3965 -288.8281 484.5889 -288.5273 484.8467 -288.3105 c
485.1045 -288.0938 485.3926 -287.9854 485.7109 -287.9854 c
485.9404 -287.9854 486.1152 -288.0107 486.2373 -288.0605 C
486.2373 -288.9736 L
f
*U
U
*u
1 D
0.033295 0.537835 0.878965 0 0.968627 0.576471 0.117647 Xa
529.0771 -361.332 m
528.6104 -356.6787 524.9053 -353.0117 520.3721 -352.4668 C
522.6348 -350.4668 523.9316 -347.4375 523.5898 -344.2178 c
523.3584 -342.0439 522.4199 -340.0586 520.917 -338.5186 C
522.2061 -338.0293 523.374 -337.2344 524.3047 -336.1865 c
525.9043 -334.3877 526.6836 -331.9824 526.4424 -329.584 C
526.1904 -327.083 L
525.9082 -324.2822 524.3164 -321.9141 522.0732 -320.5527 C
522.9209 -318.7861 523.377 -317.7842 523.5752 -317.1768 c
524.8555 -313.252 524.7852 -309.8643 523.3662 -307.1064 c
521.8398 -304.1406 519.3252 -303.0762 518.5742 -302.8154 c
511.7344 -300.3594 505.9375 -304.332 503.7402 -309.5342 c
503.0771 -311.1025 502.5273 -313.4707 501.8906 -316.2129 c
501.7988 -316.6064 501.707 -317.0029 501.6143 -317.3965 C
501.1865 -316.5859 500.7813 -315.7637 500.4014 -314.9326 c
498.084 -309.8633 492.2578 -307.4814 487.1328 -309.5117 c
484.292 -310.6357 482.1904 -312.5977 481.2158 -315.0342 c
480.3408 -317.2236 480.3965 -319.6201 481.373 -321.9941 C
481.0947 -321.7197 480.8037 -321.457 480.499 -321.2041 C
478.7363 -319.502 476.5283 -318.3701 473.9131 -317.8242 C
473.6016 -317.2012 473.3047 -316.5664 473.0234 -315.9258 c
470.7939 -310.834 464.9922 -308.4365 459.8154 -310.4668 C
459.4023 -310.6563 L
455.5283 -312.709 453.793 -316.0205 454.5127 -319.7666 C
452.4549 -320.5193 451.0588 -321.6234 450.1028 -322.7141 C
450.4489 -321.6813 450.5762 -320.6903 450.5762 -319.8438 c
450.5762 -317.3877 449.6299 -315.0977 447.8506 -313.2344 c
445.7832 -311.0498 442.9629 -309.8955 439.6943 -309.8955 c
437.8364 -309.8955 436.105 -310.2637 434.5444 -310.9912 c
433.5314 -311.4647 432.6547 -312.0757 431.8899 -312.7891 C
429.8276 -310.8712 427.11 -309.8955 423.8071 -309.8955 c
420.8311 -309.8955 418.2568 -310.71 416.1563 -312.3154 c
415.8309 -312.5645 415.528 -312.8383 415.2394 -313.1274 C
413.2563 -311.0162 410.5855 -309.8955 407.4453 -309.8955 c
404.381 -309.8955 401.7631 -310.9477 399.8011 -312.9488 C
397.8621 -311.0941 395.2899 -310.0654 392.132 -309.9111 c
389.1595 -309.7659 386.5486 -310.4539 384.3722 -311.9549 c
382.9191 -312.9584 381.7857 -314.354 381.0031 -316.1041 c
380.2156 -317.8646 380.298 -319.8495 381.2289 -321.5503 c
382.1561 -323.244 383.8471 -324.4246 385.7535 -324.7094 c
385.8898 -324.7297 386.026 -324.7452 386.1618 -324.7567 C
383.7095 -326.8828 382.012 -328.6663 380.9614 -330.2292 c
380.651 -330.695 380.4121 -331.1888 380.2266 -331.6959 C
379.129 -330.2518 377.5466 -329.169 375.6533 -328.7529 C
374.3311 -328.4629 L
368.2578 -327.1289 366.1802 -332.2256 365.498 -333.9004 c
365.0723 -334.9463 364.4644 -336.2432 363.8208 -337.6152 c
363.1859 -338.9691 362.511 -340.4108 361.9044 -341.839 C
360.7923 -340.5524 359.4698 -339.3843 357.9302 -338.3564 C
357.7339 -338.2334 L
356.4297 -337.4688 355.0908 -336.7734 353.7275 -336.1523 C
354.0884 -334.7861 354.2661 -333.5322 354.2661 -332.3711 c
354.2661 -328.2275 352.7314 -322.5508 345.4214 -319.0371 C
345.3076 -318.9844 L
340.9302 -317.0479 335.7817 -316.0654 330.0059 -316.0654 c
327.1958 -316.0654 324.2622 -316.2656 321.249 -316.6631 C
320.356 -314.8945 319.0352 -313.7666 317.2979 -313.2959 c
312.9146 -312.1104 309.0635 -316.0176 305.874 -319.999 c
302.5835 -324.1074 299.2412 -328.7559 295.9409 -333.8164 c
294.292 -336.3457 294.187 -339.5576 295.4121 -342.1514 C
292.6846 -347.0547 291.3047 -352.1719 291.3047 -357.3975 c
291.3047 -362.0977 293.2393 -368.6553 302.4541 -373.207 C
302.8213 -373.3652 L
304.0435 -373.8232 305.3569 -374.2305 306.7476 -374.582 C
306.0073 -377.0303 305.2666 -379.5225 304.5264 -382.0576 c
303.6436 -385.083 304.0386 -388.3633 305.6108 -391.0576 c
307.0869 -393.5879 309.4097 -395.335 312.1499 -395.9785 c
317.2529 -397.1758 322.2793 -394.2373 324.0503 -389.1035 C
325.0303 -390.7734 326.354 -392.2354 328.0049 -393.4561 C
328.2207 -393.6055 L
331.5366 -395.7363 335.4946 -396.8174 339.9849 -396.8174 C
341.9502 -396.8174 L
347.0913 -396.8174 352.5278 -395.7832 358.1084 -393.7451 c
361.9419 -392.3447 364.228 -388.1104 363.4263 -383.8926 c
363.2821 -383.1356 363.0558 -382.4091 362.7612 -381.7206 C
364.1364 -382.3774 365.7064 -382.6893 367.3442 -382.5488 c
372.6973 -382.1055 378.0947 -381.7471 383.4243 -381.4805 C
383.4282 -381.6787 383.4321 -381.8779 383.4365 -382.0781 c
383.4976 -385.0781 383.5293 -386.4521 383.5776 -387.0234 c
383.7871 -389.5 384.9609 -391.7314 386.8828 -393.3066 c
388.5303 -394.6572 390.5415 -395.374 392.6367 -395.374 c
392.9849 -395.374 393.335 -395.3545 393.6865 -395.3145 c
395.4781 -395.1108 396.861 -394.4496 397.936 -393.5044 C
399.7084 -395.7463 402.4454 -397.1924 405.5186 -397.1924 C
490.5576 -397.1924 L
494.0308 -397.1924 497.0732 -395.3456 498.7786 -392.5889 C
500.6384 -394.2354 503.0722 -395.2246 505.6709 -395.2246 c
506.0098 -395.2246 506.3516 -395.208 506.6953 -395.1738 c
509.4863 -394.8945 511.9922 -393.5361 513.7529 -391.3496 c
515.5156 -389.1602 516.3076 -386.416 515.9844 -383.6338 c
515.9141 -382.9531 515.8184 -379.0811 515.7471 -376.2539 c
515.7139 -374.9141 515.6807 -373.5732 515.6475 -372.3857 C
516.9248 -372.3242 518.2061 -372.2744 519.4756 -372.2363 c
522.2334 -372.1533 524.8555 -370.9199 526.6699 -368.8516 c
528.4746 -366.7939 529.3525 -364.0527 529.0771 -361.332 c
f
0 D
312.9355 -355.5645 m
312.9287 -355.5107 312.9238 -355.4561 312.9204 -355.3984 C
312.9775 -355.1924 313.0669 -355.0195 313.1694 -354.8867 C
313.0913 -355.1113 313.0137 -355.3379 312.9355 -355.5645 C
f
343.2983 -356.21 m
341.9912 -356.9922 339.3486 -357.9023 334.0464 -358.1533 C
334.8149 -355.9463 335.6001 -353.7256 336.3926 -351.5176 c
336.4121 -351.4629 336.4351 -351.4219 336.4546 -351.3945 C
339.9849 -351.751 341.7397 -352.2754 342.5708 -352.6455 c
344.4521 -353.4951 344.4521 -354.293 344.4521 -354.8203 c
344.4521 -355.0859 344.4521 -355.5293 343.2983 -356.21 c
f
358.062 -375.6504 m
358.1435 -376.088 358.266 -376.5077 358.4106 -376.9157 C
358.1886 -376.7962 357.9667 -376.6763 357.7378 -376.5762 C
357.7964 -374.7324 357.3486 -372.876 356.3984 -371.2705 C
357.2578 -370.7588 358.084 -370.2109 358.874 -369.627 c
359.0786 -369.4842 359.2735 -369.3353 359.4697 -369.1872 C
358.1603 -371.0577 357.6414 -373.3881 358.062 -375.6504 c
f
364.5449 -365.7676 m
363.6943 -365.9601 362.8847 -366.2894 362.1368 -366.7266 C
363.3047 -365.3973 364.2169 -363.9265 364.8674 -362.3334 C
364.741 -363.4672 364.6287 -364.6097 364.5449 -365.7676 C
f
1 D
381.2695 -351.46 m
381.2695 -351.458 381.269 -351.4551 381.269 -351.4531 c
381.269 -351.4541 381.269 -351.4561 381.2695 -351.458 C
381.2695 -351.46 L
f
0 D
410.3882 -354.1377 m
410.3474 -354.2327 410.3249 -354.3339 410.2881 -354.4303 C
410.2574 -354.2799 410.2288 -354.1292 410.1899 -353.9821 C
410.2575 -354.0318 410.3189 -354.0905 410.3882 -354.1377 C
f
410.5099 -364.5365 m
409.425 -364.0353 408.2204 -363.751 406.9487 -363.751 c
406.9292 -363.751 406.9092 -363.751 406.8896 -363.751 c
406.3354 -363.7549 405.7817 -363.7598 405.229 -363.7646 C
406.4546 -363.2822 407.5615 -362.5088 408.4429 -361.4932 c
409.1364 -360.6942 409.652 -359.774 409.9935 -358.7946 C
410.3029 -360.097 410.9515 -361.2526 411.8457 -362.1729 C
411.262 -362.9345 410.8348 -363.7396 410.5099 -364.5365 C
f
414.3652 -340.9189 m
413.8466 -340.9771 413.3475 -341.0745 412.871 -341.2076 C
412.7685 -340.9342 412.6531 -340.6664 412.5237 -340.4058 C
413.2682 -340.0245 413.9572 -339.5498 414.5883 -338.9869 C
415.2731 -339.7102 416.0979 -340.2806 417.0117 -340.6565 C
416.1261 -340.7356 415.2753 -340.8172 414.3652 -340.9189 c
f
434.353 -326.7393 m
434.1162 -326.7686 L
433.814 -326.8052 433.5199 -326.8715 433.2307 -326.9516 C
433.629 -326.2991 433.9619 -325.6509 434.2293 -325.0102 C
434.2635 -325.5956 434.3832 -326.1711 434.5908 -326.7158 C
434.5117 -326.7217 434.4326 -326.7295 434.353 -326.7393 C
f
451.0467 -377.8535 m
452.0871 -375.8811 452.6133 -373.3536 452.6133 -370.291 C
452.6133 -369.9727 L
452.457 -368.9951 L
452.4747 -366.3317 451.6934 -364.0067 450.199 -362.1732 C
451.481 -363.1432 452.5714 -363.674 452.5977 -363.6865 c
454.4922 -364.582 456.374 -364.8252 457.7314 -364.8545 C
458.0518 -367.4395 458.3838 -370.0293 458.7256 -372.625 c
458.998 -374.6888 459.6889 -376.4534 460.6934 -377.8535 C
451.0467 -377.8535 L
f
462.873 -338.8027 m
462.7393 -338.9609 L
461.8701 -340.0537 459.0859 -341.3447 457.0527 -342.2871 c
455.9341 -342.8057 454.8651 -343.3087 453.8736 -343.842 C
453.5405 -342.5975 452.8899 -341.4556 451.9492 -340.5234 c
450.8466 -339.4309 449.4605 -338.7354 447.9584 -338.4883 C
448.0264 -338.4258 448.0992 -338.371 448.166 -338.3066 c
449.1353 -337.3721 449.8956 -336.3187 450.4626 -335.1813 C
453.3691 -337.9941 458.0909 -338.8129 461.7617 -338.5781 c
462.2666 -338.5459 462.7529 -338.4824 463.2217 -338.4033 C
463.1113 -338.5313 462.9941 -338.665 462.873 -338.8027 C
f
484.5957 -340.6387 m
484.623 -340.6494 484.6504 -340.6592 484.6787 -340.668 C
484.623 -340.7295 484.5674 -340.792 484.5137 -340.8545 C
484.541 -340.7822 484.5684 -340.7109 484.5957 -340.6387 C
f
481.1533 -346.9053 m
481.2344 -346.7959 L
481.6582 -346.2061 482.0547 -345.6143 482.4209 -345.0205 C
482.1924 -346.0352 482.1279 -347.0889 482.2402 -348.1367 c
482.5742 -351.2588 484.3682 -353.8799 486.8838 -355.373 C
485.9814 -355.625 485.1387 -355.9971 484.3672 -356.4707 C
484.4707 -353.1787 482.7832 -350.0605 479.9824 -348.2402 C
480.3711 -347.8516 480.7627 -347.4111 481.1533 -346.9053 C
f
490.5576 -377.8535 m
475.2039 -377.8535 L
475.2863 -377.756 475.3748 -377.6655 475.4541 -377.5645 c
477.1504 -375.4014 477.9258 -372.5957 477.5791 -369.8672 C
477.4688 -368.9922 L
477.2773 -367.4854 477.1543 -366.5156 477.0098 -365.3574 C
477.8486 -365.168 478.6689 -364.8613 479.4482 -364.4385 c
479.5107 -364.4043 479.5723 -364.3701 479.6338 -364.335 C
479.5996 -364.8936 479.6104 -365.4629 479.6729 -366.0371 c
479.9619 -368.7266 481.3564 -371.2148 483.499 -372.8643 c
485.668 -374.5332 488.3486 -375.2285 491.0527 -374.8135 c
492.3398 -374.6172 493.6338 -374.4297 494.9248 -374.2529 C
494.9551 -375.2881 494.9863 -376.4209 495.0166 -377.5596 c
495.03 -378.0565 495.0427 -378.5216 495.0551 -378.9702 C
493.7102 -378.2601 492.1813 -377.8535 490.5576 -377.8535 C
f
*U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
